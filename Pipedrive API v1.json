{
	"info": {
		"_postman_id": "e95333b6-f43d-43b7-8d53-c64ee5562381",
		"name": "Pipedrive API v1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40386055",
		"_collection_link": "https://www.postman.com/pipedrive-developers/pipedrive-api-collection/collection/aw2y932/pipedrive-api-v1?action=share&source=collection_link&creator=40386055"
	},
	"item": [
		{
			"name": "Activities",
			"item": [
				{
					"name": "Delete multiple activities in bulk",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activities?ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activities"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) The comma-separated IDs of activities that will be deleted"
								}
							]
						},
						"description": "Marks multiple activities as deleted. After 30 days, the activities will be permanently deleted. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Activities#deleteActivity\" target=\"_blank\" rel=\"noopener noreferrer\">DELETE /api/v2/activities/{id}</a> instead."
					},
					"response": [
						{
							"name": "The activities were successfully deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activities?ids=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activities"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": [\n      625,\n      627\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get all activities assigned to a particular user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activities?user_id=<integer>&filter_id=<integer>&type=<string>&limit=<integer>&start=<integer>&start_date=<date>&end_date=<date>&done=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activities"
							],
							"query": [
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "The ID of the user whose activities will be fetched. If omitted, the user associated with the API token will be used. If 0, activities for all company users will be fetched based on the permission sets."
								},
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "The ID of the filter to use (will narrow down results if used together with `user_id` parameter)"
								},
								{
									"key": "type",
									"value": "<string>",
									"description": "The type of the activity, can be one type or multiple types separated by a comma. This is in correlation with the `key_string` parameter of ActivityTypes."
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned."
								},
								{
									"key": "start",
									"value": "<integer>",
									"description": "For pagination, the position that represents the first result for the page"
								},
								{
									"key": "start_date",
									"value": "<date>",
									"description": "Use the activity due date where you wish to begin fetching activities from. Insert due date in YYYY-MM-DD format."
								},
								{
									"key": "end_date",
									"value": "<date>",
									"description": "Use the activity due date where you wish to stop fetching activities from. Insert due date in YYYY-MM-DD format."
								},
								{
									"key": "done",
									"value": "<number>",
									"description": "Whether the activity is done or not. 0 = Not done, 1 = Done. If omitted returns both done and not done activities."
								}
							]
						},
						"description": "Returns all activities assigned to a particular user."
					},
					"response": [
						{
							"name": "A list of activities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activities?user_id=<integer>&filter_id=<integer>&type=<string>&limit=100&start=0&start_date=<date>&end_date=<date>&done=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activities"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "start_date",
											"value": "<date>"
										},
										{
											"key": "end_date",
											"value": "<date>"
										},
										{
											"key": "done",
											"value": "<number>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 8,\n      \"company_id\": 22122,\n      \"user_id\": 1234,\n      \"done\": false,\n      \"type\": \"deadline\",\n      \"reference_type\": \"scheduler-service\",\n      \"reference_id\": 7,\n      \"conference_meeting_client\": \"871b8bc88d3a1202\",\n      \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n      \"conference_meeting_id\": \"17058746701\",\n      \"due_date\": \"2020-06-09\",\n      \"due_time\": \"10:00\",\n      \"duration\": \"01:00\",\n      \"busy_flag\": true,\n      \"add_time\": \"2020-06-08 12:37:56\",\n      \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n      \"last_notification_time\": \"2020-08-08 12:37:56\",\n      \"last_notification_user_id\": 7655,\n      \"notification_language_id\": 1,\n      \"subject\": \"Deadline\",\n      \"public_description\": \"This is a description\",\n      \"calendar_sync_include_context\": \"\",\n      \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n      \"org_id\": 5,\n      \"person_id\": 1101,\n      \"deal_id\": 300,\n      \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n      \"project_id\": null,\n      \"active_flag\": true,\n      \"update_time\": \"2020-08-08 12:37:56\",\n      \"update_user_id\": 5596,\n      \"gcal_event_id\": \"\",\n      \"google_calendar_id\": \"\",\n      \"google_calendar_etag\": \"\",\n      \"source_timezone\": \"\",\n      \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n      \"rec_rule_extension\": \"\",\n      \"rec_master_activity_id\": 1,\n      \"series\": [],\n      \"note\": \"A note for the activity\",\n      \"created_by_user_id\": 1234,\n      \"location_subpremise\": \"\",\n      \"location_street_number\": \"3\",\n      \"location_route\": \"Mustamäe tee\",\n      \"location_sublocality\": \"Kristiine\",\n      \"location_locality\": \"Tallinn\",\n      \"location_admin_area_level_1\": \"Harju maakond\",\n      \"location_admin_area_level_2\": \"\",\n      \"location_country\": \"Estonia\",\n      \"location_postal_code\": \"10616\",\n      \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n      \"attendees\": [\n        {\n          \"email_address\": \"attendee@pipedrivemail.com\",\n          \"is_organizer\": 0,\n          \"name\": \"Attendee\",\n          \"person_id\": 25312,\n          \"status\": \"noreply\",\n          \"user_id\": null\n        }\n      ],\n      \"participants\": [\n        {\n          \"person_id\": 17985,\n          \"primary_flag\": false\n        },\n        {\n          \"person_id\": 1101,\n          \"primary_flag\": true\n        }\n      ],\n      \"org_name\": \"Organization\",\n      \"person_name\": \"Person\",\n      \"deal_title\": \"Deal\",\n      \"owner_name\": \"Creator\",\n      \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n      \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n      \"assigned_to_user_id\": 1235,\n      \"file\": {\n        \"id\": \"376892,\",\n        \"clean_name\": \"Audio 10:55:07.m4a\",\n        \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n      }\n    }\n  ],\n  \"related_objects\": {\n    \"user\": {\n      \"1234\": {\n        \"id\": 1234,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"organization\": {\n      \"5\": {\n        \"id\": 5,\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"person\": {\n      \"1101\": {\n        \"id\": 1101,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"3421787767\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"deal\": {\n      \"300\": {\n        \"id\": 300,\n        \"title\": \"Deal\",\n        \"status\": \"open\",\n        \"value\": 856,\n        \"currency\": \"EUR\",\n        \"stage_id\": 1,\n        \"pipeline_id\": 1\n      }\n    }\n  },\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false,\n      \"next_start\": 1\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add an activity",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"due_date\": \"<date>\",\n  \"due_time\": \"<string>\",\n  \"duration\": \"<string>\",\n  \"deal_id\": \"<integer>\",\n  \"lead_id\": \"<uuid>\",\n  \"person_id\": \"<integer>\",\n  \"project_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"location\": \"<string>\",\n  \"public_description\": \"<string>\",\n  \"note\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"type\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"participants\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"busy_flag\": \"<boolean>\",\n  \"attendees\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"done\": \"<number>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/activities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activities"
							]
						},
						"description": "Adds a new activity. Includes `more_activities_scheduled_in_context` property in response's `additional_data` which indicates whether there are more undone activities scheduled with the same deal, person or organization (depending on the supplied data). For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-an-activity\" target=\"_blank\" rel=\"noopener noreferrer\">adding an activity</a>. <br /> <br /> ***Starting from 30.09.2024, activity attendees will receive updates only if the activity owner has an active calendar sync***"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"due_date\": \"<date>\",\n  \"due_time\": \"<string>\",\n  \"duration\": \"<string>\",\n  \"deal_id\": \"<integer>\",\n  \"lead_id\": \"<uuid>\",\n  \"person_id\": \"<integer>\",\n  \"project_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"location\": \"<string>\",\n  \"public_description\": \"<string>\",\n  \"note\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"type\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"participants\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"busy_flag\": \"<boolean>\",\n  \"attendees\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"done\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/activities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activities"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 8,\n    \"company_id\": 22122,\n    \"user_id\": 1234,\n    \"done\": false,\n    \"type\": \"deadline\",\n    \"reference_type\": \"scheduler-service\",\n    \"reference_id\": 7,\n    \"conference_meeting_client\": \"871b8bc88d3a1202\",\n    \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n    \"conference_meeting_id\": \"17058746701\",\n    \"due_date\": \"2020-06-09\",\n    \"due_time\": \"10:00\",\n    \"duration\": \"01:00\",\n    \"busy_flag\": true,\n    \"add_time\": \"2020-06-08 12:37:56\",\n    \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n    \"last_notification_time\": \"2020-08-08 12:37:56\",\n    \"last_notification_user_id\": 7655,\n    \"notification_language_id\": 1,\n    \"subject\": \"Deadline\",\n    \"public_description\": \"This is a description\",\n    \"calendar_sync_include_context\": \"\",\n    \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n    \"org_id\": 5,\n    \"person_id\": 1101,\n    \"deal_id\": 300,\n    \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n    \"project_id\": null,\n    \"active_flag\": true,\n    \"update_time\": \"2020-08-08 12:37:56\",\n    \"update_user_id\": 5596,\n    \"gcal_event_id\": \"\",\n    \"google_calendar_id\": \"\",\n    \"google_calendar_etag\": \"\",\n    \"source_timezone\": \"\",\n    \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n    \"rec_rule_extension\": \"\",\n    \"rec_master_activity_id\": 1,\n    \"series\": [],\n    \"note\": \"A note for the activity\",\n    \"created_by_user_id\": 1234,\n    \"location_subpremise\": \"\",\n    \"location_street_number\": \"3\",\n    \"location_route\": \"Mustamäe tee\",\n    \"location_sublocality\": \"Kristiine\",\n    \"location_locality\": \"Tallinn\",\n    \"location_admin_area_level_1\": \"Harju maakond\",\n    \"location_admin_area_level_2\": \"\",\n    \"location_country\": \"Estonia\",\n    \"location_postal_code\": \"10616\",\n    \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n    \"attendees\": [\n      {\n        \"email_address\": \"attendee@pipedrivemail.com\",\n        \"is_organizer\": 0,\n        \"name\": \"Attendee\",\n        \"person_id\": 25312,\n        \"status\": \"noreply\",\n        \"user_id\": null\n      }\n    ],\n    \"participants\": [\n      {\n        \"person_id\": 17985,\n        \"primary_flag\": false\n      },\n      {\n        \"person_id\": 1101,\n        \"primary_flag\": true\n      }\n    ],\n    \"org_name\": \"Organization\",\n    \"person_name\": \"Person\",\n    \"deal_title\": \"Deal\",\n    \"owner_name\": \"Creator\",\n    \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n    \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n    \"assigned_to_user_id\": 1235,\n    \"file\": {\n      \"id\": \"376892,\",\n      \"clean_name\": \"Audio 10:55:07.m4a\",\n      \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n    }\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"1234\": {\n        \"id\": 1234,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"organization\": {\n      \"5\": {\n        \"id\": 5,\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"cc_email\": \"org@pipedrivemail.com\",\n        \"active_flag\": true\n      }\n    },\n    \"person\": {\n      \"1101\": {\n        \"id\": 1101,\n        \"name\": \"Person\",\n        \"active_flag\": true,\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"3421787767\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"deal\": {\n      \"300\": {\n        \"id\": 300,\n        \"title\": \"Deal\",\n        \"status\": \"open\",\n        \"value\": 856,\n        \"currency\": \"EUR\",\n        \"stage_id\": 1,\n        \"pipeline_id\": 1\n      }\n    }\n  },\n  \"additional_data\": {\n    \"updates_story_id\": 2039\n  }\n}"
						}
					]
				},
				{
					"name": "Get all activities collection",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activities/collection?cursor=<string>&limit=<integer>&since=<string>&until=<string>&user_id=<integer>&done=<boolean>&type=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activities",
								"collection"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
								},
								{
									"key": "since",
									"value": "<string>",
									"description": "The time boundary that points to the start of the range of data. Datetime in ISO 8601 format. E.g. 2022-11-01 08:55:59. Operates on the `update_time` field."
								},
								{
									"key": "until",
									"value": "<string>",
									"description": "The time boundary that points to the end of the range of data. Datetime in ISO 8601 format. E.g. 2022-11-01 08:55:59. Operates on the `update_time` field."
								},
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "The ID of the user whose activities will be fetched. If omitted, all activities are returned."
								},
								{
									"key": "done",
									"value": "<boolean>",
									"description": "Whether the activity is done or not. `false` = Not done, `true` = Done. If omitted, returns both done and not done activities."
								},
								{
									"key": "type",
									"value": "<string>",
									"description": "The type of the activity, can be one type or multiple types separated by a comma. This is in correlation with the `key_string` parameter of ActivityTypes."
								}
							]
						},
						"description": "Returns all activities. Please note that only global admins (those with global permissions) can access this endpoint. Users with regular permissions will receive a 403 response. Read more about global permissions <a href=\"https://support.pipedrive.com/en/article/global-user-management\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Activities#getActivities\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/activities</a> instead."
					},
					"response": [
						{
							"name": "A collection of activities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activities/collection?cursor=<string>&limit=100&since=<string>&until=<string>&user_id=<integer>&done=<boolean>&type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activities",
										"collection"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "since",
											"value": "<string>"
										},
										{
											"key": "until",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "done",
											"value": "<boolean>"
										},
										{
											"key": "type",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 8,\n      \"company_id\": 22122,\n      \"user_id\": 1234,\n      \"done\": false,\n      \"type\": \"deadline\",\n      \"conference_meeting_client\": \"871b8bc88d3a1202\",\n      \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n      \"conference_meeting_id\": \"17058746701\",\n      \"due_date\": \"2022-06-09\",\n      \"due_time\": \"10:00\",\n      \"duration\": \"01:00\",\n      \"busy_flag\": true,\n      \"add_time\": \"2020-06-08 12:37:56\",\n      \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n      \"subject\": \"Deadline\",\n      \"public_description\": \"This is a description\",\n      \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n      \"org_id\": 5,\n      \"person_id\": 1101,\n      \"deal_id\": 300,\n      \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n      \"project_id\": null,\n      \"active_flag\": true,\n      \"update_time\": \"2020-08-08 12:37:56\",\n      \"update_user_id\": 5596,\n      \"source_timezone\": \"\",\n      \"location_subpremise\": \"\",\n      \"location_street_number\": \"3\",\n      \"location_route\": \"Mustamäe tee\",\n      \"location_sublocality\": \"Kristiine\",\n      \"location_locality\": \"Tallinn\",\n      \"location_admin_area_level_1\": \"Harju maakond\",\n      \"location_admin_area_level_2\": \"\",\n      \"location_country\": \"Estonia\",\n      \"location_postal_code\": \"10616\",\n      \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\"\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"eyJhY3Rpdml0aWVzIjoyN30\"\n  }\n}"
						},
						{
							"name": "Forbidden response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activities/collection?cursor=<string>&limit=100&since=<string>&until=<string>&user_id=<integer>&done=<boolean>&type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activities",
										"collection"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "since",
											"value": "<string>"
										},
										{
											"key": "until",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "done",
											"value": "<boolean>"
										},
										{
											"key": "type",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You do not have permissions to do this.\",\n  \"error_info\": \"Please check developers.pipedrive.com\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Delete an activity",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activities/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activities",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the activity"
								}
							]
						},
						"description": "Marks an activity as deleted. After 30 days, the activity will be permanently deleted."
					},
					"response": [
						{
							"name": "The activity was successfully deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the activity"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 624\n  }\n}"
						}
					]
				},
				{
					"name": "Get details of an activity",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activities/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activities",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the activity"
								}
							]
						},
						"description": "Returns the details of a specific activity."
					},
					"response": [
						{
							"name": "The request was successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the activity"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 8,\n    \"company_id\": 22122,\n    \"user_id\": 1234,\n    \"done\": false,\n    \"type\": \"deadline\",\n    \"reference_type\": \"scheduler-service\",\n    \"reference_id\": 7,\n    \"conference_meeting_client\": \"871b8bc88d3a1202\",\n    \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n    \"conference_meeting_id\": \"17058746701\",\n    \"due_date\": \"2020-06-09\",\n    \"due_time\": \"10:00\",\n    \"duration\": \"01:00\",\n    \"busy_flag\": true,\n    \"add_time\": \"2020-06-08 12:37:56\",\n    \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n    \"last_notification_time\": \"2020-08-08 12:37:56\",\n    \"last_notification_user_id\": 7655,\n    \"notification_language_id\": 1,\n    \"subject\": \"Deadline\",\n    \"public_description\": \"This is a description\",\n    \"calendar_sync_include_context\": \"\",\n    \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n    \"org_id\": 5,\n    \"person_id\": 1101,\n    \"deal_id\": 300,\n    \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n    \"project_id\": null,\n    \"active_flag\": true,\n    \"update_time\": \"2020-08-08 12:37:56\",\n    \"update_user_id\": 5596,\n    \"gcal_event_id\": \"\",\n    \"google_calendar_id\": \"\",\n    \"google_calendar_etag\": \"\",\n    \"source_timezone\": \"\",\n    \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n    \"rec_rule_extension\": \"\",\n    \"rec_master_activity_id\": 1,\n    \"series\": [],\n    \"note\": \"A note for the activity\",\n    \"created_by_user_id\": 1234,\n    \"location_subpremise\": \"\",\n    \"location_street_number\": \"3\",\n    \"location_route\": \"Mustamäe tee\",\n    \"location_sublocality\": \"Kristiine\",\n    \"location_locality\": \"Tallinn\",\n    \"location_admin_area_level_1\": \"Harju maakond\",\n    \"location_admin_area_level_2\": \"\",\n    \"location_country\": \"Estonia\",\n    \"location_postal_code\": \"10616\",\n    \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n    \"attendees\": [\n      {\n        \"email_address\": \"attendee@pipedrivemail.com\",\n        \"is_organizer\": 0,\n        \"name\": \"Attendee\",\n        \"person_id\": 25312,\n        \"status\": \"noreply\",\n        \"user_id\": null\n      }\n    ],\n    \"participants\": [\n      {\n        \"person_id\": 17985,\n        \"primary_flag\": false\n      },\n      {\n        \"person_id\": 1101,\n        \"primary_flag\": true\n      }\n    ],\n    \"org_name\": \"Organization\",\n    \"person_name\": \"Person\",\n    \"deal_title\": \"Deal\",\n    \"owner_name\": \"Creator\",\n    \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n    \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n    \"assigned_to_user_id\": 1235,\n    \"file\": {\n      \"id\": \"376892,\",\n      \"clean_name\": \"Audio 10:55:07.m4a\",\n      \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n    }\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"1234\": {\n        \"id\": 1234,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"organization\": {\n      \"5\": {\n        \"id\": 5,\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"person\": {\n      \"1101\": {\n        \"id\": 1101,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"3421787767\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"deal\": {\n      \"300\": {\n        \"id\": 300,\n        \"title\": \"Deal\",\n        \"status\": \"open\",\n        \"value\": 856,\n        \"currency\": \"EUR\",\n        \"stage_id\": 1,\n        \"pipeline_id\": 1\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update an activity",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"due_date\": \"<date>\",\n  \"due_time\": \"<string>\",\n  \"duration\": \"<string>\",\n  \"deal_id\": \"<integer>\",\n  \"lead_id\": \"<uuid>\",\n  \"person_id\": \"<integer>\",\n  \"project_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"location\": \"<string>\",\n  \"public_description\": \"<string>\",\n  \"note\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"type\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"participants\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"busy_flag\": \"<boolean>\",\n  \"attendees\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"done\": \"<number>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/activities/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activities",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the activity"
								}
							]
						},
						"description": "Updates an activity. Includes `more_activities_scheduled_in_context` property in response's `additional_data` which indicates whether there are more undone activities scheduled with the same deal, person or organization (depending on the supplied data). <br /> <br /> ***Starting from 30.09.2024, activity attendees will receive updates only if the activity owner has an active calendar sync***"
					},
					"response": [
						{
							"name": "The request was successful",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"due_date\": \"<date>\",\n  \"due_time\": \"<string>\",\n  \"duration\": \"<string>\",\n  \"deal_id\": \"<integer>\",\n  \"lead_id\": \"<uuid>\",\n  \"person_id\": \"<integer>\",\n  \"project_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"location\": \"<string>\",\n  \"public_description\": \"<string>\",\n  \"note\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"type\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"participants\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"busy_flag\": \"<boolean>\",\n  \"attendees\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"done\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/activities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the activity"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 8,\n    \"company_id\": 22122,\n    \"user_id\": 1234,\n    \"done\": false,\n    \"type\": \"deadline\",\n    \"reference_type\": \"scheduler-service\",\n    \"reference_id\": 7,\n    \"conference_meeting_client\": \"871b8bc88d3a1202\",\n    \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n    \"conference_meeting_id\": \"17058746701\",\n    \"due_date\": \"2020-06-09\",\n    \"due_time\": \"10:00\",\n    \"duration\": \"01:00\",\n    \"busy_flag\": true,\n    \"add_time\": \"2020-06-08 12:37:56\",\n    \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n    \"last_notification_time\": \"2020-08-08 12:37:56\",\n    \"last_notification_user_id\": 7655,\n    \"notification_language_id\": 1,\n    \"subject\": \"Deadline\",\n    \"public_description\": \"This is a description\",\n    \"calendar_sync_include_context\": \"\",\n    \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n    \"org_id\": 5,\n    \"person_id\": 1101,\n    \"deal_id\": 300,\n    \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n    \"project_id\": null,\n    \"active_flag\": true,\n    \"update_time\": \"2020-08-08 12:37:56\",\n    \"update_user_id\": 5596,\n    \"gcal_event_id\": \"\",\n    \"google_calendar_id\": \"\",\n    \"google_calendar_etag\": \"\",\n    \"source_timezone\": \"\",\n    \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n    \"rec_rule_extension\": \"\",\n    \"rec_master_activity_id\": 1,\n    \"series\": [],\n    \"note\": \"A note for the activity\",\n    \"created_by_user_id\": 1234,\n    \"location_subpremise\": \"\",\n    \"location_street_number\": \"3\",\n    \"location_route\": \"Mustamäe tee\",\n    \"location_sublocality\": \"Kristiine\",\n    \"location_locality\": \"Tallinn\",\n    \"location_admin_area_level_1\": \"Harju maakond\",\n    \"location_admin_area_level_2\": \"\",\n    \"location_country\": \"Estonia\",\n    \"location_postal_code\": \"10616\",\n    \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n    \"attendees\": [\n      {\n        \"email_address\": \"attendee@pipedrivemail.com\",\n        \"is_organizer\": 0,\n        \"name\": \"Attendee\",\n        \"person_id\": 25312,\n        \"status\": \"noreply\",\n        \"user_id\": null\n      }\n    ],\n    \"participants\": [\n      {\n        \"person_id\": 17985,\n        \"primary_flag\": false\n      },\n      {\n        \"person_id\": 1101,\n        \"primary_flag\": true\n      }\n    ],\n    \"org_name\": \"Organization\",\n    \"person_name\": \"Person\",\n    \"deal_title\": \"Deal\",\n    \"owner_name\": \"Creator\",\n    \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n    \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n    \"assigned_to_user_id\": 1235,\n    \"file\": {\n      \"id\": \"376892,\",\n      \"clean_name\": \"Audio 10:55:07.m4a\",\n      \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n    }\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"1234\": {\n        \"id\": 1234,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"organization\": {\n      \"5\": {\n        \"id\": 5,\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"cc_email\": \"org@pipedrivemail.com\",\n        \"active_flag\": true\n      }\n    },\n    \"person\": {\n      \"1101\": {\n        \"id\": 1101,\n        \"name\": \"Person\",\n        \"active_flag\": true,\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"3421787767\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"deal\": {\n      \"300\": {\n        \"id\": 300,\n        \"title\": \"Deal\",\n        \"status\": \"open\",\n        \"value\": 856,\n        \"currency\": \"EUR\",\n        \"stage_id\": 1,\n        \"pipeline_id\": 1\n      }\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Activities are appointments/tasks/events on a calendar that can be associated with a deal, a lead, a person and an organization. Activities can be of different type (such as call, meeting, lunch or a custom type - see ActivityTypes object) and can be assigned to a particular user. Note that activities can also be created without a specific date/time.\n"
		},
		{
			"name": "ActivityFields",
			"item": [
				{
					"name": "Get all activity fields",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activityFields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activityFields"
							]
						},
						"description": "Returns all activity fields."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activityFields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activityFields"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"key\": \"title\",\n      \"name\": \"Title\",\n      \"order_nr\": 2,\n      \"field_type\": \"varchar\",\n      \"add_time\": \"2019-02-04 13:58:03\",\n      \"update_time\": \"2019-02-04 13:58:03\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": false,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": true,\n      \"add_visible_flag\": true,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"options\": null,\n      \"mandatory_flag\": true\n    },\n    {\n      \"id\": 2,\n      \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n      \"name\": \"Customer Type\",\n      \"order_nr\": 1,\n      \"field_type\": \"enum\",\n      \"add_time\": \"2019-02-04 13:58:03\",\n      \"update_time\": \"2019-02-04 13:58:03\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": true,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": true,\n      \"add_visible_flag\": false,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"options\": [\n        {\n          \"id\": 190,\n          \"label\": \"Private person\"\n        },\n        {\n          \"id\": 191,\n          \"label\": \"Company\"\n        },\n        {\n          \"id\": 192,\n          \"label\": \"Government\"\n        }\n      ],\n      \"mandatory_flag\": true\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Activity fields represent different fields that an activity has.\n"
		},
		{
			"name": "ActivityTypes",
			"item": [
				{
					"name": "Delete multiple activity types in bulk",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activityTypes?ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activityTypes"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) The comma-separated activity type IDs"
								}
							]
						},
						"description": "Marks multiple activity types as deleted."
					},
					"response": [
						{
							"name": "The activity types were successfully deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activityTypes?ids=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activityTypes"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": [\n      1,\n      2,\n      3\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get all activity types",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activityTypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activityTypes"
							]
						},
						"description": "Returns all activity types."
					},
					"response": [
						{
							"name": "A list of activity types",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activityTypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activityTypes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 4,\n      \"order_nr\": 1,\n      \"name\": \"Deadline\",\n      \"key_string\": \"deadline\",\n      \"icon_key\": \"deadline\",\n      \"active_flag\": true,\n      \"color\": \"FFFFFF\",\n      \"is_custom_flag\": false,\n      \"add_time\": \"2019-10-04 16:24:55\",\n      \"update_time\": \"2020-03-11 13:53:01\"\n    },\n    {\n      \"id\": 5,\n      \"order_nr\": 2,\n      \"name\": \"Call\",\n      \"key_string\": \"call\",\n      \"icon_key\": \"call\",\n      \"active_flag\": true,\n      \"color\": \"FFFFFF\",\n      \"is_custom_flag\": false,\n      \"add_time\": \"2019-12-21 19:44:01\",\n      \"update_time\": \"2019-12-21 19:44:01\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add new activity type",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"icon_key\": \"<string>\",\n  \"color\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/activityTypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activityTypes"
							]
						},
						"description": "Adds a new activity type."
					},
					"response": [
						{
							"name": "The activity type was successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"call\",\n  \"icon_key\": \"<string>\",\n  \"color\": \"FFFFFF\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/activityTypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activityTypes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 12,\n    \"order_nr\": 1,\n    \"name\": \"Video call\",\n    \"key_string\": \"video_call\",\n    \"icon_key\": \"camera\",\n    \"active_flag\": true,\n    \"color\": \"aeb31b\",\n    \"is_custom_flag\": true,\n    \"add_time\": \"2020-09-01 10:16:23\",\n    \"update_time\": \"2020-09-01 10:16:23\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete an activity type",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activityTypes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activityTypes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the activity type"
								}
							]
						},
						"description": "Marks an activity type as deleted."
					},
					"response": [
						{
							"name": "The activity type was successfully deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activityTypes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activityTypes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the activity type"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 12,\n    \"order_nr\": 1,\n    \"name\": \"Video call\",\n    \"key_string\": \"video_call\",\n    \"icon_key\": \"camera\",\n    \"active_flag\": false,\n    \"color\": \"aeb31b\",\n    \"is_custom_flag\": true,\n    \"add_time\": \"2020-09-01 10:16:23\",\n    \"update_time\": \"2020-09-01 19:59:59\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update an activity type",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"icon_key\": \"<string>\",\n  \"color\": \"<string>\",\n  \"order_nr\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/activityTypes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activityTypes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the activity type"
								}
							]
						},
						"description": "Updates an activity type."
					},
					"response": [
						{
							"name": "The activity type was successfully updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"icon_key\": \"<string>\",\n  \"color\": \"<string>\",\n  \"order_nr\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/activityTypes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activityTypes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the activity type"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 12,\n    \"order_nr\": 1,\n    \"name\": \"Video call\",\n    \"key_string\": \"video_call\",\n    \"icon_key\": \"camera\",\n    \"active_flag\": true,\n    \"color\": \"aeb31b\",\n    \"is_custom_flag\": true,\n    \"add_time\": \"2020-09-01 10:16:23\",\n    \"update_time\": \"2020-09-01 14:12:09\"\n  }\n}"
						}
					]
				}
			],
			"description": "Activity types represent different kinds of activities that can be stored. Each activity type is presented to the user with an icon and a name. Additionally, a color can be defined (not implemented in the Pipedrive app as of today). Activity types are linked to activities via `ActivityType.key_string = Activity.type`. The `key_string` will be generated by the API based on the given name of the activity type upon creation, and cannot be changed. Activity types should be presented to the user in an ordered manner, using the `ActivityType.order_nr` value.\n"
		},
		{
			"name": "Billing",
			"item": [
				{
					"name": "Get all add-ons for a single company",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/billing/subscriptions/addons",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"billing",
								"subscriptions",
								"addons"
							]
						},
						"description": "Returns the add-ons for a single company."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/billing/subscriptions/addons",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billing",
										"subscriptions",
										"addons"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"code\": \"leadbooster_v2\"\n    },\n    {\n      \"code\": \"prospector\"\n    },\n    {\n      \"code\": \"smart_docs_v2\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"description": "Billing is responsible for handling your subscriptions, payments, plans and add-ons.\n"
		},
		{
			"name": "CallLogs",
			"item": [
				{
					"name": "Add a call log",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"to_phone_number\": \"<string>\",\n  \"outcome\": \"<string>\",\n  \"start_time\": \"<dateTime>\",\n  \"end_time\": \"<dateTime>\",\n  \"user_id\": \"<integer>\",\n  \"activity_id\": \"<integer>\",\n  \"subject\": \"<string>\",\n  \"duration\": \"<string>\",\n  \"from_phone_number\": \"<string>\",\n  \"person_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"deal_id\": \"<integer>\",\n  \"lead_id\": \"<uuid>\",\n  \"note\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/callLogs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"callLogs"
							]
						},
						"description": "Adds a new call log."
					},
					"response": [
						{
							"name": "The call log was successfully created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"to_phone_number\": \"<string>\",\n  \"outcome\": \"<string>\",\n  \"start_time\": \"<dateTime>\",\n  \"end_time\": \"<dateTime>\",\n  \"user_id\": \"<integer>\",\n  \"activity_id\": \"<integer>\",\n  \"subject\": \"<string>\",\n  \"duration\": \"<string>\",\n  \"from_phone_number\": \"<string>\",\n  \"person_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"deal_id\": \"<integer>\",\n  \"lead_id\": \"<uuid>\",\n  \"note\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/callLogs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"callLogs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"CAd92b224eb4a39b5ad8fea92ff0e\",\n    \"activity_id\": 7007,\n    \"person_id\": 333222111,\n    \"org_id\": 123456789,\n    \"deal_id\": 553229734,\n    \"subject\": \"Just call me maybe\",\n    \"duration\": \"0\",\n    \"outcome\": \"busy\",\n    \"from_phone_number\": \"+37277774841\",\n    \"to_phone_number\": \"+37249234343\",\n    \"has_recording\": false,\n    \"start_time\": \"2022-12-12T01:01:01.000Z\",\n    \"end_time\": \"2022-12-12T01:02:01.000Z\",\n    \"user_id\": 777707777,\n    \"company_id\": 66660666,\n    \"note\": \"A note for the call log\"\n  }\n}"
						},
						{
							"name": "The request contains wrong or incorrectly formatted arguments.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"to_phone_number\": \"<string>\",\n  \"outcome\": \"<string>\",\n  \"start_time\": \"<dateTime>\",\n  \"end_time\": \"<dateTime>\",\n  \"user_id\": \"<integer>\",\n  \"activity_id\": \"<integer>\",\n  \"subject\": \"<string>\",\n  \"duration\": \"<string>\",\n  \"from_phone_number\": \"<string>\",\n  \"person_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"deal_id\": \"<integer>\",\n  \"lead_id\": \"<uuid>\",\n  \"note\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/callLogs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"callLogs"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"\\\"outcome\\\" is required.\",\n  \"error_info\": \"Please check developers.pipedrive.com for more information about Pipedrive API.\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						},
						{
							"name": "You don't have permission to access the resource.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"to_phone_number\": \"<string>\",\n  \"outcome\": \"<string>\",\n  \"start_time\": \"<dateTime>\",\n  \"end_time\": \"<dateTime>\",\n  \"user_id\": \"<integer>\",\n  \"activity_id\": \"<integer>\",\n  \"subject\": \"<string>\",\n  \"duration\": \"<string>\",\n  \"from_phone_number\": \"<string>\",\n  \"person_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"deal_id\": \"<integer>\",\n  \"lead_id\": \"<uuid>\",\n  \"note\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/callLogs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"callLogs"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You don't have permission to change this resource.\",\n  \"error_info\": \"Please check developers.pipedrive.com for more information about Pipedrive API.\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						},
						{
							"name": "A resource required to process the request was not found.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"to_phone_number\": \"<string>\",\n  \"outcome\": \"<string>\",\n  \"start_time\": \"<dateTime>\",\n  \"end_time\": \"<dateTime>\",\n  \"user_id\": \"<integer>\",\n  \"activity_id\": \"<integer>\",\n  \"subject\": \"<string>\",\n  \"duration\": \"<string>\",\n  \"from_phone_number\": \"<string>\",\n  \"person_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"deal_id\": \"<integer>\",\n  \"lead_id\": \"<uuid>\",\n  \"note\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/callLogs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"callLogs"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"A resource required for this operation was not found.\",\n  \"error_info\": \"Please check developers.pipedrive.com for more information about Pipedrive API.\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						},
						{
							"name": "There was an error processing the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"to_phone_number\": \"<string>\",\n  \"outcome\": \"<string>\",\n  \"start_time\": \"<dateTime>\",\n  \"end_time\": \"<dateTime>\",\n  \"user_id\": \"<integer>\",\n  \"activity_id\": \"<integer>\",\n  \"subject\": \"<string>\",\n  \"duration\": \"<string>\",\n  \"from_phone_number\": \"<string>\",\n  \"person_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"deal_id\": \"<integer>\",\n  \"lead_id\": \"<uuid>\",\n  \"note\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/callLogs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"callLogs"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"An internal server error occurred\",\n  \"error_info\": \"Please check developers.pipedrive.com for more information about Pipedrive API.\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Get all call logs assigned to a particular user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/callLogs?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"callLogs"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "For pagination, the limit of entries to be returned. The upper limit is 50."
								}
							]
						},
						"description": "Returns all call logs assigned to a particular user."
					},
					"response": [
						{
							"name": "A list of call logs.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/callLogs?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"callLogs"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"CAd92b224eb4a39b5ad8fea92ff0e\",\n      \"activity_id\": 7007,\n      \"person_id\": 333222111,\n      \"org_id\": 123456789,\n      \"deal_id\": 553229734,\n      \"subject\": \"Just call me maybe\",\n      \"duration\": \"0\",\n      \"outcome\": \"busy\",\n      \"from_phone_number\": \"+37277774841\",\n      \"to_phone_number\": \"+37249234343\",\n      \"has_recording\": false,\n      \"start_time\": \"2022-12-12T01:01:01.000Z\",\n      \"end_time\": \"2022-12-12T01:01:01.000Z\",\n      \"user_id\": 777707777,\n      \"company_id\": 66660666,\n      \"note\": \"A note for the call log\"\n    },\n    {\n      \"id\": \"CAd92b224eb4a39b11a8fea92ff0e\",\n      \"activity_id\": 1,\n      \"person_id\": 1,\n      \"duration\": \"0\",\n      \"outcome\": \"no_answer\",\n      \"to_phone_number\": \"+3728439832\",\n      \"has_recording\": true,\n      \"start_time\": \"2022-12-12T01:01:01.000Z\",\n      \"end_time\": \"2022-12-12T01:01:01.000Z\",\n      \"user_id\": 777777777,\n      \"company_id\": 66666666,\n      \"note\": \"A note for the call log\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 50,\n      \"more_items_in_collection\": false,\n      \"next_start\": 1\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a call log",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/callLogs/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"callLogs",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The ID received when you create the call log"
								}
							]
						},
						"description": "Deletes a call log. If there is an audio recording attached to it, it will also be deleted. The related activity will not be removed by this request. If you want to remove the related activities, please use the endpoint which is specific for activities."
					},
					"response": [
						{
							"name": "The call log was successfully deleted.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/callLogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"callLogs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID received when you create the call log"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true\n}"
						},
						{
							"name": "You don't have permission to access the resource.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/callLogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"callLogs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID received when you create the call log"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You don't have permission to change this resource.\",\n  \"error_info\": \"Please check developers.pipedrive.com for more information about Pipedrive API.\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						},
						{
							"name": "A resource required to process the request was not found.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/callLogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"callLogs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID received when you create the call log"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"A resource required for this operation was not found.\",\n  \"error_info\": \"Please check developers.pipedrive.com for more information about Pipedrive API.\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						},
						{
							"name": "The callLog you are trying to access is no longer available.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/callLogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"callLogs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID received when you create the call log"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"The callLog you are trying to access is no longer available\",\n  \"error_info\": \"Please check developers.pipedrive.com for more information about Pipedrive API.\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						},
						{
							"name": "There was an error processing the request.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/callLogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"callLogs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID received when you create the call log"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"An internal server error occurred\",\n  \"error_info\": \"Please check developers.pipedrive.com for more information about Pipedrive API.\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Get details of a call log",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/callLogs/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"callLogs",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The ID received when you create the call log"
								}
							]
						},
						"description": "Returns details of a specific call log."
					},
					"response": [
						{
							"name": "The requested call log object.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/callLogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"callLogs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID received when you create the call log"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"CAd92b224eb4a39b5ad8fea92ff0e\",\n    \"activity_id\": 7007,\n    \"person_id\": 333222111,\n    \"org_id\": 123456789,\n    \"deal_id\": 553229734,\n    \"subject\": \"Just call me maybe\",\n    \"duration\": \"0\",\n    \"outcome\": \"busy\",\n    \"from_phone_number\": \"+37277774841\",\n    \"to_phone_number\": \"+37249234343\",\n    \"has_recording\": false,\n    \"start_time\": \"2022-12-12T01:01:01.000Z\",\n    \"end_time\": \"2022-12-12T01:02:01.000Z\",\n    \"user_id\": 777707777,\n    \"company_id\": 66660666,\n    \"note\": \"A note for the call log\"\n  }\n}"
						},
						{
							"name": "A resource required to process the request was not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/callLogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"callLogs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID received when you create the call log"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"A resource required for this operation was not found.\",\n  \"error_info\": \"Please check developers.pipedrive.com for more information about Pipedrive API.\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Attach an audio file to the call log",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) Audio file supported by the HTML5 specification",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/callLogs/:id/recordings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"callLogs",
								":id",
								"recordings"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The ID received when you create the call log"
								}
							]
						},
						"description": "Adds an audio recording to the call log. That audio can be played by those who have access to the call log object."
					},
					"response": [
						{
							"name": "The audio recording was successfully added to the log.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>",
											"description": "(Required) Audio file supported by the HTML5 specification",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/callLogs/:id/recordings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"callLogs",
										":id",
										"recordings"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID received when you create the call log"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true\n}"
						},
						{
							"name": "A resource required to process the request was not found.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>",
											"description": "(Required) Audio file supported by the HTML5 specification",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/callLogs/:id/recordings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"callLogs",
										":id",
										"recordings"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID received when you create the call log"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"A resource required for this operation was not found.\",\n  \"error_info\": \"Please check developers.pipedrive.com for more information about Pipedrive API.\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						},
						{
							"name": "Recording for this call already exists.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>",
											"description": "(Required) Audio file supported by the HTML5 specification",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/callLogs/:id/recordings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"callLogs",
										":id",
										"recordings"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID received when you create the call log"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"A recording for this call already exists\",\n  \"error_info\": \"Please check developers.pipedrive.com for more information about Pipedrive API.\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						},
						{
							"name": "There was an error processing the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>",
											"description": "(Required) Audio file supported by the HTML5 specification",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/callLogs/:id/recordings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"callLogs",
										":id",
										"recordings"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID received when you create the call log"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"An internal server error occurred\",\n  \"error_info\": \"Please check developers.pipedrive.com for more information about Pipedrive API.\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				}
			],
			"description": "Call logs describe the outcome of a phone call managed by an integrated provider. Since these logs are also considered activities, they can be associated with a deal or a lead, a person and/or an organization. Call logs do differ from other activities, as they only receive the information needed to describe the phone call.\n"
		},
		{
			"name": "Channels",
			"item": [
				{
					"name": "Add a channel",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"provider_channel_id\": \"<string>\",\n  \"avatar_url\": \"<url>\",\n  \"template_support\": false,\n  \"provider_type\": \"other\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/channels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"channels"
							]
						},
						"description": "Adds a new messaging channel, only admins are able to register new channels. It will use the getConversations endpoint to fetch conversations, participants and messages afterward. To use the endpoint, you need to have **Messengers integration** OAuth scope enabled and the Messaging manifest ready for the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension)."
					},
					"response": [
						{
							"name": "The channel registered",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"My Channel\",\n  \"provider_channel_id\": \"<string>\",\n  \"avatar_url\": \"<url>\",\n  \"template_support\": false,\n  \"provider_type\": \"other\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"e283f878-7ef9-4294-8e5c-04a7d003fd92\",\n    \"name\": \"My Channel\",\n    \"avatar_url\": \"http://my-domain.com/images/test.png\",\n    \"provider_channel_id\": \"e283f878-7ef9-4294-8e5c-04a7d003fd92\",\n    \"marketplace_client_id\": \"57da5c3c55a82bb4\",\n    \"pd_company_id\": 123,\n    \"pd_user_id\": 321,\n    \"created_at\": \"2022-03-01 00:00:00\",\n    \"provider_type\": \"other\",\n    \"template_support\": false\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"My Channel\",\n  \"provider_channel_id\": \"<string>\",\n  \"avatar_url\": \"<url>\",\n  \"template_support\": false,\n  \"provider_type\": \"other\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"Expected { name: string; avatar_url?: string; provider_channel_id: string; }, but was incompatible\",\n  \"error_info\": \"Please check the reference docs in https://developers.pipedrive.com/docs/api/v1\",\n  \"additional_data\": {\n    \"code\": \"INVALID_BODY\"\n  }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"My Channel\",\n  \"provider_channel_id\": \"<string>\",\n  \"avatar_url\": \"<url>\",\n  \"template_support\": false,\n  \"provider_type\": \"other\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"Only admins can register channels\",\n  \"error_info\": \"Please check the reference docs in https://developers.pipedrive.com/docs/api/v1\",\n  \"additional_data\": {\n    \"code\": \"ADMIN_ONLY\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a channel",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/channels/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"channels",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The ID of the channel provided by the integration"
								}
							]
						},
						"description": "Deletes an existing messenger’s channel and all related entities (conversations and messages). To use the endpoint, you need to have **Messengers integration** OAuth scope enabled and the Messaging manifest ready for the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension)."
					},
					"response": [
						{
							"name": "The channel was deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the channel provided by the integration"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the channel provided by the integration"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"Expected { name: string; avatar_url?: string; provider_channel_id: string; }, but was incompatible\",\n  \"error_info\": \"Please check the reference docs in https://developers.pipedrive.com/docs/api/v1\",\n  \"additional_data\": {\n    \"code\": \"INVALID_BODY\"\n  }\n}"
						}
					]
				},
				{
					"name": "Receives an incoming message",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<string>\",\n  \"channel_id\": \"<string>\",\n  \"sender_id\": \"<string>\",\n  \"conversation_id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"reply_by\": \"<dateTime>\",\n  \"conversation_link\": \"<url>\",\n  \"attachments\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"size\": \"<number>\",\n      \"preview_url\": \"<string>\",\n      \"link_expires\": false\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"size\": \"<number>\",\n      \"preview_url\": \"<string>\",\n      \"link_expires\": false\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/channels/messages/receive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"channels",
								"messages",
								"receive"
							]
						},
						"description": "Adds a message to a conversation. To use the endpoint, you need to have **Messengers integration** OAuth scope enabled and the Messaging manifest ready for the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension)."
					},
					"response": [
						{
							"name": "The message was registered in the conversation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"channel_id\": \"<string>\",\n  \"sender_id\": \"<string>\",\n  \"conversation_id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"reply_by\": \"<dateTime>\",\n  \"conversation_link\": \"<url>\",\n  \"attachments\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"size\": \"<number>\",\n      \"preview_url\": \"<string>\",\n      \"link_expires\": false\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"size\": \"<number>\",\n      \"preview_url\": \"<string>\",\n      \"link_expires\": false\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/channels/messages/receive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels",
										"messages",
										"receive"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"e283f878-7ef9-4294-8e5c-04a7d003fd92\",\n    \"channel_id\": \"a8aa4db0-91bb-4e90-b9c0-0c6291307e2f\",\n    \"sender_id\": \"5d4bd467-d847-4088-ae43-0c7614233bab\",\n    \"conversation_id\": \"063ffa46-831c-4027-a04c-b65e17f077b7\",\n    \"message\": \"This is a message\",\n    \"status\": \"sent\",\n    \"created_at\": \"2022-03-01T07:58:35.449Z\",\n    \"reply_by\": \"2022-03-01T07:58:35.449Z\",\n    \"conversation_link\": \"http://my-server.com/conversations/063ffa46-831c-4027-a04c-b65e17f077b7\",\n    \"attachments\": [\n      {\n        \"id\": \"b0369d1d-6b6a-4293-88b9-e2924782d47e\",\n        \"type\": \"image/png\",\n        \"name\": \"Image Name\",\n        \"size\": 600,\n        \"url\": \"http://my-server.com/images/b0369d1d-6b6a-4293-88b9-e2924782d47e.png\",\n        \"preview_url\": \"http://my-server.com/images/b0369d1d-6b6a-4293-88b9-e2924782d47e.preview.png\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"channel_id\": \"<string>\",\n  \"sender_id\": \"<string>\",\n  \"conversation_id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"reply_by\": \"<dateTime>\",\n  \"conversation_link\": \"<url>\",\n  \"attachments\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"size\": \"<number>\",\n      \"preview_url\": \"<string>\",\n      \"link_expires\": false\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"size\": \"<number>\",\n      \"preview_url\": \"<string>\",\n      \"link_expires\": false\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/channels/messages/receive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels",
										"messages",
										"receive"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"Expected { id: string; sender_id: string; conversation_id: string; conversation_link?: string; channel_id: string; created_at: string; message: string; status: unknown; attachments: { id: string; type: string; name: string | null; size: number | null; url: string; preview_url: string | null; }[]; reply_by?: string | null; }, but was incompatible\",\n  \"error_info\": \"Please check the reference docs in https://developers.pipedrive.com/docs/api/v1\",\n  \"additional_data\": {\n    \"code\": \"INVALID_RECEIVE_MESSAGE_PAYLOAD\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a conversation",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/channels/:channel-id/conversations/:conversation-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"channels",
								":channel-id",
								"conversations",
								":conversation-id"
							],
							"variable": [
								{
									"key": "channel-id",
									"value": "<string>",
									"description": "(Required) The ID of the channel provided by the integration"
								},
								{
									"key": "conversation-id",
									"value": "<string>",
									"description": "(Required) The ID of the conversation provided by the integration"
								}
							]
						},
						"description": "Deletes an existing conversation. To use the endpoint, you need to have **Messengers integration** OAuth scope enabled and the Messaging manifest ready for the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension)."
					},
					"response": [
						{
							"name": "The conversation was deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels/:channel-id/conversations/:conversation-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels",
										":channel-id",
										"conversations",
										":conversation-id"
									],
									"variable": [
										{
											"key": "channel-id",
											"value": "<string>",
											"description": "(Required) The ID of the channel provided by the integration"
										},
										{
											"key": "conversation-id",
											"value": "<string>",
											"description": "(Required) The ID of the conversation provided by the integration"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels/:channel-id/conversations/:conversation-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels",
										":channel-id",
										"conversations",
										":conversation-id"
									],
									"variable": [
										{
											"key": "channel-id",
											"value": "<string>",
											"description": "(Required) The ID of the channel provided by the integration"
										},
										{
											"key": "conversation-id",
											"value": "<string>",
											"description": "(Required) The ID of the conversation provided by the integration"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"Only the app owner can delete conversations\",\n  \"error_info\": \"Please check the reference docs in https://developers.pipedrive.com/docs/api/v1\",\n  \"additional_data\": {\n    \"code\": \"FORBIDDEN_USER_REQUEST\"\n  }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/channels/:channel-id/conversations/:conversation-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"channels",
										":channel-id",
										"conversations",
										":conversation-id"
									],
									"variable": [
										{
											"key": "channel-id",
											"value": "<string>",
											"description": "(Required) The ID of the channel provided by the integration"
										},
										{
											"key": "conversation-id",
											"value": "<string>",
											"description": "(Required) The ID of the conversation provided by the integration"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"Channel not found.\",\n  \"error_info\": \"Please check the reference docs in https://developers.pipedrive.com/docs/api/v1\",\n  \"additional_data\": {\n    \"code\": \"NOT_FOUND\"\n  }\n}"
						}
					]
				}
			],
			"description": "Channels API allows you to integrate your existing messaging channels into Pipedrive through [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension). It enables you to manage and interact with the channel’s conversations, participants and messages inside Pipedrive Messaging inbox: get the historical conversation, receive and send new messages. These endpoints are accessible only through **Messengers integration** OAuth scope together with Messaging manifest in building the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension).\n"
		},
		{
			"name": "Currencies",
			"item": [
				{
					"name": "Get all supported currencies",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/currencies?term=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"currencies"
							],
							"query": [
								{
									"key": "term",
									"value": "<string>",
									"description": "Optional search term that is searched for from currency's name and/or code"
								}
							]
						},
						"description": "Returns all supported currencies in given account which should be used when saving monetary values with other objects. The `code` parameter of the returning objects is the currency code according to ISO 4217 for all non-custom currencies."
					},
					"response": [
						{
							"name": "The list of supported currencies",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/currencies?term=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"currencies"
									],
									"query": [
										{
											"key": "term",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"code\": \"EUR\",\n      \"name\": \"Euro\",\n      \"decimal_points\": 2,\n      \"symbol\": \"€\",\n      \"active_flag\": true,\n      \"is_custom_flag\": false\n    },\n    {\n      \"id\": 2,\n      \"code\": \"USD\",\n      \"name\": \"US Dollar\",\n      \"decimal_points\": 2,\n      \"symbol\": \"$\",\n      \"active_flag\": true,\n      \"is_custom_flag\": false\n    }\n  ]\n}"
						}
					]
				}
			],
			"description": "Supported currencies which can be used to represent the monetary value of a deal, or a value of any monetary type custom field. The `Currency.code` field must be used to point to a currency. `Currency.code` is the ISO-4217 format currency code for non-custom currencies. You can differentiate custom and non-custom currencies using the `is_custom_flag` property. For custom currencies, it is intended that the formatted sums are displayed in the UI using the following format: [sum][non-breaking space character][currency.symbol], for example: 500 users. Custom currencies cannot be added or removed via the API yet — rather the admin users of the account must configure them from the Pipedrive app.\n"
		},
		{
			"name": "DealFields",
			"item": [
				{
					"name": "Get all deal fields",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dealFields?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dealFields"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Returns data about all deal fields."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dealFields?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dealFields"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"key\": \"title\",\n      \"name\": \"Title\",\n      \"order_nr\": 2,\n      \"field_type\": \"varchar\",\n      \"add_time\": \"2019-02-04 13:58:03\",\n      \"update_time\": \"2019-02-04 13:58:03\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": false,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": true,\n      \"add_visible_flag\": true,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"options\": null,\n      \"mandatory_flag\": true\n    },\n    {\n      \"id\": 2,\n      \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n      \"name\": \"Customer Type\",\n      \"order_nr\": 1,\n      \"field_type\": \"enum\",\n      \"add_time\": \"2019-02-04 13:58:03\",\n      \"update_time\": \"2019-02-04 13:58:03\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": true,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": true,\n      \"add_visible_flag\": false,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"options\": [\n        {\n          \"id\": 190,\n          \"label\": \"Private person\"\n        },\n        {\n          \"id\": 191,\n          \"label\": \"Company\"\n        },\n        {\n          \"id\": 192,\n          \"label\": \"Government\"\n        }\n      ],\n      \"mandatory_flag\": true\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a new deal field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"field_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dealFields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dealFields"
							]
						},
						"description": "Adds a new deal field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"field_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dealFields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dealFields"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n    \"name\": \"Customer Type\",\n    \"order_nr\": 1,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-02-04 13:58:03\",\n    \"update_time\": \"2019-02-04 13:58:03\",\n    \"last_updated_by_user_id\": 1,\n    \"created_by_user_id\": 1,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": false,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 190,\n        \"label\": \"Private person\"\n      },\n      {\n        \"id\": 191,\n        \"label\": \"Company\"\n      },\n      {\n        \"id\": 192,\n        \"label\": \"Government\"\n      }\n    ],\n    \"mandatory_flag\": true\n  }\n}"
						}
					]
				},
				{
					"name": "Delete multiple deal fields in bulk",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dealFields?ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dealFields"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) The comma-separated field IDs to delete"
								}
							]
						},
						"description": "Marks multiple deal fields as deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dealFields?ids=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dealFields"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": [\n      123,\n      456\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get one deal field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dealFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dealFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the field"
								}
							]
						},
						"description": "Returns data about a specific deal field."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dealFields/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dealFields",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n    \"name\": \"Customer Type\",\n    \"order_nr\": 1,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-02-04 13:58:03\",\n    \"update_time\": \"2019-02-04 13:58:03\",\n    \"last_updated_by_user_id\": 1,\n    \"created_by_user_id\": 1,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": false,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 190,\n        \"label\": \"Private person\"\n      },\n      {\n        \"id\": 191,\n        \"label\": \"Company\"\n      },\n      {\n        \"id\": 192,\n        \"label\": \"Government\"\n      }\n    ],\n    \"mandatory_flag\": true\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a deal field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dealFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dealFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the field"
								}
							]
						},
						"description": "Marks a field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dealFields/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dealFields",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123\n  }\n}"
						}
					]
				},
				{
					"name": "Update a deal field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dealFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dealFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the field"
								}
							]
						},
						"description": "Updates a deal field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields' values</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dealFields/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dealFields",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n    \"name\": \"Customer Type\",\n    \"order_nr\": 1,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-02-04 13:58:03\",\n    \"update_time\": \"2019-02-04 13:58:03\",\n    \"last_updated_by_user_id\": 1,\n    \"created_by_user_id\": 1,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": false,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 190,\n        \"label\": \"Private person\"\n      },\n      {\n        \"id\": 191,\n        \"label\": \"Company\"\n      },\n      {\n        \"id\": 192,\n        \"label\": \"Government\"\n      }\n    ],\n    \"mandatory_flag\": true\n  }\n}"
						}
					]
				}
			],
			"description": "Deal fields represent the near-complete schema for a deal in the context of the company of the authorized user. Each company can have a different schema for their deals, with various custom fields. In the context of using deal fields as a schema for defining the data fields of a deal, it must be kept in mind that some types of custom fields can have additional data fields which are not separate deal fields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of deal fields. For example, if there is a monetary field with the key `ffk9s9` stored on the account, `ffk9s9` would hold the numeric value of the field, and `ffk9s9_currency` would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one deal and list its keys.\n"
		},
		{
			"name": "Deals",
			"item": [
				{
					"name": "Get all deals",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals?user_id=<integer>&filter_id=<integer>&stage_id=<integer>&status=all_not_deleted&start=0&limit=<integer>&sort=<string>&owned_by_you=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals"
							],
							"query": [
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "If supplied, only deals matching the given user will be returned. However, `filter_id` and `owned_by_you` takes precedence over `user_id` when supplied."
								},
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "The ID of the filter to use"
								},
								{
									"key": "stage_id",
									"value": "<integer>",
									"description": "If supplied, only deals within the given stage will be returned"
								},
								{
									"key": "status",
									"value": "all_not_deleted",
									"description": "Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included."
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys)."
								},
								{
									"key": "owned_by_you",
									"value": "<number>",
									"description": "When supplied, only deals owned by you are returned. However, `filter_id` takes precedence over `owned_by_you` when both are supplied."
								}
							]
						},
						"description": "Returns all not archived deals. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/getting-all-deals\" target=\"_blank\" rel=\"noopener noreferrer\">getting all deals</a>."
					},
					"response": [
						{
							"name": "Get all not archived deals",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals?user_id=<integer>&filter_id=<integer>&stage_id=<integer>&status=all_not_deleted&start=0&limit=<integer>&sort=<string>&owned_by_you=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "stage_id",
											"value": "<integer>"
										},
										{
											"key": "status",
											"value": "all_not_deleted"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "owned_by_you",
											"value": "<number>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"creator_user_id\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 8877\n      },\n      \"user_id\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 8877\n      },\n      \"person_id\": {\n        \"active_flag\": true,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"37244499911\",\n            \"primary\": true\n          }\n        ],\n        \"value\": 1101\n      },\n      \"org_id\": {\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\",\n        \"value\": 5\n      },\n      \"stage_id\": 2,\n      \"title\": \"Deal One\",\n      \"value\": 130,\n      \"currency\": \"EUR\",\n      \"archive_time\": null,\n      \"add_time\": \"2019-05-29 04:21:51\",\n      \"update_time\": \"2019-11-28 16:19:50\",\n      \"stage_change_time\": \"2019-11-28 15:41:22\",\n      \"active\": true,\n      \"deleted\": false,\n      \"is_archived\": false,\n      \"status\": \"open\",\n      \"probability\": null,\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": null,\n      \"last_activity_date\": null,\n      \"lost_reason\": null,\n      \"visible_to\": \"1\",\n      \"close_time\": null,\n      \"pipeline_id\": 1,\n      \"won_time\": \"2019-11-27 11:40:36\",\n      \"first_won_time\": \"2019-11-27 11:40:36\",\n      \"lost_time\": \"2019-11-27 11:40:36\",\n      \"products_count\": 2,\n      \"files_count\": 0,\n      \"notes_count\": 2,\n      \"followers_count\": 0,\n      \"email_messages_count\": 4,\n      \"activities_count\": 1,\n      \"done_activities_count\": 0,\n      \"undone_activities_count\": 1,\n      \"participants_count\": 1,\n      \"expected_close_date\": \"2019-06-29\",\n      \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n      \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n      \"label\": \"11\",\n      \"origin\": \"ManuallyCreated\",\n      \"origin_id\": null,\n      \"channel\": 52,\n      \"channel_id\": \"Jun23 Billboards\",\n      \"stage_order_nr\": 2,\n      \"person_name\": \"Person\",\n      \"org_name\": \"Organization\",\n      \"next_activity_subject\": \"Call\",\n      \"next_activity_type\": \"call\",\n      \"next_activity_duration\": \"00:30:00\",\n      \"next_activity_note\": \"Note content\",\n      \"formatted_value\": \"€5,000\",\n      \"weighted_value\": 5000,\n      \"formatted_weighted_value\": \"€5,000\",\n      \"weighted_value_currency\": \"EUR\",\n      \"rotten_time\": null,\n      \"owner_name\": \"Creator\",\n      \"cc_email\": \"company+deal1@pipedrivemail.com\",\n      \"org_hidden\": false,\n      \"person_hidden\": false,\n      \"acv\": 120,\n      \"arr\": 120,\n      \"mrr\": 10,\n      \"acv_currency\": \"EUR\",\n      \"arr_currency\": \"EUR\",\n      \"mrr_currency\": \"EUR\"\n    }\n  ],\n  \"related_objects\": {\n    \"user\": {\n      \"8877\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"organization\": {\n      \"5\": {\n        \"id\": 5,\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"person\": {\n      \"1101\": {\n        \"active_flag\": true,\n        \"id\": 1101,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"3421787767\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"stage\": {\n      \"2\": {\n        \"id\": 2,\n        \"company_id\": 123,\n        \"order_nr\": 1,\n        \"name\": \"Stage Name\",\n        \"active_flag\": true,\n        \"deal_probability\": 100,\n        \"pipeline_id\": 1,\n        \"rotten_flag\": false,\n        \"rotten_days\": null,\n        \"add_time\": \"2015-12-08 13:54:06\",\n        \"update_time\": \"2015-12-08 13:54:06\",\n        \"pipeline_name\": \"Pipeline\",\n        \"pipeline_deal_probability\": true\n      }\n    },\n    \"pipeline\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Pipeline\",\n        \"url_title\": \"Pipeline\",\n        \"order_nr\": 0,\n        \"active\": true,\n        \"deal_probability\": true,\n        \"add_time\": \"2015-12-08 10:00:24\",\n        \"update_time\": \"2015-12-08 10:00:24\"\n      }\n    }\n  },\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false,\n      \"next_start\": 1\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"value\": \"<string>\",\n  \"label\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"currency\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"person_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"pipeline_id\": \"<integer>\",\n  \"stage_id\": \"<integer>\",\n  \"is_archived\": \"<boolean>\",\n  \"archive_time\": \"<string>\",\n  \"status\": \"<string>\",\n  \"origin_id\": \"<string>\",\n  \"channel\": \"<integer>\",\n  \"channel_id\": \"<string>\",\n  \"add_time\": \"<string>\",\n  \"won_time\": \"<string>\",\n  \"lost_time\": \"<string>\",\n  \"close_time\": \"<string>\",\n  \"expected_close_date\": \"<date>\",\n  \"probability\": \"<number>\",\n  \"lost_reason\": \"<string>\",\n  \"visible_to\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/deals",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals"
							]
						},
						"description": "Adds a new deal. All deals created through the Pipedrive API will have a `origin` set to `API`. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the dealFields and look for `key` values. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/creating-a-deal\" target=\"_blank\" rel=\"noopener noreferrer\">adding a deal</a>."
					},
					"response": [
						{
							"name": "Add a deal",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"value\": \"<string>\",\n  \"label\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"currency\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"person_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"pipeline_id\": \"<integer>\",\n  \"stage_id\": \"<integer>\",\n  \"is_archived\": \"<boolean>\",\n  \"archive_time\": \"<string>\",\n  \"status\": \"<string>\",\n  \"origin_id\": \"<string>\",\n  \"channel\": \"<integer>\",\n  \"channel_id\": \"<string>\",\n  \"add_time\": \"<string>\",\n  \"won_time\": \"<string>\",\n  \"lost_time\": \"<string>\",\n  \"close_time\": \"<string>\",\n  \"expected_close_date\": \"<date>\",\n  \"probability\": \"<number>\",\n  \"lost_reason\": \"<string>\",\n  \"visible_to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/deals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"creator_user_id\": {\n      \"id\": 8877,\n      \"name\": \"Creator\",\n      \"email\": \"john.doe@pipedrive.com\",\n      \"has_pic\": false,\n      \"pic_hash\": null,\n      \"active_flag\": true,\n      \"value\": 8877\n    },\n    \"user_id\": {\n      \"id\": 8877,\n      \"name\": \"Creator\",\n      \"email\": \"john.doe@pipedrive.com\",\n      \"has_pic\": false,\n      \"pic_hash\": null,\n      \"active_flag\": true,\n      \"value\": 8877\n    },\n    \"person_id\": {\n      \"active_flag\": true,\n      \"name\": \"Person\",\n      \"email\": [\n        {\n          \"label\": \"work\",\n          \"value\": \"person@pipedrive.com\",\n          \"primary\": true\n        }\n      ],\n      \"phone\": [\n        {\n          \"label\": \"work\",\n          \"value\": \"37244499911\",\n          \"primary\": true\n        }\n      ],\n      \"value\": 1101\n    },\n    \"org_id\": {\n      \"name\": \"Organization\",\n      \"people_count\": 2,\n      \"owner_id\": 8877,\n      \"address\": \"\",\n      \"active_flag\": true,\n      \"cc_email\": \"org@pipedrivemail.com\",\n      \"value\": 5\n    },\n    \"stage_id\": 2,\n    \"title\": \"Deal One\",\n    \"value\": 5000,\n    \"currency\": \"EUR\",\n    \"add_time\": \"2019-05-29 04:21:51\",\n    \"update_time\": \"2019-11-28 16:19:50\",\n    \"stage_change_time\": \"2019-11-28 15:41:22\",\n    \"active\": true,\n    \"deleted\": false,\n    \"status\": \"open\",\n    \"probability\": null,\n    \"next_activity_date\": \"2019-11-29\",\n    \"next_activity_time\": \"11:30:00\",\n    \"next_activity_id\": 128,\n    \"last_activity_id\": null,\n    \"last_activity_date\": null,\n    \"lost_reason\": null,\n    \"visible_to\": \"1\",\n    \"close_time\": null,\n    \"pipeline_id\": 1,\n    \"won_time\": \"2019-11-27 11:40:36\",\n    \"first_won_time\": \"2019-11-27 11:40:36\",\n    \"lost_time\": \"\",\n    \"products_count\": 0,\n    \"files_count\": 0,\n    \"notes_count\": 2,\n    \"followers_count\": 0,\n    \"email_messages_count\": 4,\n    \"activities_count\": 1,\n    \"done_activities_count\": 0,\n    \"undone_activities_count\": 1,\n    \"participants_count\": 1,\n    \"expected_close_date\": \"2019-06-29\",\n    \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n    \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n    \"label\": \"11\",\n    \"origin\": \"API\",\n    \"origin_id\": \"Zapier\",\n    \"channel\": 16,\n    \"channel_id\": null,\n    \"stage_order_nr\": 2,\n    \"person_name\": \"Person\",\n    \"org_name\": \"Organization\",\n    \"next_activity_subject\": \"Call\",\n    \"next_activity_type\": \"call\",\n    \"next_activity_duration\": \"00:30:00\",\n    \"next_activity_note\": \"Note content\",\n    \"formatted_value\": \"€5,000\",\n    \"weighted_value\": 5000,\n    \"formatted_weighted_value\": \"€5,000\",\n    \"weighted_value_currency\": \"EUR\",\n    \"rotten_time\": null,\n    \"owner_name\": \"Creator\",\n    \"cc_email\": \"company+deal1@pipedrivemail.com\",\n    \"org_hidden\": false,\n    \"person_hidden\": false,\n    \"acv\": null,\n    \"arr\": null,\n    \"mrr\": null,\n    \"acv_currency\": null,\n    \"arr_currency\": null,\n    \"mrr_currency\": null\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"8877\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"organization\": {\n      \"2\": {\n        \"id\": 2,\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"person\": {\n      \"1101\": {\n        \"active_flag\": true,\n        \"id\": 1101,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"3421787767\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"stage\": {\n      \"2\": {\n        \"id\": 2,\n        \"company_id\": 123,\n        \"order_nr\": 1,\n        \"name\": \"Stage Name\",\n        \"active_flag\": true,\n        \"deal_probability\": 100,\n        \"pipeline_id\": 1,\n        \"rotten_flag\": false,\n        \"rotten_days\": null,\n        \"add_time\": \"2015-12-08 13:54:06\",\n        \"update_time\": \"2015-12-08 13:54:06\",\n        \"pipeline_name\": \"Pipeline\",\n        \"pipeline_deal_probability\": true\n      }\n    },\n    \"pipeline\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Pipeline\",\n        \"url_title\": \"Pipeline\",\n        \"order_nr\": 0,\n        \"active\": true,\n        \"deal_probability\": true,\n        \"add_time\": \"2015-12-08 10:00:24\",\n        \"update_time\": \"2015-12-08 10:00:24\"\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete multiple deals in bulk",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals?ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) The comma-separated IDs that will be deleted"
								}
							]
						},
						"description": "Marks multiple deals as deleted. After 30 days, the deals will be permanently deleted. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Deals#deleteDeal\" target=\"_blank\" rel=\"noopener noreferrer\">DELETE /api/v2/deals/{id}</a> instead."
					},
					"response": [
						{
							"name": "Delete multiple deals in bulk",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals?ids=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": [\n      123,\n      456\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get all archived deals",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/archived?user_id=<integer>&filter_id=<integer>&person_id=<integer>&org_id=<integer>&product_id=<integer>&pipeline_id=<integer>&stage_id=<integer>&status=all_not_deleted&start=0&limit=<integer>&sort=<string>&owned_by_you=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								"archived"
							],
							"query": [
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "If supplied, only deals matching the given user will be returned. However, `filter_id` and `owned_by_you` takes precedence over `user_id` when supplied."
								},
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "The ID of the filter to use"
								},
								{
									"key": "person_id",
									"value": "<integer>",
									"description": "If supplied, only deals linked to the specified person are returned. If filter_id is provided, this is ignored."
								},
								{
									"key": "org_id",
									"value": "<integer>",
									"description": "If supplied, only deals linked to the specified organization are returned. If filter_id is provided, this is ignored."
								},
								{
									"key": "product_id",
									"value": "<integer>",
									"description": "If supplied, only deals linked to the specified product are returned. If filter_id is provided, this is ignored."
								},
								{
									"key": "pipeline_id",
									"value": "<integer>",
									"description": "If supplied, only deals in the specified pipeline are returned. If filter_id is provided, this is ignored."
								},
								{
									"key": "stage_id",
									"value": "<integer>",
									"description": "If supplied, only deals in the specified stage are returned. If filter_id is provided, this is ignored."
								},
								{
									"key": "status",
									"value": "all_not_deleted",
									"description": "Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included."
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys)."
								},
								{
									"key": "owned_by_you",
									"value": "<number>",
									"description": "When supplied, only deals owned by you are returned. However, `filter_id` takes precedence over `owned_by_you` when both are supplied."
								}
							]
						},
						"description": "Returns all archived deals."
					},
					"response": [
						{
							"name": "Get all archived deals",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/archived?user_id=<integer>&filter_id=<integer>&person_id=<integer>&org_id=<integer>&product_id=<integer>&pipeline_id=<integer>&stage_id=<integer>&status=all_not_deleted&start=0&limit=<integer>&sort=<string>&owned_by_you=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										"archived"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "person_id",
											"value": "<integer>"
										},
										{
											"key": "org_id",
											"value": "<integer>"
										},
										{
											"key": "product_id",
											"value": "<integer>"
										},
										{
											"key": "pipeline_id",
											"value": "<integer>"
										},
										{
											"key": "stage_id",
											"value": "<integer>"
										},
										{
											"key": "status",
											"value": "all_not_deleted"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "owned_by_you",
											"value": "<number>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"creator_user_id\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 8877\n      },\n      \"user_id\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 8877\n      },\n      \"person_id\": {\n        \"active_flag\": true,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"37244499911\",\n            \"primary\": true\n          }\n        ],\n        \"value\": 1101\n      },\n      \"org_id\": {\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\",\n        \"value\": 5\n      },\n      \"stage_id\": 2,\n      \"title\": \"Deal One\",\n      \"value\": 130,\n      \"currency\": \"EUR\",\n      \"archive_time\": \"2019-05-29 04:21:51\",\n      \"add_time\": \"2019-05-29 04:21:51\",\n      \"update_time\": \"2019-11-28 16:19:50\",\n      \"stage_change_time\": \"2019-11-28 15:41:22\",\n      \"active\": true,\n      \"deleted\": false,\n      \"is_archived\": true,\n      \"status\": \"open\",\n      \"probability\": null,\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": null,\n      \"last_activity_date\": null,\n      \"lost_reason\": null,\n      \"visible_to\": \"1\",\n      \"close_time\": null,\n      \"pipeline_id\": 1,\n      \"won_time\": \"2019-11-27 11:40:36\",\n      \"first_won_time\": \"2019-11-27 11:40:36\",\n      \"lost_time\": \"2019-11-27 11:40:36\",\n      \"products_count\": 2,\n      \"files_count\": 0,\n      \"notes_count\": 2,\n      \"followers_count\": 0,\n      \"email_messages_count\": 4,\n      \"activities_count\": 1,\n      \"done_activities_count\": 0,\n      \"undone_activities_count\": 1,\n      \"participants_count\": 1,\n      \"expected_close_date\": \"2019-06-29\",\n      \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n      \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n      \"label\": \"11\",\n      \"origin\": \"ManuallyCreated\",\n      \"origin_id\": null,\n      \"channel\": 52,\n      \"channel_id\": \"Jun23 Billboards\",\n      \"stage_order_nr\": 2,\n      \"person_name\": \"Person\",\n      \"org_name\": \"Organization\",\n      \"next_activity_subject\": \"Call\",\n      \"next_activity_type\": \"call\",\n      \"next_activity_duration\": \"00:30:00\",\n      \"next_activity_note\": \"Note content\",\n      \"formatted_value\": \"€5,000\",\n      \"weighted_value\": 5000,\n      \"formatted_weighted_value\": \"€5,000\",\n      \"weighted_value_currency\": \"EUR\",\n      \"rotten_time\": null,\n      \"owner_name\": \"Creator\",\n      \"cc_email\": \"company+deal1@pipedrivemail.com\",\n      \"org_hidden\": false,\n      \"person_hidden\": false,\n      \"acv\": 120,\n      \"arr\": 120,\n      \"mrr\": 10,\n      \"acv_currency\": \"EUR\",\n      \"arr_currency\": \"EUR\",\n      \"mrr_currency\": \"EUR\"\n    }\n  ],\n  \"related_objects\": {\n    \"user\": {\n      \"8877\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"organization\": {\n      \"5\": {\n        \"id\": 5,\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"person\": {\n      \"1101\": {\n        \"active_flag\": true,\n        \"id\": 1101,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"3421787767\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"stage\": {\n      \"2\": {\n        \"id\": 2,\n        \"company_id\": 123,\n        \"order_nr\": 1,\n        \"name\": \"Stage Name\",\n        \"active_flag\": true,\n        \"deal_probability\": 100,\n        \"pipeline_id\": 1,\n        \"rotten_flag\": false,\n        \"rotten_days\": null,\n        \"add_time\": \"2015-12-08 13:54:06\",\n        \"update_time\": \"2015-12-08 13:54:06\",\n        \"pipeline_name\": \"Pipeline\",\n        \"pipeline_deal_probability\": true\n      }\n    },\n    \"pipeline\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Pipeline\",\n        \"url_title\": \"Pipeline\",\n        \"order_nr\": 0,\n        \"active\": true,\n        \"deal_probability\": true,\n        \"add_time\": \"2015-12-08 10:00:24\",\n        \"update_time\": \"2015-12-08 10:00:24\"\n      }\n    }\n  },\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false,\n      \"next_start\": 1\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get all deals collection",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/collection?cursor=<string>&limit=<integer>&since=<string>&until=<string>&user_id=<integer>&stage_id=<integer>&status=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								"collection"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
								},
								{
									"key": "since",
									"value": "<string>",
									"description": "The time boundary that points to the start of the range of data. Datetime in ISO 8601 format. E.g. 2022-11-01 08:55:59. Operates on the `update_time` field."
								},
								{
									"key": "until",
									"value": "<string>",
									"description": "The time boundary that points to the end of the range of data. Datetime in ISO 8601 format. E.g. 2022-11-01 08:55:59. Operates on the `update_time` field."
								},
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "If supplied, only deals matching the given user will be returned"
								},
								{
									"key": "stage_id",
									"value": "<integer>",
									"description": "If supplied, only deals within the given stage will be returned"
								},
								{
									"key": "status",
									"value": "<string>",
									"description": "Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included."
								}
							]
						},
						"description": "Returns all deals. Please note that only global admins (those with global permissions) can access this endpoint. Users with regular permissions will receive a 403 response. Read more about global permissions <a href=\"https://support.pipedrive.com/en/article/global-user-management\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Deals#getDeals\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/deals</a> instead."
					},
					"response": [
						{
							"name": "Get all deals",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/collection?cursor=<string>&limit=100&since=<string>&until=<string>&user_id=<integer>&stage_id=<integer>&status=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										"collection"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "since",
											"value": "<string>"
										},
										{
											"key": "until",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "stage_id",
											"value": "<integer>"
										},
										{
											"key": "status",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"creator_user_id\": 8877,\n      \"person_id\": 1101,\n      \"org_id\": 5,\n      \"stage_id\": 2,\n      \"title\": \"Deal One\",\n      \"value\": 5000,\n      \"currency\": \"EUR\",\n      \"add_time\": \"2019-05-29 04:21:51\",\n      \"update_time\": \"2019-11-28 16:19:50\",\n      \"status\": \"open\",\n      \"probability\": null,\n      \"lost_reason\": null,\n      \"visible_to\": \"1\",\n      \"close_time\": null,\n      \"pipeline_id\": 1,\n      \"won_time\": \"2019-11-27 11:40:36\",\n      \"lost_time\": \"2019-11-27 11:40:36\",\n      \"expected_close_date\": \"2019-06-29\",\n      \"label\": \"11\"\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"eyJhY3Rpdml0aWVzIjoyN30\"\n  }\n}"
						},
						{
							"name": "Forbidden response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/collection?cursor=<string>&limit=100&since=<string>&until=<string>&user_id=<integer>&stage_id=<integer>&status=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										"collection"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "since",
											"value": "<string>"
										},
										{
											"key": "until",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "stage_id",
											"value": "<integer>"
										},
										{
											"key": "status",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You do not have permissions to do this.\",\n  \"error_info\": \"Please check developers.pipedrive.com\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Search deals",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/search?term=<string>&fields=<string>&exact_match=<boolean>&person_id=<integer>&organization_id=<integer>&status=<string>&include_fields=<string>&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								"search"
							],
							"query": [
								{
									"key": "term",
									"value": "<string>",
									"description": "(Required) The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded."
								},
								{
									"key": "fields",
									"value": "<string>",
									"description": "A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: `address`, `varchar`, `text`, `varchar_auto`, `double`, `monetary` and `phone`. Read more about searching by custom fields <a href=\"https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>."
								},
								{
									"key": "exact_match",
									"value": "<boolean>",
									"description": "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
								},
								{
									"key": "person_id",
									"value": "<integer>",
									"description": "Will filter deals by the provided person ID. The upper limit of found deals associated with the person is 2000."
								},
								{
									"key": "organization_id",
									"value": "<integer>",
									"description": "Will filter deals by the provided organization ID. The upper limit of found deals associated with the organization is 2000."
								},
								{
									"key": "status",
									"value": "<string>",
									"description": "Will filter deals by the provided specific status. open = Open, won = Won, lost = Lost. The upper limit of found deals associated with the status is 2000."
								},
								{
									"key": "include_fields",
									"value": "<string>",
									"description": "Supports including optional fields in the results which are not provided by default"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter."
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Searches all deals by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found deals can be filtered by the person ID and the organization ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/search?term=<string>&fields=<string>&exact_match=<boolean>&person_id=<integer>&organization_id=<integer>&status=<string>&include_fields=<string>&start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										"search"
									],
									"query": [
										{
											"key": "term",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "exact_match",
											"value": "<boolean>"
										},
										{
											"key": "person_id",
											"value": "<integer>"
										},
										{
											"key": "organization_id",
											"value": "<integer>"
										},
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "include_fields",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"items\": [\n      {\n        \"result_score\": 1.22,\n        \"item\": {\n          \"id\": 1,\n          \"type\": \"deal\",\n          \"title\": \"Jane Doe deal\",\n          \"value\": 100,\n          \"currency\": \"USD\",\n          \"status\": \"open\",\n          \"visible_to\": 3,\n          \"owner\": {\n            \"id\": 1\n          },\n          \"stage\": {\n            \"id\": 1,\n            \"name\": \"Lead In\"\n          },\n          \"person\": {\n            \"id\": 1,\n            \"name\": \"Jane Doe\"\n          },\n          \"organization\": null,\n          \"custom_fields\": [],\n          \"notes\": []\n        }\n      }\n    ]\n  },\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get deals summary",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/summary?status=<string>&filter_id=<integer>&user_id=<integer>&pipeline_id=<integer>&stage_id=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								"summary"
							],
							"query": [
								{
									"key": "status",
									"value": "<string>",
									"description": "Only fetch deals with a specific status. open = Open, won = Won, lost = Lost."
								},
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "<code>user_id</code> will not be considered. Only deals matching the given filter will be returned."
								},
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "Only deals matching the given user will be returned. `user_id` will not be considered if you use `filter_id`."
								},
								{
									"key": "pipeline_id",
									"value": "<integer>",
									"description": "Only deals within the given pipeline will be returned"
								},
								{
									"key": "stage_id",
									"value": "<integer>",
									"description": "Only deals within the given stage will be returned"
								}
							]
						},
						"description": "Returns a summary of all not archived deals."
					},
					"response": [
						{
							"name": "Get the summary of not archived deals",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/summary?status=<string>&filter_id=<integer>&user_id=<integer>&pipeline_id=<integer>&stage_id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										"summary"
									],
									"query": [
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "pipeline_id",
											"value": "<integer>"
										},
										{
											"key": "stage_id",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"values_total\": {\n      \"EUR\": {\n        \"value\": 10,\n        \"count\": 2,\n        \"value_converted\": 11.1,\n        \"value_formatted\": \"€10\",\n        \"value_converted_formatted\": \"US$11.10\"\n      },\n      \"USD\": {\n        \"value\": 30,\n        \"count\": 3,\n        \"value_converted\": 30,\n        \"value_formatted\": \"US$30\",\n        \"value_converted_formatted\": \"US$3\"\n      }\n    },\n    \"weighted_values_total\": {\n      \"EUR\": {\n        \"value\": 10,\n        \"count\": 2,\n        \"value_formatted\": \"€10\"\n      },\n      \"USD\": {\n        \"value\": 30,\n        \"count\": 3,\n        \"value_formatted\": \"US$30\"\n      }\n    },\n    \"total_count\": 5,\n    \"total_currency_converted_value\": 41.1,\n    \"total_weighted_currency_converted_value\": 41.1,\n    \"total_currency_converted_value_formatted\": \"US$41.1\",\n    \"total_weighted_currency_converted_value_formatted\": \"US$41.1\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get archived deals summary",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/summary/archived?status=<string>&filter_id=<integer>&user_id=<integer>&pipeline_id=<integer>&stage_id=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								"summary",
								"archived"
							],
							"query": [
								{
									"key": "status",
									"value": "<string>",
									"description": "Only fetch deals with a specific status. open = Open, won = Won, lost = Lost."
								},
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "<code>user_id</code> will not be considered. Only deals matching the given filter will be returned."
								},
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "Only deals matching the given user will be returned. `user_id` will not be considered if you use `filter_id`."
								},
								{
									"key": "pipeline_id",
									"value": "<integer>",
									"description": "Only deals within the given pipeline will be returned"
								},
								{
									"key": "stage_id",
									"value": "<integer>",
									"description": "Only deals within the given stage will be returned"
								}
							]
						},
						"description": "Returns a summary of all archived deals."
					},
					"response": [
						{
							"name": "Get the summary of archived deals",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/summary/archived?status=<string>&filter_id=<integer>&user_id=<integer>&pipeline_id=<integer>&stage_id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										"summary",
										"archived"
									],
									"query": [
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "pipeline_id",
											"value": "<integer>"
										},
										{
											"key": "stage_id",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"values_total\": {\n      \"EUR\": {\n        \"value\": 10,\n        \"count\": 2,\n        \"value_converted\": 11.1,\n        \"value_formatted\": \"€10\",\n        \"value_converted_formatted\": \"US$11.10\"\n      },\n      \"USD\": {\n        \"value\": 30,\n        \"count\": 3,\n        \"value_converted\": 30,\n        \"value_formatted\": \"US$30\",\n        \"value_converted_formatted\": \"US$3\"\n      }\n    },\n    \"weighted_values_total\": {\n      \"EUR\": {\n        \"value\": 10,\n        \"count\": 2,\n        \"value_formatted\": \"€10\"\n      },\n      \"USD\": {\n        \"value\": 30,\n        \"count\": 3,\n        \"value_formatted\": \"US$30\"\n      }\n    },\n    \"total_count\": 5,\n    \"total_currency_converted_value\": 41.1,\n    \"total_weighted_currency_converted_value\": 41.1,\n    \"total_currency_converted_value_formatted\": \"US$41.1\",\n    \"total_weighted_currency_converted_value_formatted\": \"US$41.1\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get deals timeline",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/timeline?start_date=<date>&interval=<string>&amount=<integer>&field_key=<string>&user_id=<integer>&pipeline_id=<integer>&filter_id=<integer>&exclude_deals=<number>&totals_convert_currency=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								"timeline"
							],
							"query": [
								{
									"key": "start_date",
									"value": "<date>",
									"description": "(Required) The date when the first interval starts. Format: YYYY-MM-DD."
								},
								{
									"key": "interval",
									"value": "<string>",
									"description": "(Required) The type of the interval<table><tr><th>Value</th><th>Description</th></tr><tr><td>`day`</td><td>Day</td></tr><tr><td>`week`</td><td>A full week (7 days) starting from `start_date`</td></tr><tr><td>`month`</td><td>A full month (depending on the number of days in given month) starting from `start_date`</td></tr><tr><td>`quarter`</td><td>A full quarter (3 months) starting from `start_date`</td></tr></table>"
								},
								{
									"key": "amount",
									"value": "<integer>",
									"description": "(Required) The number of given intervals, starting from `start_date`, to fetch. E.g. 3 (months)."
								},
								{
									"key": "field_key",
									"value": "<string>",
									"description": "(Required) The date field key which deals will be retrieved from"
								},
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "If supplied, only deals matching the given user will be returned"
								},
								{
									"key": "pipeline_id",
									"value": "<integer>",
									"description": "If supplied, only deals matching the given pipeline will be returned"
								},
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "If supplied, only deals matching the given filter will be returned"
								},
								{
									"key": "exclude_deals",
									"value": "<number>",
									"description": "Whether to exclude deals list (1) or not (0). Note that when deals are excluded, the timeline summary (counts and values) is still returned."
								},
								{
									"key": "totals_convert_currency",
									"value": "<string>",
									"description": "The 3-letter currency code of any of the supported currencies. When supplied, `totals_converted` is returned per each interval which contains the currency-converted total amounts in the given currency. You may also set this parameter to `default_currency` in which case the user's default currency is used."
								}
							]
						},
						"description": "Returns not archived open and won deals, grouped by a defined interval of time set in a date-type dealField (`field_key`) — e.g. when month is the chosen interval, and 3 months are asked starting from January 1st, 2012, deals are returned grouped into 3 groups — January, February and March — based on the value of the given `field_key`."
					},
					"response": [
						{
							"name": "Get open and won deals, grouped by the defined interval of time",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/timeline?start_date=<date>&interval=<string>&amount=<integer>&field_key=<string>&user_id=<integer>&pipeline_id=<integer>&filter_id=<integer>&exclude_deals=<number>&totals_convert_currency=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										"timeline"
									],
									"query": [
										{
											"key": "start_date",
											"value": "<date>"
										},
										{
											"key": "interval",
											"value": "<string>"
										},
										{
											"key": "amount",
											"value": "<integer>"
										},
										{
											"key": "field_key",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "pipeline_id",
											"value": "<integer>"
										},
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "exclude_deals",
											"value": "<number>"
										},
										{
											"key": "totals_convert_currency",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"period_start\": \"2019-12-01 00:00:00\",\n    \"period_end\": \"2019-12-31 23:59:59\",\n    \"deals\": [\n      {\n        \"id\": 1,\n        \"creator_user_id\": 8877,\n        \"user_id\": 8877,\n        \"person_id\": 1101,\n        \"org_id\": 5,\n        \"stage_id\": 2,\n        \"title\": \"Deal One\",\n        \"value\": 5000,\n        \"currency\": \"EUR\",\n        \"archive_time\": null,\n        \"add_time\": \"2019-05-29 04:21:51\",\n        \"update_time\": \"2019-11-28 16:19:50\",\n        \"stage_change_time\": \"2019-11-28 15:41:22\",\n        \"active\": true,\n        \"deleted\": false,\n        \"is_archived\": false,\n        \"status\": \"open\",\n        \"probability\": null,\n        \"next_activity_date\": \"2019-11-29\",\n        \"next_activity_time\": \"11:30:00\",\n        \"next_activity_id\": 128,\n        \"last_activity_id\": null,\n        \"last_activity_date\": null,\n        \"lost_reason\": null,\n        \"visible_to\": \"1\",\n        \"close_time\": null,\n        \"pipeline_id\": 1,\n        \"won_time\": \"2019-11-27 11:40:36\",\n        \"first_won_time\": \"2019-11-27 11:40:36\",\n        \"lost_time\": \"\",\n        \"products_count\": 0,\n        \"files_count\": 0,\n        \"notes_count\": 2,\n        \"followers_count\": 0,\n        \"email_messages_count\": 4,\n        \"activities_count\": 1,\n        \"done_activities_count\": 0,\n        \"undone_activities_count\": 1,\n        \"participants_count\": 1,\n        \"expected_close_date\": \"2019-06-29\",\n        \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n        \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n        \"label\": \"11\",\n        \"stage_order_nr\": 2,\n        \"person_name\": \"Person\",\n        \"org_name\": \"Organization\",\n        \"next_activity_subject\": \"Call\",\n        \"next_activity_type\": \"call\",\n        \"next_activity_duration\": \"00:30:00\",\n        \"next_activity_note\": \"Note content\",\n        \"formatted_value\": \"€5,000\",\n        \"weighted_value\": 5000,\n        \"formatted_weighted_value\": \"€5,000\",\n        \"weighted_value_currency\": \"EUR\",\n        \"rotten_time\": null,\n        \"owner_name\": \"Creator\",\n        \"cc_email\": \"company+deal1@pipedrivemail.com\",\n        \"org_hidden\": false,\n        \"person_hidden\": false,\n        \"acv\": null,\n        \"arr\": null,\n        \"mrr\": null,\n        \"acv_currency\": null,\n        \"arr_currency\": null,\n        \"mrr_currency\": null\n      }\n    ],\n    \"totals\": {\n      \"count\": 2,\n      \"values\": {\n        \"EUR\": 100,\n        \"USD\": 220\n      },\n      \"weighted_values\": {\n        \"EUR\": 100,\n        \"USD\": 2200\n      },\n      \"open_count\": 1,\n      \"open_values\": {\n        \"EUR\": 100\n      },\n      \"weighted_open_values\": {\n        \"EUR\": 100\n      },\n      \"won_count\": 1,\n      \"won_values\": {\n        \"USD\": 2200\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get archived deals timeline",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/timeline/archived?start_date=<date>&interval=<string>&amount=<integer>&field_key=<string>&user_id=<integer>&pipeline_id=<integer>&filter_id=<integer>&exclude_deals=<number>&totals_convert_currency=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								"timeline",
								"archived"
							],
							"query": [
								{
									"key": "start_date",
									"value": "<date>",
									"description": "(Required) The date when the first interval starts. Format: YYYY-MM-DD."
								},
								{
									"key": "interval",
									"value": "<string>",
									"description": "(Required) The type of the interval<table><tr><th>Value</th><th>Description</th></tr><tr><td>`day`</td><td>Day</td></tr><tr><td>`week`</td><td>A full week (7 days) starting from `start_date`</td></tr><tr><td>`month`</td><td>A full month (depending on the number of days in given month) starting from `start_date`</td></tr><tr><td>`quarter`</td><td>A full quarter (3 months) starting from `start_date`</td></tr></table>"
								},
								{
									"key": "amount",
									"value": "<integer>",
									"description": "(Required) The number of given intervals, starting from `start_date`, to fetch. E.g. 3 (months)."
								},
								{
									"key": "field_key",
									"value": "<string>",
									"description": "(Required) The date field key which deals will be retrieved from"
								},
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "If supplied, only deals matching the given user will be returned"
								},
								{
									"key": "pipeline_id",
									"value": "<integer>",
									"description": "If supplied, only deals matching the given pipeline will be returned"
								},
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "If supplied, only deals matching the given filter will be returned"
								},
								{
									"key": "exclude_deals",
									"value": "<number>",
									"description": "Whether to exclude deals list (1) or not (0). Note that when deals are excluded, the timeline summary (counts and values) is still returned."
								},
								{
									"key": "totals_convert_currency",
									"value": "<string>",
									"description": "The 3-letter currency code of any of the supported currencies. When supplied, `totals_converted` is returned per each interval which contains the currency-converted total amounts in the given currency. You may also set this parameter to `default_currency` in which case the user's default currency is used."
								}
							]
						},
						"description": "Returns archived open and won deals, grouped by a defined interval of time set in a date-type dealField (`field_key`) — e.g. when month is the chosen interval, and 3 months are asked starting from January 1st, 2012, deals are returned grouped into 3 groups — January, February and March — based on the value of the given `field_key`."
					},
					"response": [
						{
							"name": "Get open and won deals, grouped by the defined interval of time",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/timeline/archived?start_date=<date>&interval=<string>&amount=<integer>&field_key=<string>&user_id=<integer>&pipeline_id=<integer>&filter_id=<integer>&exclude_deals=<number>&totals_convert_currency=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										"timeline",
										"archived"
									],
									"query": [
										{
											"key": "start_date",
											"value": "<date>"
										},
										{
											"key": "interval",
											"value": "<string>"
										},
										{
											"key": "amount",
											"value": "<integer>"
										},
										{
											"key": "field_key",
											"value": "<string>"
										},
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "pipeline_id",
											"value": "<integer>"
										},
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "exclude_deals",
											"value": "<number>"
										},
										{
											"key": "totals_convert_currency",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"period_start\": \"2019-12-01 00:00:00\",\n    \"period_end\": \"2019-12-31 23:59:59\",\n    \"deals\": [\n      {\n        \"id\": 1,\n        \"creator_user_id\": 8877,\n        \"user_id\": 8877,\n        \"person_id\": 1101,\n        \"org_id\": 5,\n        \"stage_id\": 2,\n        \"title\": \"Deal One\",\n        \"value\": 5000,\n        \"currency\": \"EUR\",\n        \"archive_time\": \"2019-05-29 04:21:51\",\n        \"add_time\": \"2019-05-29 04:21:51\",\n        \"update_time\": \"2019-11-28 16:19:50\",\n        \"stage_change_time\": \"2019-11-28 15:41:22\",\n        \"active\": true,\n        \"deleted\": false,\n        \"is_archived\": true,\n        \"status\": \"open\",\n        \"probability\": null,\n        \"next_activity_date\": \"2019-11-29\",\n        \"next_activity_time\": \"11:30:00\",\n        \"next_activity_id\": 128,\n        \"last_activity_id\": null,\n        \"last_activity_date\": null,\n        \"lost_reason\": null,\n        \"visible_to\": \"1\",\n        \"close_time\": null,\n        \"pipeline_id\": 1,\n        \"won_time\": \"2019-11-27 11:40:36\",\n        \"first_won_time\": \"2019-11-27 11:40:36\",\n        \"lost_time\": \"\",\n        \"products_count\": 0,\n        \"files_count\": 0,\n        \"notes_count\": 2,\n        \"followers_count\": 0,\n        \"email_messages_count\": 4,\n        \"activities_count\": 1,\n        \"done_activities_count\": 0,\n        \"undone_activities_count\": 1,\n        \"participants_count\": 1,\n        \"expected_close_date\": \"2019-06-29\",\n        \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n        \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n        \"label\": \"11\",\n        \"stage_order_nr\": 2,\n        \"person_name\": \"Person\",\n        \"org_name\": \"Organization\",\n        \"next_activity_subject\": \"Call\",\n        \"next_activity_type\": \"call\",\n        \"next_activity_duration\": \"00:30:00\",\n        \"next_activity_note\": \"Note content\",\n        \"formatted_value\": \"€5,000\",\n        \"weighted_value\": 5000,\n        \"formatted_weighted_value\": \"€5,000\",\n        \"weighted_value_currency\": \"EUR\",\n        \"rotten_time\": null,\n        \"owner_name\": \"Creator\",\n        \"cc_email\": \"company+deal1@pipedrivemail.com\",\n        \"org_hidden\": false,\n        \"person_hidden\": false,\n        \"acv\": null,\n        \"arr\": null,\n        \"mrr\": null,\n        \"acv_currency\": null,\n        \"arr_currency\": null,\n        \"mrr_currency\": null\n      }\n    ],\n    \"totals\": {\n      \"count\": 2,\n      \"values\": {\n        \"EUR\": 100,\n        \"USD\": 220\n      },\n      \"weighted_values\": {\n        \"EUR\": 100,\n        \"USD\": 2200\n      },\n      \"open_count\": 1,\n      \"open_values\": {\n        \"EUR\": 100\n      },\n      \"weighted_open_values\": {\n        \"EUR\": 100\n      },\n      \"won_count\": 1,\n      \"won_values\": {\n        \"USD\": 2200\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Marks a deal as deleted. After 30 days, the deal will be permanently deleted."
					},
					"response": [
						{
							"name": "Delete a deal",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123\n  }\n}"
						}
					]
				},
				{
					"name": "Get details of a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Returns the details of a specific deal. Note that this also returns some additional fields which are not present when asking for all deals – such as deal age and stay in pipeline stages. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the `key` value of dealFields. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/getting-details-of-a-deal\" target=\"_blank\" rel=\"noopener noreferrer\">getting details of a deal</a>."
					},
					"response": [
						{
							"name": "Get a deal by its ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"creator_user_id\": {\n      \"id\": 8877,\n      \"name\": \"Creator\",\n      \"email\": \"john.doe@pipedrive.com\",\n      \"has_pic\": false,\n      \"pic_hash\": null,\n      \"active_flag\": true,\n      \"value\": 8877\n    },\n    \"user_id\": {\n      \"id\": 8877,\n      \"name\": \"Creator\",\n      \"email\": \"john.doe@pipedrive.com\",\n      \"has_pic\": false,\n      \"pic_hash\": null,\n      \"active_flag\": true,\n      \"value\": 8877\n    },\n    \"person_id\": {\n      \"active_flag\": true,\n      \"name\": \"Person\",\n      \"email\": [\n        {\n          \"label\": \"work\",\n          \"value\": \"person@pipedrive.com\",\n          \"primary\": true\n        }\n      ],\n      \"phone\": [\n        {\n          \"label\": \"work\",\n          \"value\": \"37244499911\",\n          \"primary\": true\n        }\n      ],\n      \"value\": 1101\n    },\n    \"org_id\": {\n      \"name\": \"Organization\",\n      \"people_count\": 2,\n      \"owner_id\": 8877,\n      \"address\": \"\",\n      \"active_flag\": true,\n      \"cc_email\": \"org@pipedrivemail.com\",\n      \"value\": 5\n    },\n    \"stage_id\": 2,\n    \"title\": \"Deal One\",\n    \"value\": 20,\n    \"currency\": \"EUR\",\n    \"add_time\": \"2019-05-29 04:21:51\",\n    \"update_time\": \"2019-11-28 16:19:50\",\n    \"stage_change_time\": \"2019-11-28 15:41:22\",\n    \"active\": true,\n    \"deleted\": false,\n    \"status\": \"open\",\n    \"probability\": null,\n    \"next_activity_date\": \"2019-11-29\",\n    \"next_activity_time\": \"11:30:00\",\n    \"next_activity_id\": 128,\n    \"last_activity_id\": null,\n    \"last_activity_date\": null,\n    \"lost_reason\": null,\n    \"visible_to\": \"1\",\n    \"close_time\": null,\n    \"pipeline_id\": 1,\n    \"won_time\": \"2019-11-27 11:40:36\",\n    \"first_won_time\": \"2019-11-27 11:40:36\",\n    \"lost_time\": \"\",\n    \"products_count\": 2,\n    \"files_count\": 0,\n    \"notes_count\": 2,\n    \"followers_count\": 0,\n    \"email_messages_count\": 4,\n    \"activities_count\": 1,\n    \"done_activities_count\": 0,\n    \"undone_activities_count\": 1,\n    \"participants_count\": 1,\n    \"expected_close_date\": \"2019-06-29\",\n    \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n    \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n    \"label\": \"11\",\n    \"origin\": \"ManuallyCreated\",\n    \"origin_id\": null,\n    \"channel\": 52,\n    \"channel_id\": \"Jun23 Billboards\",\n    \"stage_order_nr\": 2,\n    \"person_name\": \"Person\",\n    \"org_name\": \"Organization\",\n    \"next_activity_subject\": \"Call\",\n    \"next_activity_type\": \"call\",\n    \"next_activity_duration\": \"00:30:00\",\n    \"next_activity_note\": \"Note content\",\n    \"formatted_value\": \"€5,000\",\n    \"weighted_value\": 5000,\n    \"formatted_weighted_value\": \"€5,000\",\n    \"weighted_value_currency\": \"EUR\",\n    \"rotten_time\": null,\n    \"owner_name\": \"Creator\",\n    \"cc_email\": \"company+deal1@pipedrivemail.com\",\n    \"org_hidden\": false,\n    \"person_hidden\": false,\n    \"average_time_to_won\": {\n      \"y\": 0,\n      \"m\": 0,\n      \"d\": 0,\n      \"h\": 0,\n      \"i\": 20,\n      \"s\": 49,\n      \"total_seconds\": 1249\n    },\n    \"average_stage_progress\": 4.99,\n    \"age\": {\n      \"y\": 0,\n      \"m\": 6,\n      \"d\": 14,\n      \"h\": 8,\n      \"i\": 57,\n      \"s\": 26,\n      \"total_seconds\": 17139446\n    },\n    \"stay_in_pipeline_stages\": {\n      \"times_in_stages\": {\n        \"1\": 15721267,\n        \"2\": 1288449,\n        \"3\": 4368,\n        \"4\": 3315,\n        \"5\": 26460\n      },\n      \"order_of_stages\": [\n        1,\n        2,\n        3,\n        4,\n        5\n      ]\n    },\n    \"last_activity\": null,\n    \"next_activity\": null,\n    \"acv\": 20,\n    \"arr\": 0,\n    \"mrr\": 0,\n    \"acv_currency\": \"EUR\",\n    \"arr_currency\": \"EUR\",\n    \"mrr_currency\": \"EUR\"\n  },\n  \"additional_data\": {\n    \"dropbox_email\": \"company+deal1@pipedrivemail.com\"\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"8877\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"organization\": {\n      \"2\": {\n        \"id\": 2,\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"person\": {\n      \"1101\": {\n        \"active_flag\": true,\n        \"id\": 1101,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"3421787767\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"stage\": {\n      \"2\": {\n        \"id\": 2,\n        \"company_id\": 123,\n        \"order_nr\": 1,\n        \"name\": \"Stage Name\",\n        \"active_flag\": true,\n        \"deal_probability\": 100,\n        \"pipeline_id\": 1,\n        \"rotten_flag\": false,\n        \"rotten_days\": null,\n        \"add_time\": \"2015-12-08 13:54:06\",\n        \"update_time\": \"2015-12-08 13:54:06\",\n        \"pipeline_name\": \"Pipeline\",\n        \"pipeline_deal_probability\": true\n      }\n    },\n    \"pipeline\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Pipeline\",\n        \"url_title\": \"Pipeline\",\n        \"order_nr\": 0,\n        \"active\": true,\n        \"deal_probability\": true,\n        \"add_time\": \"2015-12-08 10:00:24\",\n        \"update_time\": \"2015-12-08 10:00:24\"\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<object>",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/deals/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Updates the properties of a deal. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/updating-a-deal\" target=\"_blank\" rel=\"noopener noreferrer\">updating a deal</a>."
					},
					"response": [
						{
							"name": "Add a deal",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"value\": \"<string>\",\n  \"label\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"currency\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"person_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"pipeline_id\": \"<integer>\",\n  \"stage_id\": \"<integer>\",\n  \"is_archived\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"channel\": \"<integer>\",\n  \"channel_id\": \"<string>\",\n  \"won_time\": \"<string>\",\n  \"lost_time\": \"<string>\",\n  \"close_time\": \"<string>\",\n  \"expected_close_date\": \"<date>\",\n  \"probability\": \"<number>\",\n  \"lost_reason\": \"<string>\",\n  \"visible_to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/deals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"creator_user_id\": {\n      \"id\": 8877,\n      \"name\": \"Creator\",\n      \"email\": \"john.doe@pipedrive.com\",\n      \"has_pic\": false,\n      \"pic_hash\": null,\n      \"active_flag\": true,\n      \"value\": 8877\n    },\n    \"user_id\": {\n      \"id\": 8877,\n      \"name\": \"Creator\",\n      \"email\": \"john.doe@pipedrive.com\",\n      \"has_pic\": false,\n      \"pic_hash\": null,\n      \"active_flag\": true,\n      \"value\": 8877\n    },\n    \"person_id\": {\n      \"active_flag\": true,\n      \"name\": \"Person\",\n      \"email\": [\n        {\n          \"label\": \"work\",\n          \"value\": \"person@pipedrive.com\",\n          \"primary\": true\n        }\n      ],\n      \"phone\": [\n        {\n          \"label\": \"work\",\n          \"value\": \"37244499911\",\n          \"primary\": true\n        }\n      ],\n      \"value\": 1101\n    },\n    \"org_id\": {\n      \"name\": \"Organization\",\n      \"people_count\": 2,\n      \"owner_id\": 8877,\n      \"address\": \"\",\n      \"active_flag\": true,\n      \"cc_email\": \"org@pipedrivemail.com\",\n      \"value\": 5\n    },\n    \"stage_id\": 2,\n    \"title\": \"Deal One\",\n    \"value\": 5000,\n    \"currency\": \"EUR\",\n    \"add_time\": \"2019-05-29 04:21:51\",\n    \"update_time\": \"2019-11-28 16:19:50\",\n    \"stage_change_time\": \"2019-11-28 15:41:22\",\n    \"active\": true,\n    \"deleted\": false,\n    \"status\": \"open\",\n    \"probability\": null,\n    \"next_activity_date\": \"2019-11-29\",\n    \"next_activity_time\": \"11:30:00\",\n    \"next_activity_id\": 128,\n    \"last_activity_id\": null,\n    \"last_activity_date\": null,\n    \"lost_reason\": null,\n    \"visible_to\": \"1\",\n    \"close_time\": null,\n    \"pipeline_id\": 1,\n    \"won_time\": \"2019-11-27 11:40:36\",\n    \"first_won_time\": \"2019-11-27 11:40:36\",\n    \"lost_time\": \"\",\n    \"products_count\": 0,\n    \"files_count\": 0,\n    \"notes_count\": 2,\n    \"followers_count\": 0,\n    \"email_messages_count\": 4,\n    \"activities_count\": 1,\n    \"done_activities_count\": 0,\n    \"undone_activities_count\": 1,\n    \"participants_count\": 1,\n    \"expected_close_date\": \"2019-06-29\",\n    \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n    \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n    \"label\": \"11\",\n    \"origin\": \"API\",\n    \"origin_id\": \"Zapier\",\n    \"channel\": 16,\n    \"channel_id\": null,\n    \"stage_order_nr\": 2,\n    \"person_name\": \"Person\",\n    \"org_name\": \"Organization\",\n    \"next_activity_subject\": \"Call\",\n    \"next_activity_type\": \"call\",\n    \"next_activity_duration\": \"00:30:00\",\n    \"next_activity_note\": \"Note content\",\n    \"formatted_value\": \"€5,000\",\n    \"weighted_value\": 5000,\n    \"formatted_weighted_value\": \"€5,000\",\n    \"weighted_value_currency\": \"EUR\",\n    \"rotten_time\": null,\n    \"owner_name\": \"Creator\",\n    \"cc_email\": \"company+deal1@pipedrivemail.com\",\n    \"org_hidden\": false,\n    \"person_hidden\": false,\n    \"acv\": null,\n    \"arr\": null,\n    \"mrr\": null,\n    \"acv_currency\": null,\n    \"arr_currency\": null,\n    \"mrr_currency\": null\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"8877\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"organization\": {\n      \"2\": {\n        \"id\": 2,\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"person\": {\n      \"1101\": {\n        \"active_flag\": true,\n        \"id\": 1101,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"3421787767\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"stage\": {\n      \"2\": {\n        \"id\": 2,\n        \"company_id\": 123,\n        \"order_nr\": 1,\n        \"name\": \"Stage Name\",\n        \"active_flag\": true,\n        \"deal_probability\": 100,\n        \"pipeline_id\": 1,\n        \"rotten_flag\": false,\n        \"rotten_days\": null,\n        \"add_time\": \"2015-12-08 13:54:06\",\n        \"update_time\": \"2015-12-08 13:54:06\",\n        \"pipeline_name\": \"Pipeline\",\n        \"pipeline_deal_probability\": true\n      }\n    },\n    \"pipeline\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Pipeline\",\n        \"url_title\": \"Pipeline\",\n        \"order_nr\": 0,\n        \"active\": true,\n        \"deal_probability\": true,\n        \"add_time\": \"2015-12-08 10:00:24\",\n        \"update_time\": \"2015-12-08 10:00:24\"\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List activities associated with a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/:id/activities?start=0&limit=<integer>&done=<number>&exclude=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"activities"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "done",
									"value": "<number>",
									"description": "Whether the activity is done or not. 0 = Not done, 1 = Done. If omitted, returns both Done and Not done activities."
								},
								{
									"key": "exclude",
									"value": "<string>",
									"description": "A comma-separated string of activity IDs to exclude from result"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Lists activities associated with a deal. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Activities#getActivities\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/activities?deal_id={id}</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/:id/activities?start=0&limit=<integer>&done=<number>&exclude=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"activities"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "done",
											"value": "<number>"
										},
										{
											"key": "exclude",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 8,\n      \"company_id\": 22122,\n      \"user_id\": 1234,\n      \"done\": false,\n      \"type\": \"deadline\",\n      \"reference_type\": \"scheduler-service\",\n      \"reference_id\": 7,\n      \"conference_meeting_client\": \"871b8bc88d3a1202\",\n      \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n      \"conference_meeting_id\": \"17058746701\",\n      \"due_date\": \"2020-06-09\",\n      \"due_time\": \"10:00\",\n      \"duration\": \"01:00\",\n      \"busy_flag\": true,\n      \"add_time\": \"2020-06-08 12:37:56\",\n      \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n      \"last_notification_time\": \"2020-08-08 12:37:56\",\n      \"last_notification_user_id\": 7655,\n      \"notification_language_id\": 1,\n      \"subject\": \"Deadline\",\n      \"public_description\": \"This is a description\",\n      \"calendar_sync_include_context\": \"\",\n      \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n      \"org_id\": 5,\n      \"person_id\": 1101,\n      \"deal_id\": 300,\n      \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n      \"project_id\": null,\n      \"active_flag\": true,\n      \"update_time\": \"2020-08-08 12:37:56\",\n      \"update_user_id\": 5596,\n      \"gcal_event_id\": \"\",\n      \"google_calendar_id\": \"\",\n      \"google_calendar_etag\": \"\",\n      \"source_timezone\": \"\",\n      \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n      \"rec_rule_extension\": \"\",\n      \"rec_master_activity_id\": 1,\n      \"series\": [],\n      \"note\": \"A note for the activity\",\n      \"created_by_user_id\": 1234,\n      \"location_subpremise\": \"\",\n      \"location_street_number\": \"3\",\n      \"location_route\": \"Mustamäe tee\",\n      \"location_sublocality\": \"Kristiine\",\n      \"location_locality\": \"Tallinn\",\n      \"location_admin_area_level_1\": \"Harju maakond\",\n      \"location_admin_area_level_2\": \"\",\n      \"location_country\": \"Estonia\",\n      \"location_postal_code\": \"10616\",\n      \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n      \"attendees\": [\n        {\n          \"email_address\": \"attendee@pipedrivemail.com\",\n          \"is_organizer\": 0,\n          \"name\": \"Attendee\",\n          \"person_id\": 25312,\n          \"status\": \"noreply\",\n          \"user_id\": null\n        }\n      ],\n      \"participants\": [\n        {\n          \"person_id\": 17985,\n          \"primary_flag\": false\n        },\n        {\n          \"person_id\": 1101,\n          \"primary_flag\": true\n        }\n      ],\n      \"org_name\": \"Organization\",\n      \"person_name\": \"Person\",\n      \"deal_title\": \"Deal\",\n      \"owner_name\": \"Creator\",\n      \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n      \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n      \"assigned_to_user_id\": 1235,\n      \"file\": {\n        \"id\": \"376892,\",\n        \"clean_name\": \"Audio 10:55:07.m4a\",\n        \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"allOf\": [\n      {\n        \"activity_distribution\": {\n          \"8877\": {\n            \"activities\": {\n              \"call\": 2,\n              \"meeting\": 1\n            },\n            \"name\": \"Will Smith\",\n            \"activity_count\": 3,\n            \"share\": 100\n          }\n        }\n      },\n      {\n        \"pagination\": {\n          \"start\": 0,\n          \"limit\": 100,\n          \"more_items_in_collection\": true\n        }\n      }\n    ]\n  },\n  \"related_objects\": {\n    \"allOf\": [\n      {\n        \"organization\": {\n          \"1\": {\n            \"id\": 1,\n            \"name\": \"Org Name\",\n            \"people_count\": 1,\n            \"owner_id\": 123,\n            \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n            \"active_flag\": true,\n            \"cc_email\": \"org@pipedrivemail.com\"\n          }\n        }\n      },\n      {\n        \"person\": {\n          \"1101\": {\n            \"active_flag\": true,\n            \"id\": 1101,\n            \"name\": \"Person\",\n            \"email\": [\n              {\n                \"label\": \"work\",\n                \"value\": \"person@pipedrive.com\",\n                \"primary\": true\n              }\n            ],\n            \"phone\": [\n              {\n                \"label\": \"work\",\n                \"value\": \"3421787767\",\n                \"primary\": true\n              }\n            ],\n            \"owner_id\": 8877\n          }\n        }\n      },\n      {\n        \"deal\": {\n          \"123\": {\n            \"id\": 123,\n            \"title\": \"Deal title\",\n            \"status\": \"open\",\n            \"value\": 600,\n            \"currency\": \"EUR\",\n            \"stage_id\": 2,\n            \"pipeline_id\": 1\n          }\n        }\n      },\n      {\n        \"user\": {\n          \"123\": {\n            \"id\": 123,\n            \"name\": \"Jane Doe\",\n            \"email\": \"jane@pipedrive.com\",\n            \"has_pic\": 1,\n            \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n            \"active_flag\": true\n          }\n        }\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "List updates about deal field values",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/:id/changelog?cursor=<string>&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"changelog"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Lists updates about field values of a deal."
					},
					"response": [
						{
							"name": "Get changelog of a deal",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/:id/changelog?cursor=<string>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"changelog"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"field_key\": \"title\",\n      \"old_value\": \"My Deel\",\n      \"new_value\": \"My Deal\",\n      \"actor_user_id\": 26,\n      \"time\": \"2024-02-12 09:14:35\",\n      \"change_source\": \"app\",\n      \"change_source_user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36\",\n      \"is_bulk_update_flag\": false\n    },\n    {\n      \"field_key\": \"value\",\n      \"old_value\": \"0\",\n      \"new_value\": \"100\",\n      \"actor_user_id\": 26,\n      \"time\": \"2024-02-12 09:10:12\",\n      \"change_source\": \"app\",\n      \"change_source_user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36\",\n      \"is_bulk_update_flag\": false\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"aWQ6NTQ0\"\n  }\n}"
						}
					]
				},
				{
					"name": "Duplicate deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/:id/duplicate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"duplicate"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Duplicates a deal."
					},
					"response": [
						{
							"name": "Duplicate a deal",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/:id/duplicate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"duplicate"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"creator_user_id\": 123,\n    \"user_id\": 456,\n    \"person_id\": 1,\n    \"org_id\": 2,\n    \"stage_id\": 2,\n    \"title\": \"Deal One\",\n    \"value\": 5000,\n    \"currency\": \"EUR\",\n    \"add_time\": \"2019-05-29 04:21:51\",\n    \"update_time\": \"2019-05-29 04:21:51\",\n    \"stage_change_time\": \"2019-11-28 15:41:22\",\n    \"active\": true,\n    \"deleted\": false,\n    \"status\": \"open\",\n    \"probability\": null,\n    \"next_activity_date\": \"2019-11-29\",\n    \"next_activity_time\": \"11:30:00\",\n    \"next_activity_id\": 128,\n    \"last_activity_id\": null,\n    \"last_activity_date\": null,\n    \"lost_reason\": null,\n    \"visible_to\": \"1\",\n    \"close_time\": null,\n    \"pipeline_id\": 1,\n    \"won_time\": \"2019-11-27 11:40:36\",\n    \"first_won_time\": \"2019-11-27 11:40:36\",\n    \"lost_time\": \"\",\n    \"products_count\": 0,\n    \"files_count\": 0,\n    \"notes_count\": 2,\n    \"followers_count\": 0,\n    \"email_messages_count\": 4,\n    \"activities_count\": 1,\n    \"done_activities_count\": 0,\n    \"undone_activities_count\": 1,\n    \"participants_count\": 1,\n    \"expected_close_date\": \"2019-06-29\",\n    \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n    \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n    \"label\": \"11\",\n    \"origin\": \"ManuallyCreated\",\n    \"origin_id\": null,\n    \"channel\": 52,\n    \"channel_id\": \"Jun23 Billboards\",\n    \"stage_order_nr\": 2,\n    \"person_name\": \"Person\",\n    \"org_name\": \"Organization\",\n    \"next_activity_subject\": \"Call\",\n    \"next_activity_type\": \"call\",\n    \"next_activity_duration\": \"00:30:00\",\n    \"next_activity_note\": \"Note content\",\n    \"formatted_value\": \"€5,000\",\n    \"weighted_value\": 5000,\n    \"formatted_weighted_value\": \"€5,000\",\n    \"weighted_value_currency\": \"EUR\",\n    \"rotten_time\": null,\n    \"owner_name\": \"Creator\",\n    \"cc_email\": \"company+deal1@pipedrivemail.com\",\n    \"org_hidden\": false,\n    \"person_hidden\": false,\n    \"acv\": null,\n    \"arr\": null,\n    \"mrr\": null,\n    \"acv_currency\": null,\n    \"arr_currency\": null,\n    \"mrr_currency\": null\n  }\n}"
						}
					]
				},
				{
					"name": "List files attached to a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/:id/files?start=0&limit=<integer>&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"files"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page. Please note that a maximum value of 100 is allowed."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Supported fields: `id`, `update_time`"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Lists files associated with a deal."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/:id/files?start=0&limit=<integer>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"files"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"user_id\": 8877,\n      \"deal_id\": 1,\n      \"person_id\": 1,\n      \"org_id\": 1480,\n      \"product_id\": 1,\n      \"activity_id\": 1,\n      \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n      \"log_id\": null,\n      \"add_time\": \"2020-09-16 11:19:36\",\n      \"update_time\": \"2020-09-16 11:19:36\",\n      \"file_name\": \"95781006_794143070992462_4330873630616453120_n_60817458877506f9eb74d03e5ef9ba061915b797998.jpg\",\n      \"file_type\": \"img\",\n      \"file_size\": 95116,\n      \"active_flag\": true,\n      \"inline_flag\": false,\n      \"remote_location\": \"s3\",\n      \"remote_id\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n      \"cid\": \"\",\n      \"s3_bucket\": \"\",\n      \"mail_message_id\": \"\",\n      \"mail_template_id\": \"\",\n      \"deal_name\": \"nice deal\",\n      \"person_name\": \"\",\n      \"people_name\": \"\",\n      \"org_name\": \"Pipedrive Inc.\",\n      \"product_name\": \"\",\n      \"lead_name\": \"nice lead\",\n      \"url\": \"https://app.pipedrive.com/api/v1/files/304/download\",\n      \"name\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n      \"description\": \"\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List updates about a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/:id/flow?start=0&limit=<integer>&all_changes=<string>&items=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"flow"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "all_changes",
									"value": "<string>",
									"description": "Whether to show custom field updates or not. 1 = Include custom field changes. If omitted returns changes without custom field updates."
								},
								{
									"key": "items",
									"value": "<string>",
									"description": "A comma-separated string for filtering out item specific updates. (Possible values - call, activity, plannedActivity, change, note, deal, file, dealChange, personChange, organizationChange, follower, dealFollower, personFollower, organizationFollower, participant, comment, mailMessage, mailMessageWithAttachment, invoice, document, marketing_campaign_stat, marketing_status_change)."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Lists updates about a deal."
					},
					"response": [
						{
							"name": "Get the deal updates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/:id/flow?start=0&limit=<integer>&all_changes=<string>&items=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"flow"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "all_changes",
											"value": "<string>"
										},
										{
											"key": "items",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"object\": \"dealChange\",\n      \"timestamp\": \"2020-09-25 09:21:55\",\n      \"data\": {\n        \"id\": 1300,\n        \"item_id\": 120,\n        \"user_id\": 8877,\n        \"field_key\": \"value\",\n        \"old_value\": 50,\n        \"new_value\": 100,\n        \"is_bulk_update_flag\": null,\n        \"log_time\": \"2020-09-25 09:21:55\",\n        \"change_source\": \"app\",\n        \"change_source_user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML like Gecko) Chrome/84.0.4147.135 Safari/537.36\",\n        \"additional_data\": []\n      }\n    },\n    {\n      \"object\": \"activity\",\n      \"timestamp\": \"2020-08-07 08:15:00\",\n      \"data\": {\n        \"id\": 8,\n        \"company_id\": 22122,\n        \"user_id\": 1234,\n        \"done\": false,\n        \"type\": \"deadline\",\n        \"reference_type\": \"scheduler-service\",\n        \"reference_id\": 7,\n        \"conference_meeting_client\": \"871b8bc88d3a1202\",\n        \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n        \"conference_meeting_id\": \"17058746701\",\n        \"due_date\": \"2020-06-09\",\n        \"due_time\": \"10:00\",\n        \"duration\": \"01:00\",\n        \"busy_flag\": true,\n        \"add_time\": \"2020-06-08 12:37:56\",\n        \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n        \"last_notification_time\": \"2020-08-08 12:37:56\",\n        \"last_notification_user_id\": 7655,\n        \"notification_language_id\": 1,\n        \"subject\": \"Deadline\",\n        \"public_description\": \"This is a description\",\n        \"calendar_sync_include_context\": \"\",\n        \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n        \"org_id\": 5,\n        \"person_id\": 1101,\n        \"deal_id\": 300,\n        \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n        \"project_id\": null,\n        \"active_flag\": true,\n        \"update_time\": \"2020-08-08 12:37:56\",\n        \"update_user_id\": 5596,\n        \"gcal_event_id\": \"\",\n        \"google_calendar_id\": \"\",\n        \"google_calendar_etag\": \"\",\n        \"source_timezone\": \"\",\n        \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n        \"rec_rule_extension\": \"\",\n        \"rec_master_activity_id\": 1,\n        \"series\": [],\n        \"note\": \"A note for the activity\",\n        \"created_by_user_id\": 1234,\n        \"location_subpremise\": \"\",\n        \"location_street_number\": \"3\",\n        \"location_route\": \"Mustamäe tee\",\n        \"location_sublocality\": \"Kristiine\",\n        \"location_locality\": \"Tallinn\",\n        \"location_admin_area_level_1\": \"Harju maakond\",\n        \"location_admin_area_level_2\": \"\",\n        \"location_country\": \"Estonia\",\n        \"location_postal_code\": \"10616\",\n        \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n        \"attendees\": [\n          {\n            \"email_address\": \"attendee@pipedrivemail.com\",\n            \"is_organizer\": 0,\n            \"name\": \"Attendee\",\n            \"person_id\": 25312,\n            \"status\": \"noreply\",\n            \"user_id\": null\n          }\n        ],\n        \"participants\": [\n          {\n            \"person_id\": 17985,\n            \"primary_flag\": false\n          },\n          {\n            \"person_id\": 1101,\n            \"primary_flag\": true\n          }\n        ],\n        \"org_name\": \"Organization\",\n        \"person_name\": \"Person\",\n        \"deal_title\": \"Deal\",\n        \"owner_name\": \"Creator\",\n        \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n        \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n        \"assigned_to_user_id\": 1235,\n        \"file\": {\n          \"id\": \"376892,\",\n          \"clean_name\": \"Audio 10:55:07.m4a\",\n          \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n        }\n      }\n    },\n    {\n      \"object\": \"mailMessage\",\n      \"timestamp\": \"2020-08-10 11:52:26\",\n      \"data\": {\n        \"attachments\": [\n          {\n            \"id\": 1,\n            \"user_id\": 8877,\n            \"deal_id\": 1,\n            \"person_id\": 1,\n            \"org_id\": 1480,\n            \"product_id\": 1,\n            \"activity_id\": 1,\n            \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n            \"log_id\": null,\n            \"add_time\": \"2020-09-16 11:19:36\",\n            \"update_time\": \"2020-09-16 11:19:36\",\n            \"file_name\": \"95781006_794143070992462_4330873630616453120_n_60817458877506f9eb74d03e5ef9ba061915b797998.jpg\",\n            \"file_type\": \"img\",\n            \"file_size\": 95116,\n            \"active_flag\": true,\n            \"inline_flag\": false,\n            \"remote_location\": \"s3\",\n            \"remote_id\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n            \"cid\": \"\",\n            \"s3_bucket\": \"\",\n            \"mail_message_id\": \"\",\n            \"mail_template_id\": \"\",\n            \"deal_name\": \"nice deal\",\n            \"person_name\": \"\",\n            \"people_name\": \"\",\n            \"org_name\": \"Pipedrive Inc.\",\n            \"product_name\": \"\",\n            \"lead_name\": \"nice lead\",\n            \"url\": \"https://app.pipedrive.com/api/v1/files/304/download\",\n            \"name\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n            \"description\": \"\"\n          }\n        ],\n        \"id\": 1,\n        \"from\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"to\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"cc\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"bcc\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"body_url\": \"https://example.org\",\n        \"nylas_id\": \"8cfw8n7l4iy24xxxxxxxxx\",\n        \"account_id\": \"ao5gpry0zykr1xxxxxxxxx\",\n        \"user_id\": 1,\n        \"mail_thread_id\": 1,\n        \"subject\": \"test subject\",\n        \"snippet\": \"test subject\",\n        \"mail_tracking_status\": \"opened\",\n        \"mail_link_tracking_enabled_flag\": 0,\n        \"read_flag\": 1,\n        \"draft\": \"\",\n        \"s3_bucket\": \"pipedrive-mail-live-fr\",\n        \"s3_bucket_path\": \"e9cf-6081745/77777/nylas/111/1111/body\",\n        \"draft_flag\": 0,\n        \"synced_flag\": 1,\n        \"deleted_flag\": 0,\n        \"external_deleted_flag\": false,\n        \"has_body_flag\": 1,\n        \"sent_flag\": 0,\n        \"sent_from_pipedrive_flag\": 0,\n        \"smart_bcc_flag\": 0,\n        \"message_time\": \"2019-11-14T06:02:06.000Z\",\n        \"add_time\": \"2019-11-14T06:02:06.000Z\",\n        \"update_time\": \"2019-11-14T07:15:49.000Z\",\n        \"has_attachments_flag\": 1,\n        \"has_inline_attachments_flag\": 0,\n        \"has_real_attachments_flag\": 1,\n        \"mua_message_id\": \"8cfw8n7l4iy24lfhnexxxxxx-0@mailer.nylas.com\",\n        \"template_id\": 1,\n        \"item_type\": \"mailMessage\",\n        \"timestamp\": \"2020-09-16T13:37:50.000Z\",\n        \"company_id\": 6081745\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  },\n  \"related_objects\": {\n    \"allOf\": [\n      {\n        \"user\": {\n          \"123\": {\n            \"id\": 123,\n            \"name\": \"Jane Doe\",\n            \"email\": \"jane@pipedrive.com\",\n            \"has_pic\": 1,\n            \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n            \"active_flag\": true\n          }\n        }\n      },\n      {\n        \"person\": {\n          \"1101\": {\n            \"active_flag\": true,\n            \"id\": 1101,\n            \"name\": \"Person\",\n            \"email\": [\n              {\n                \"label\": \"work\",\n                \"value\": \"person@pipedrive.com\",\n                \"primary\": true\n              }\n            ],\n            \"phone\": [\n              {\n                \"label\": \"work\",\n                \"value\": \"3421787767\",\n                \"primary\": true\n              }\n            ],\n            \"owner_id\": 8877\n          }\n        }\n      },\n      {\n        \"organization\": {\n          \"1\": {\n            \"id\": 1,\n            \"name\": \"Org Name\",\n            \"people_count\": 1,\n            \"owner_id\": 123,\n            \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n            \"active_flag\": true,\n            \"cc_email\": \"org@pipedrivemail.com\"\n          }\n        }\n      },\n      {\n        \"deal\": {\n          \"123\": {\n            \"id\": 123,\n            \"title\": \"Deal title\",\n            \"status\": \"open\",\n            \"value\": 600,\n            \"currency\": \"EUR\",\n            \"stage_id\": 2,\n            \"pipeline_id\": 1\n          }\n        }\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "List updates about participants of a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/:id/participantsChangelog?limit=<integer>&cursor=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"participantsChangelog"
							],
							"query": [
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "List updates about participants of a deal. This is a cursor-paginated endpoint. For more information, please refer to our documentation on <a href=\"https://pipedrive.readme.io/docs/core-api-concepts-pagination\" target=\"_blank\" rel=\"noopener noreferrer\">pagination</a>."
					},
					"response": [
						{
							"name": "Get participant changelogs for a given deal",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/:id/participantsChangelog?limit=<integer>&cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"participantsChangelog"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"actor_user_id\": 18,\n      \"person_id\": 10,\n      \"action\": \"added\",\n      \"time\": \"2024-01-10 11:47:23\"\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"eyJkZWFsIjo0fQ\"\n  }\n}"
						}
					]
				},
				{
					"name": "List followers of a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/:id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"followers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Lists the followers of a deal."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/:id/followers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"followers"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"user_id\": 123,\n      \"id\": 456,\n      \"deal_id\": 789,\n      \"add_time\": \"2020-09-09 11:36:23\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a follower to a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/deals/:id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"followers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Adds a follower to a deal."
					},
					"response": [
						{
							"name": "Add a follower to a deal",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/deals/:id/followers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"followers"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"user_id\": 1,\n    \"id\": 2,\n    \"deal_id\": 3,\n    \"add_time\": \"2018-04-11 12:54:43\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a follower from a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/:id/followers/:follower_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"followers",
								":follower_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								},
								{
									"key": "follower_id",
									"value": "<integer>",
									"description": "(Required) The ID of the relationship between the follower and the deal"
								}
							]
						},
						"description": "Deletes a follower from a deal."
					},
					"response": [
						{
							"name": "Delete a follower from a deal",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/:id/followers/:follower_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"followers",
										":follower_id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										},
										{
											"key": "follower_id",
											"value": "<integer>",
											"description": "(Required) The ID of the relationship between the follower and the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123\n  }\n}"
						}
					]
				},
				{
					"name": "List mail messages associated with a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/:id/mailMessages?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"mailMessages"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Lists mail messages associated with a deal."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/:id/mailMessages?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"mailMessages"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"object\": \"mailMessage\",\n      \"timestamp\": \"2020-09-16 13:38:17\",\n      \"data\": {\n        \"id\": 1,\n        \"from\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"to\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"cc\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"bcc\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"body_url\": \"https://example.org\",\n        \"nylas_id\": \"8cfw8n7l4iy24xxxxxxxxx\",\n        \"account_id\": \"ao5gpry0zykr1xxxxxxxxx\",\n        \"user_id\": 1,\n        \"mail_thread_id\": 1,\n        \"subject\": \"test subject\",\n        \"snippet\": \"test subject\",\n        \"mail_tracking_status\": \"opened\",\n        \"mail_link_tracking_enabled_flag\": 0,\n        \"read_flag\": 1,\n        \"draft\": \"\",\n        \"s3_bucket\": \"pipedrive-mail-live-fr\",\n        \"s3_bucket_path\": \"e9cf-6081745/77777/nylas/111/1111/body\",\n        \"draft_flag\": 0,\n        \"synced_flag\": 1,\n        \"deleted_flag\": 0,\n        \"external_deleted_flag\": false,\n        \"has_body_flag\": 1,\n        \"sent_flag\": 0,\n        \"sent_from_pipedrive_flag\": 0,\n        \"smart_bcc_flag\": 0,\n        \"message_time\": \"2019-11-14T06:02:06.000Z\",\n        \"add_time\": \"2019-11-14T06:02:06.000Z\",\n        \"update_time\": \"2019-11-14T07:15:49.000Z\",\n        \"has_attachments_flag\": 1,\n        \"has_inline_attachments_flag\": 0,\n        \"has_real_attachments_flag\": 1,\n        \"mua_message_id\": \"8cfw8n7l4iy24lfhnexxxxxx-0@mailer.nylas.com\",\n        \"template_id\": 1,\n        \"item_type\": \"mailMessage\",\n        \"timestamp\": \"2020-09-16T13:37:50.000Z\",\n        \"company_id\": 6081745\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Merge two deals",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merge_with_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/deals/:id/merge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"merge"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Merges a deal with another deal. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/merging-two-deals\" target=\"_blank\" rel=\"noopener noreferrer\">merging two deals</a>."
					},
					"response": [
						{
							"name": "Merges a deal with another deal",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"merge_with_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/deals/:id/merge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"merge"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"creator_user_id\": 123,\n    \"user_id\": 456,\n    \"person_id\": 1,\n    \"org_id\": 2,\n    \"stage_id\": 2,\n    \"title\": \"Deal One\",\n    \"value\": 5000,\n    \"currency\": \"EUR\",\n    \"add_time\": \"2019-05-29 04:21:51\",\n    \"update_time\": \"2019-06-29 05:20:31\",\n    \"stage_change_time\": \"2019-11-28 15:41:22\",\n    \"active\": true,\n    \"deleted\": false,\n    \"status\": \"open\",\n    \"probability\": null,\n    \"next_activity_date\": \"2019-11-29\",\n    \"next_activity_time\": \"11:30:00\",\n    \"next_activity_id\": 128,\n    \"last_activity_id\": null,\n    \"last_activity_date\": null,\n    \"lost_reason\": null,\n    \"visible_to\": \"1\",\n    \"close_time\": null,\n    \"pipeline_id\": 1,\n    \"won_time\": \"2019-11-27 11:40:36\",\n    \"first_won_time\": \"2019-11-27 11:40:36\",\n    \"lost_time\": \"\",\n    \"products_count\": 0,\n    \"files_count\": 0,\n    \"notes_count\": 2,\n    \"followers_count\": 0,\n    \"email_messages_count\": 4,\n    \"activities_count\": 1,\n    \"done_activities_count\": 0,\n    \"undone_activities_count\": 1,\n    \"participants_count\": 1,\n    \"expected_close_date\": \"2019-06-29\",\n    \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n    \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n    \"label\": \"11\",\n    \"origin\": \"ManuallyCreated\",\n    \"origin_id\": null,\n    \"channel\": 52,\n    \"channel_id\": \"Jun23 Billboards\",\n    \"stage_order_nr\": 2,\n    \"person_name\": \"Person\",\n    \"org_name\": \"Organization\",\n    \"next_activity_subject\": \"Call\",\n    \"next_activity_type\": \"call\",\n    \"next_activity_duration\": \"00:30:00\",\n    \"next_activity_note\": \"Note content\",\n    \"formatted_value\": \"€5,000\",\n    \"weighted_value\": 5000,\n    \"formatted_weighted_value\": \"€5,000\",\n    \"weighted_value_currency\": \"EUR\",\n    \"rotten_time\": null,\n    \"owner_name\": \"Creator\",\n    \"cc_email\": \"company+deal1@pipedrivemail.com\",\n    \"org_hidden\": false,\n    \"person_hidden\": false,\n    \"merge_what_id\": 2,\n    \"acv\": null,\n    \"arr\": null,\n    \"mrr\": null,\n    \"acv_currency\": null,\n    \"arr_currency\": null,\n    \"mrr_currency\": null\n  }\n}"
						}
					]
				},
				{
					"name": "List participants of a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/:id/participants?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"participants"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Lists the participants associated with a deal.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field."
					},
					"response": [
						{
							"name": "Get all deal participants by the DealID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/:id/participants?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"participants"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1092,\n      \"person_id\": {\n        \"active_flag\": true,\n        \"name\": \"Peter Pan\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"john.smith@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"736174198\",\n            \"primary\": true\n          }\n        ],\n        \"value\": 1598\n      },\n      \"add_time\": \"2020-07-07 10:29:47\",\n      \"active_flag\": true,\n      \"related_item_data\": {\n        \"deal_id\": 1078,\n        \"title\": \"Neverland deal\"\n      },\n      \"person\": {\n        \"id\": 1598,\n        \"company_id\": 4657212,\n        \"owner_id\": {\n          \"id\": 6900896,\n          \"name\": \"Foo Bar\",\n          \"email\": \"foo.bar@pipedrive.com\",\n          \"has_pic\": 0,\n          \"pic_hash\": null,\n          \"active_flag\": true,\n          \"value\": 6900896\n        },\n        \"org_id\": {\n          \"name\": \"Neverland\",\n          \"people_count\": 1,\n          \"owner_id\": 6900896,\n          \"address\": null,\n          \"active_flag\": true,\n          \"cc_email\": null,\n          \"value\": 314\n        },\n        \"name\": \"Peter Pan\",\n        \"first_name\": \"Peter\",\n        \"last_name\": \"Pan\",\n        \"open_deals_count\": 0,\n        \"related_open_deals_count\": 0,\n        \"closed_deals_count\": 0,\n        \"related_closed_deals_count\": 0,\n        \"participant_open_deals_count\": 0,\n        \"participant_closed_deals_count\": 0,\n        \"email_messages_count\": 0,\n        \"activities_count\": 4,\n        \"done_activities_count\": 1,\n        \"undone_activities_count\": 3,\n        \"files_count\": 1,\n        \"notes_count\": 12,\n        \"followers_count\": 1,\n        \"won_deals_count\": 0,\n        \"related_won_deals_count\": 0,\n        \"lost_deals_count\": 0,\n        \"related_lost_deals_count\": 0,\n        \"active_flag\": true,\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"736174198\",\n            \"primary\": true\n          }\n        ],\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"john.smith@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"first_char\": \"p\",\n        \"update_time\": \"2020-08-31 14:25:11\",\n        \"add_time\": \"2020-07-07 10:29:47\",\n        \"visible_to\": \"3\",\n        \"picture_id\": null,\n        \"sync_needed\": false,\n        \"next_activity_date\": \"2020-07-01\",\n        \"next_activity_time\": null,\n        \"next_activity_id\": 2448,\n        \"last_activity_id\": 2450,\n        \"last_activity_date\": \"2020-07-02\",\n        \"last_incoming_mail_time\": null,\n        \"last_outgoing_mail_time\": null,\n        \"label\": \"5, 6\",\n        \"org_name\": \"Neverland\",\n        \"owner_name\": \"Foo Bar\",\n        \"cc_email\": null\n      },\n      \"added_by_user_id\": {\n        \"id\": 6900896,\n        \"name\": \"Foo Bar\",\n        \"email\": \"foo.bar@pipedrive.com\",\n        \"has_pic\": 0,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 6900896\n      },\n      \"related_item_type\": \"deal\",\n      \"related_item_id\": 1078\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"6900896\": {\n        \"id\": 6900896,\n        \"name\": \"Foo Bar\",\n        \"email\": \"foo.bar@pipedrive.com\",\n        \"has_pic\": 0,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"person\": {\n      \"1598\": {\n        \"active_flag\": true,\n        \"id\": 1598,\n        \"name\": \"Peter Pan\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"john.smith@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"736174198\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"organization\": {\n      \"314\": {\n        \"id\": 314,\n        \"name\": \"Neverland\",\n        \"people_count\": 1,\n        \"owner_id\": 6900896,\n        \"address\": null,\n        \"active_flag\": true,\n        \"cc_email\": null\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a participant to a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"person_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/deals/:id/participants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"participants"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Adds a participant to a deal."
					},
					"response": [
						{
							"name": "Add new participant to the deal",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"person_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/deals/:id/participants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"participants"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2146,\n    \"person_id\": {\n      \"active_flag\": true,\n      \"name\": \"Bortoloni\",\n      \"email\": [\n        {\n          \"label\": \"work\",\n          \"value\": \"namna.nanaaa@pipedrive.com\",\n          \"primary\": true\n        }\n      ],\n      \"phone\": [\n        {\n          \"value\": \"\",\n          \"primary\": true\n        }\n      ],\n      \"value\": 1131\n    },\n    \"add_time\": \"2020-09-14 05:34:59\",\n    \"active_flag\": true,\n    \"related_item_data\": {\n      \"deal_id\": 1078,\n      \"title\": \"Neverland deal\"\n    },\n    \"person\": {\n      \"id\": 1131,\n      \"company_id\": 4657212,\n      \"owner_id\": {\n        \"id\": 9126687,\n        \"name\": \"Moo moo\",\n        \"email\": \"moo.moo@pipedrive.com\",\n        \"has_pic\": 0,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 9126687\n      },\n      \"org_id\": null,\n      \"name\": \"Bortoloni\",\n      \"first_name\": \"Bortoloni\",\n      \"last_name\": null,\n      \"open_deals_count\": 0,\n      \"related_open_deals_count\": 0,\n      \"closed_deals_count\": 0,\n      \"related_closed_deals_count\": 0,\n      \"participant_open_deals_count\": 0,\n      \"participant_closed_deals_count\": 0,\n      \"email_messages_count\": 0,\n      \"activities_count\": 0,\n      \"done_activities_count\": 0,\n      \"undone_activities_count\": 0,\n      \"files_count\": 0,\n      \"notes_count\": 0,\n      \"followers_count\": 1,\n      \"won_deals_count\": 0,\n      \"related_won_deals_count\": 0,\n      \"lost_deals_count\": 0,\n      \"related_lost_deals_count\": 0,\n      \"active_flag\": true,\n      \"phone\": [\n        {\n          \"value\": \"\",\n          \"primary\": true\n        }\n      ],\n      \"email\": [\n        {\n          \"label\": \"work\",\n          \"value\": \"namna.nanaaa@pipedrive.com\",\n          \"primary\": true\n        }\n      ],\n      \"first_char\": \"b\",\n      \"update_time\": \"2020-07-09 07:44:51\",\n      \"add_time\": \"2020-02-03 10:14:03\",\n      \"visible_to\": \"3\",\n      \"picture_id\": null,\n      \"sync_needed\": false,\n      \"next_activity_date\": null,\n      \"next_activity_time\": null,\n      \"next_activity_id\": null,\n      \"last_activity_id\": null,\n      \"last_activity_date\": null,\n      \"last_incoming_mail_time\": null,\n      \"last_outgoing_mail_time\": null,\n      \"label\": \"5, 6\",\n      \"org_name\": null,\n      \"owner_name\": \"Gabriel\",\n      \"cc_email\": null\n    },\n    \"added_by_user_id\": {\n      \"id\": 927097,\n      \"name\": \"Heheh Nono\",\n      \"email\": \"heheh.nono@pipedrive.com\",\n      \"has_pic\": 0,\n      \"pic_hash\": null,\n      \"active_flag\": true,\n      \"value\": 927097\n    },\n    \"related_item_type\": \"deal\",\n    \"related_item_id\": 1078\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"927097\": {\n        \"id\": 927097,\n        \"name\": \"Heheh Nono\",\n        \"email\": \"heheh.nono@pipedrive.com\",\n        \"has_pic\": 0,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      },\n      \"9126687\": {\n        \"id\": 9126687,\n        \"name\": \"Gabriel\",\n        \"email\": \"gogoog.yayay@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"4db4fc64638d7d3d9e16e64599ccaff6\",\n        \"active_flag\": true\n      }\n    },\n    \"person\": {\n      \"1131\": {\n        \"active_flag\": true,\n        \"id\": 1131,\n        \"name\": \"Bortoloni\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"namna.nanaaa@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"value\": \"\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a participant from a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/:id/participants/:deal_participant_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"participants",
								":deal_participant_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								},
								{
									"key": "deal_participant_id",
									"value": "<integer>",
									"description": "(Required) The ID of the participant of the deal"
								}
							]
						},
						"description": "Deletes a participant from a deal."
					},
					"response": [
						{
							"name": "Delete a participant from a deal",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/:id/participants/:deal_participant_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"participants",
										":deal_participant_id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										},
										{
											"key": "deal_participant_id",
											"value": "<integer>",
											"description": "(Required) The ID of the participant of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123\n  }\n}"
						}
					]
				},
				{
					"name": "List permitted users",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/:id/permittedUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"permittedUsers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Lists the users permitted to access a deal."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/:id/permittedUsers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"permittedUsers"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    123,\n    456\n  ]\n}"
						}
					]
				},
				{
					"name": "List all persons associated with a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/:id/persons?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"persons"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Lists all persons associated with a deal, regardless of whether the person is the primary contact of the deal, or added as a participant.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Persons#getPersons\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/persons?deal_id={id}</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/:id/persons?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"persons"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"company_id\": 12,\n      \"owner_id\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true,\n        \"value\": 123\n      },\n      \"org_id\": {\n        \"name\": \"Org Name\",\n        \"people_count\": 1,\n        \"owner_id\": 123,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\",\n        \"value\": 1234\n      },\n      \"name\": \"Will Smith\",\n      \"first_name\": \"Will\",\n      \"last_name\": \"Smith\",\n      \"open_deals_count\": 2,\n      \"related_open_deals_count\": 2,\n      \"closed_deals_count\": 3,\n      \"related_closed_deals_count\": 3,\n      \"participant_open_deals_count\": 1,\n      \"participant_closed_deals_count\": 1,\n      \"email_messages_count\": 1,\n      \"activities_count\": 1,\n      \"done_activities_count\": 1,\n      \"undone_activities_count\": 2,\n      \"files_count\": 2,\n      \"notes_count\": 2,\n      \"followers_count\": 3,\n      \"won_deals_count\": 3,\n      \"related_won_deals_count\": 3,\n      \"lost_deals_count\": 1,\n      \"related_lost_deals_count\": 1,\n      \"active_flag\": true,\n      \"phone\": [\n        {\n          \"value\": \"12345\",\n          \"primary\": true,\n          \"label\": \"work\"\n        }\n      ],\n      \"email\": [\n        {\n          \"value\": \"12345@email.com\",\n          \"primary\": true,\n          \"label\": \"work\"\n        }\n      ],\n      \"primary_email\": \"12345@email.com\",\n      \"first_char\": \"w\",\n      \"update_time\": \"2020-05-08 05:30:20\",\n      \"add_time\": \"2017-10-18 13:23:07\",\n      \"visible_to\": \"3\",\n      \"marketing_status\": \"no_consent\",\n      \"picture_id\": {\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n        },\n        \"value\": 4\n      },\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": 34,\n      \"last_activity_date\": \"2019-11-28\",\n      \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n      \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n      \"label\": 1,\n      \"label_ids\": [\n        1,\n        2,\n        3\n      ],\n      \"org_name\": \"Organization name\",\n      \"owner_name\": \"Jane Doe\",\n      \"cc_email\": \"org@pipedrivemail.com\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  },\n  \"related_objects\": {\n    \"allOf\": [\n      {\n        \"organization\": {\n          \"1\": {\n            \"id\": 1,\n            \"name\": \"Org Name\",\n            \"people_count\": 1,\n            \"owner_id\": 123,\n            \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n            \"active_flag\": true,\n            \"cc_email\": \"org@pipedrivemail.com\"\n          }\n        }\n      },\n      {\n        \"user\": {\n          \"123\": {\n            \"id\": 123,\n            \"name\": \"Jane Doe\",\n            \"email\": \"jane@pipedrive.com\",\n            \"has_pic\": 1,\n            \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n            \"active_flag\": true\n          }\n        }\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "List products attached to a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/:id/products?start=0&limit=<integer>&include_product_data=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"products"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "include_product_data",
									"value": "<number>",
									"description": "Whether to fetch product data along with each attached product (1) or not (0, default)"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Lists products attached to a deal."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/:id/products?start=0&limit=<integer>&include_product_data=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"products"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "include_product_data",
											"value": "<number>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 7,\n      \"deal_id\": 5,\n      \"order_nr\": 1,\n      \"product_id\": 4,\n      \"product_variation_id\": null,\n      \"item_price\": 22,\n      \"discount\": 0.2,\n      \"discount_type\": \"percentage\",\n      \"sum\": 109.78,\n      \"currency\": \"EUR\",\n      \"enabled_flag\": true,\n      \"add_time\": \"2020-09-18 11:11:06\",\n      \"last_edit\": \"2020-09-18 11:11:06\",\n      \"comments\": \"This is comment\",\n      \"active_flag\": true,\n      \"tax\": 11,\n      \"tax_method\": \"inclusive\",\n      \"name\": \"1234\",\n      \"sum_formatted\": \"109,78 €\",\n      \"quantity_formatted\": \"5\",\n      \"quantity\": 5,\n      \"billing_frequency\": \"weekly\",\n      \"billing_frequency_cycles\": 52,\n      \"billing_start_date\": null,\n      \"product\": {\n        \"id\": 1,\n        \"name\": \"Regular Pencil\",\n        \"code\": \"MPENCIL\",\n        \"description\": null,\n        \"unit\": \"\",\n        \"tax\": 0,\n        \"category\": null,\n        \"active_flag\": true,\n        \"selectable\": true,\n        \"first_char\": \"r\",\n        \"visible_to\": \"3\",\n        \"owner_id\": {\n          \"id\": 10100010,\n          \"name\": \"Example User\",\n          \"email\": \"example@test.com\",\n          \"has_pic\": true,\n          \"pic_hash\": \"5df5332929fab76702207f38b29a5d82\",\n          \"active_flag\": true,\n          \"value\": 10100010\n        },\n        \"files_count\": null,\n        \"add_time\": \"2019-12-19 11:36:49\",\n        \"update_time\": \"2019-12-26 13:35:17\",\n        \"billing_frequency\": \"weekly\",\n        \"billing_frequency_cycles\": 52,\n        \"prices\": [\n          {\n            \"id\": 1,\n            \"product_id\": 1,\n            \"price\": 5,\n            \"currency\": \"EUR\",\n            \"cost\": 2,\n            \"overhead_cost\": 3,\n            \"notes\": \"this is a note\"\n          }\n        ]\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"products_quantity_total\": 6,\n    \"products_sum_total\": 3342,\n    \"products_quantity_total_formatted\": \"6\",\n    \"products_sum_total_formatted\": \"3 342,79 €\",\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"10100010\": {\n        \"id\": 10100010,\n        \"name\": \"Test User\",\n        \"email\": \"example@test.com\",\n        \"has_pic\": true,\n        \"pic_hash\": \"5df5332929fab76702207f38b29a5d88\",\n        \"active_flag\": true\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a product to a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<object>",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/deals/:id/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"products"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Adds a product to a deal, creating a new item called a deal-product."
					},
					"response": [
						{
							"name": "Add a product to the deal",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"product_id\": \"<integer>\",\n  \"item_price\": \"<number>\",\n  \"quantity\": \"<integer>\",\n  \"discount\": 0,\n  \"discount_type\": \"percentage\",\n  \"product_variation_id\": \"<integer>\",\n  \"comments\": \"<string>\",\n  \"tax\": 0,\n  \"tax_method\": \"<string>\",\n  \"enabled_flag\": true,\n  \"billing_frequency\": \"one-time\",\n  \"billing_frequency_cycles\": null,\n  \"billing_start_date\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/deals/:id/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"products"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 123,\n    \"deal_id\": 456,\n    \"order_nr\": 1,\n    \"product_id\": 789,\n    \"product_variation_id\": 555,\n    \"item_price\": 300,\n    \"discount\": 5,\n    \"discount_type\": \"percentage\",\n    \"sum\": 2850,\n    \"currency\": \"USD\",\n    \"enabled_flag\": true,\n    \"add_time\": \"2019-11-27 11:40:36\",\n    \"last_edit\": \"\",\n    \"comments\": \"This is a product comment\",\n    \"active_flag\": true,\n    \"tax\": 10,\n    \"name\": \"Product name\",\n    \"quantity\": 5,\n    \"tax_method\": \"inclusive\",\n    \"billing_frequency\": \"one-time\",\n    \"billing_frequency_cycles\": null,\n    \"billing_start_date\": \"2024-05-09\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update the product attached to a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<object>",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/deals/:id/products/:product_attachment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"products",
								":product_attachment_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								},
								{
									"key": "product_attachment_id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal-product (the ID of the product attached to the deal)"
								}
							]
						},
						"description": "Updates the details of the product that has been attached to a deal."
					},
					"response": [
						{
							"name": "Update product attachment details",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"product_id\": \"<integer>\",\n  \"item_price\": \"<number>\",\n  \"quantity\": \"<integer>\",\n  \"discount\": 0,\n  \"discount_type\": \"percentage\",\n  \"product_variation_id\": \"<integer>\",\n  \"comments\": \"<string>\",\n  \"tax\": 0,\n  \"tax_method\": \"<string>\",\n  \"enabled_flag\": true,\n  \"billing_frequency\": \"<string>\",\n  \"billing_frequency_cycles\": \"<integer>\",\n  \"billing_start_date\": \"<YYYY-MM-DD>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/deals/:id/products/:product_attachment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"products",
										":product_attachment_id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										},
										{
											"key": "product_attachment_id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal-product (the ID of the product attached to the deal)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 123,\n    \"deal_id\": 456,\n    \"order_nr\": 1,\n    \"product_id\": 789,\n    \"product_variation_id\": 555,\n    \"item_price\": 300,\n    \"discount\": 5,\n    \"discount_type\": \"percentage\",\n    \"sum\": 2850,\n    \"currency\": \"USD\",\n    \"enabled_flag\": true,\n    \"add_time\": \"2019-11-27 11:40:36\",\n    \"last_edit\": \"\",\n    \"comments\": \"This is a product comment\",\n    \"active_flag\": true,\n    \"tax\": 10,\n    \"tax_method\": \"exclusive\",\n    \"name\": \"Product name\",\n    \"quantity\": 5,\n    \"billing_frequency\": \"annually\",\n    \"billing_frequency_cycles\": null,\n    \"billing_start_date\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Delete an attached product from a deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deals/:id/products/:product_attachment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deals",
								":id",
								"products",
								":product_attachment_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								},
								{
									"key": "product_attachment_id",
									"value": "<integer>",
									"description": "(Required) The product attachment ID"
								}
							]
						},
						"description": "Deletes a product attachment from a deal, using the `product_attachment_id`\n\nNot possible to delete the attached product if the deal has installments associated and the product is the last one enabled\n"
					},
					"response": [
						{
							"name": "Delete an attached product from a deal",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deals/:id/products/:product_attachment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deals",
										":id",
										"products",
										":product_attachment_id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										},
										{
											"key": "product_attachment_id",
											"value": "<integer>",
											"description": "(Required) The product attachment ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123\n  }\n}"
						}
					]
				}
			],
			"description": "Deals represent ongoing, lost or won sales to an organization or to a person. Each deal has a monetary value and must be placed in a stage. Deals can be owned by a user, and followed by one or many users. Each deal consists of standard data fields but can also contain a number of custom fields. The custom fields can be recognized by long hashes as keys. These hashes can be mapped against `DealField.key`. The corresponding label for each such custom field can be obtained from `DealField.name`.\n"
		},
		{
			"name": "Files",
			"item": [
				{
					"name": "Get all files",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files?start=0&limit=<integer>&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page. Please note that a maximum value of 100 is allowed."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Supported fields: `id`, `update_time`"
								}
							]
						},
						"description": "Returns data about all files."
					},
					"response": [
						{
							"name": "Get data about all files uploaded to Pipedrive",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?start=0&limit=<integer>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 123,\n      \"user_id\": 456,\n      \"deal_id\": 1,\n      \"person_id\": 789,\n      \"org_id\": 1,\n      \"product_id\": 1,\n      \"activity_id\": 1,\n      \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n      \"log_id\": null,\n      \"add_time\": \"2020-02-20 14:36:35\",\n      \"update_time\": \"2020-02-20 14:57:33\",\n      \"file_name\": \"IMG_8189_52233498214699de9579e7b304a81b157b2eb2137e8062.jpg\",\n      \"file_type\": \"img\",\n      \"file_size\": 7801780,\n      \"active_flag\": true,\n      \"inline_flag\": false,\n      \"remote_location\": \"googledocs\",\n      \"remote_id\": \"1mT6jshiv6537IirwOExXJuG1jdR4F0FQ\",\n      \"cid\": \"\",\n      \"s3_bucket\": \"\",\n      \"mail_message_id\": \"\",\n      \"mail_template_id\": \"\",\n      \"deal_name\": \"\",\n      \"person_name\": \"Person\",\n      \"lead_name\": \"Test lead name\",\n      \"org_name\": \"\",\n      \"product_name\": \"\",\n      \"url\": \"https://2a7f.pipedrive.com/v1/files/123/download\",\n      \"name\": \"test file name\",\n      \"description\": \"test file description\"\n    },\n    {\n      \"id\": 123321,\n      \"user_id\": 456,\n      \"deal_id\": 1,\n      \"person_id\": 789987,\n      \"org_id\": 1,\n      \"product_id\": 1,\n      \"activity_id\": 1,\n      \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n      \"log_id\": null,\n      \"add_time\": \"2020-02-20 14:36:35\",\n      \"update_time\": \"2020-02-20 14:57:33\",\n      \"file_name\": \"IMG_8189_52233498214699de9579e7b304a81b157b2eb2137e8062.jpg\",\n      \"file_type\": \"img\",\n      \"file_size\": 7801780,\n      \"active_flag\": true,\n      \"inline_flag\": false,\n      \"remote_location\": \"googledocs\",\n      \"remote_id\": \"1mT6jshiv6537IirwOExXJuG1jdR4F0FQ\",\n      \"cid\": \"\",\n      \"s3_bucket\": \"\",\n      \"mail_message_id\": \"\",\n      \"mail_template_id\": \"\",\n      \"deal_name\": \"\",\n      \"person_name\": \"Person\",\n      \"org_name\": \"\",\n      \"product_name\": \"\",\n      \"lead_name\": \"Test lead name\",\n      \"url\": \"https://2a7f.pipedrive.com/v1/files/123321/download\",\n      \"name\": \"second test file name\",\n      \"description\": \"second test file description\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true,\n      \"next_start\": 100\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add file",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) A single file, supplied in the multipart/form-data encoding and contained within the given boundaries",
									"type": "file",
									"src": []
								},
								{
									"key": "deal_id",
									"value": "<integer>",
									"description": "The ID of the deal to associate file(s) with",
									"type": "text"
								},
								{
									"key": "person_id",
									"value": "<integer>",
									"description": "The ID of the person to associate file(s) with",
									"type": "text"
								},
								{
									"key": "org_id",
									"value": "<integer>",
									"description": "The ID of the organization to associate file(s) with",
									"type": "text"
								},
								{
									"key": "product_id",
									"value": "<integer>",
									"description": "The ID of the product to associate file(s) with",
									"type": "text"
								},
								{
									"key": "activity_id",
									"value": "<integer>",
									"description": "The ID of the activity to associate file(s) with",
									"type": "text"
								},
								{
									"key": "lead_id",
									"value": "<uuid>",
									"description": "The ID of the lead to associate file(s) with",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files"
							]
						},
						"description": "Lets you upload a file and associate it with a deal, person, organization, activity, product or lead. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-file\" target=\"_blank\" rel=\"noopener noreferrer\">adding a file</a>."
					},
					"response": [
						{
							"name": "Add a file from computer or Google Drive and associate it with deal, person, organization, activity or product",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>",
											"description": "(Required) A single file, supplied in the multipart/form-data encoding and contained within the given boundaries",
											"type": "text"
										},
										{
											"key": "deal_id",
											"value": "<integer>",
											"description": "The ID of the deal to associate file(s) with",
											"type": "text"
										},
										{
											"key": "person_id",
											"value": "<integer>",
											"description": "The ID of the person to associate file(s) with",
											"type": "text"
										},
										{
											"key": "org_id",
											"value": "<integer>",
											"description": "The ID of the organization to associate file(s) with",
											"type": "text"
										},
										{
											"key": "product_id",
											"value": "<integer>",
											"description": "The ID of the product to associate file(s) with",
											"type": "text"
										},
										{
											"key": "activity_id",
											"value": "<integer>",
											"description": "The ID of the activity to associate file(s) with",
											"type": "text"
										},
										{
											"key": "lead_id",
											"value": "<uuid>",
											"description": "The ID of the lead to associate file(s) with",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123,\n    \"user_id\": 456,\n    \"deal_id\": 1,\n    \"person_id\": 789,\n    \"org_id\": 1,\n    \"product_id\": 1,\n    \"activity_id\": 1,\n    \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n    \"log_id\": null,\n    \"add_time\": \"2020-02-20 14:36:35\",\n    \"update_time\": \"2020-02-20 14:36:31\",\n    \"file_name\": \"IMG_8189_52233498214699de9579e7b304a81b157b2eb2137e8062.jpg\",\n    \"file_type\": \"img\",\n    \"file_size\": 7801780,\n    \"active_flag\": true,\n    \"inline_flag\": false,\n    \"remote_location\": \"googledocs\",\n    \"remote_id\": \"1mT6jshiv6537IirwOExXJuG1jdR4F0FQ\",\n    \"cid\": \"\",\n    \"s3_bucket\": \"\",\n    \"mail_message_id\": \"\",\n    \"mail_template_id\": \"\",\n    \"deal_name\": \"\",\n    \"person_name\": \"Person\",\n    \"org_name\": \"\",\n    \"product_name\": \"\",\n    \"lead_name\": \"Test lead name\",\n    \"url\": \"https://2a7f.pipedrive.com/v1/files/123/download\",\n    \"name\": \"IMG_8189.jpg\",\n    \"description\": \"\"\n  }\n}"
						}
					]
				},
				{
					"name": "Create a remote file and link it to an item",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "file_type",
									"value": "<string>",
									"description": "(Required) The file type"
								},
								{
									"key": "title",
									"value": "<string>",
									"description": "(Required) The title of the file"
								},
								{
									"key": "item_type",
									"value": "<string>",
									"description": "(Required) The item type"
								},
								{
									"key": "item_id",
									"value": "<integer>",
									"description": "(Required) The ID of the item to associate the file with"
								},
								{
									"key": "remote_location",
									"value": "<string>",
									"description": "(Required) The location type to send the file to. Only `googledrive` is supported at the moment."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files/remote",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"remote"
							]
						},
						"description": "Creates a new empty file in the remote location (`googledrive`) that will be linked to the item you supply. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-remote-file\" target=\"_blank\" rel=\"noopener noreferrer\">adding a remote file</a>."
					},
					"response": [
						{
							"name": "Creates a new empty file in the remote location (googledrive) that will be linked to the item you supply - deal, person or organization",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "file_type",
											"value": "<string>",
											"description": "(Required) The file type"
										},
										{
											"key": "title",
											"value": "<string>",
											"description": "(Required) The title of the file"
										},
										{
											"key": "item_type",
											"value": "<string>",
											"description": "(Required) The item type"
										},
										{
											"key": "item_id",
											"value": "<integer>",
											"description": "(Required) The ID of the item to associate the file with"
										},
										{
											"key": "remote_location",
											"value": "<string>",
											"description": "(Required) The location type to send the file to. Only `googledrive` is supported at the moment."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/files/remote",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"remote"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 7195,\n    \"user_id\": 456,\n    \"deal_id\": 36,\n    \"person_id\": 1,\n    \"org_id\": 15,\n    \"product_id\": 1,\n    \"activity_id\": 1,\n    \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n    \"log_id\": null,\n    \"add_time\": \"2020-02-21 11:52:28\",\n    \"update_time\": \"2020-02-21 11:52:24\",\n    \"file_name\": \"\",\n    \"file_type\": \"gdoc\",\n    \"file_size\": 0,\n    \"active_flag\": true,\n    \"inline_flag\": false,\n    \"remote_location\": \"googledocs\",\n    \"remote_id\": \"1gzyh6ExBxIb4RBZbAZxsrrBp45yuXhZWq3Zash5b75c\",\n    \"cid\": \"\",\n    \"s3_bucket\": \"\",\n    \"mail_message_id\": \"\",\n    \"mail_template_id\": \"\",\n    \"deal_name\": \"test deal\",\n    \"person_name\": \"\",\n    \"org_name\": \"test org\",\n    \"product_name\": \"\",\n    \"lead_name\": \"Test lead name 1\",\n    \"url\": \"https://app.pipedrive.com/api/v1/files/7195/download\",\n    \"name\": \"Test title for remote file\",\n    \"description\": \"\"\n  }\n}"
						}
					]
				},
				{
					"name": "Link a remote file to an item",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "item_type",
									"value": "<string>",
									"description": "(Required) The item type"
								},
								{
									"key": "item_id",
									"value": "<integer>",
									"description": "(Required) The ID of the item to associate the file with"
								},
								{
									"key": "remote_id",
									"value": "<string>",
									"description": "(Required) The remote item ID"
								},
								{
									"key": "remote_location",
									"value": "<string>",
									"description": "(Required) The location type to send the file to. Only `googledrive` is supported at the moment."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files/remoteLink",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"remoteLink"
							]
						},
						"description": "Links an existing remote file (`googledrive`) to the item you supply. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-remote-file\" target=\"_blank\" rel=\"noopener noreferrer\">adding a remote file</a>."
					},
					"response": [
						{
							"name": "Links an existing remote file (googledrive) to the item you supply - deal, person, organization",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "item_type",
											"value": "<string>",
											"description": "(Required) The item type"
										},
										{
											"key": "item_id",
											"value": "<integer>",
											"description": "(Required) The ID of the item to associate the file with"
										},
										{
											"key": "remote_id",
											"value": "<string>",
											"description": "(Required) The remote item ID"
										},
										{
											"key": "remote_location",
											"value": "<string>",
											"description": "(Required) The location type to send the file to. Only `googledrive` is supported at the moment."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/files/remoteLink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"remoteLink"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 7196,\n    \"user_id\": 456,\n    \"deal_id\": 35,\n    \"person_id\": 1,\n    \"org_id\": 1,\n    \"product_id\": 1,\n    \"activity_id\": 1,\n    \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n    \"log_id\": null,\n    \"add_time\": \"2020-02-21 12:02:37\",\n    \"update_time\": \"2020-02-21 12:02:37\",\n    \"file_name\": \"Test title to remote file\",\n    \"file_type\": \"gdoc\",\n    \"file_size\": 0,\n    \"active_flag\": true,\n    \"inline_flag\": false,\n    \"remote_location\": \"googledocs\",\n    \"remote_id\": \"1gzyh6ExBxIb4RBZbAZxsrrBp45yuXhZWq3Zash5b75c\",\n    \"cid\": \"\",\n    \"s3_bucket\": \"\",\n    \"mail_message_id\": \"\",\n    \"mail_template_id\": \"\",\n    \"deal_name\": \"Test deal name\",\n    \"person_name\": \"Test person name\",\n    \"org_name\": \"\",\n    \"product_name\": \"\",\n    \"lead_name\": \"Test lead name\",\n    \"url\": \"https://app.pipedrive.com/api/v1/files/7196/download\",\n    \"name\": \"Test title for remote file\",\n    \"description\": \"\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a file",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the file"
								}
							]
						},
						"description": "Marks a file as deleted. After 30 days, the file will be permanently deleted."
					},
					"response": [
						{
							"name": "Delete a file from Pipedrive",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the file"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123\n  }\n}"
						}
					]
				},
				{
					"name": "Get one file",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the file"
								}
							]
						},
						"description": "Returns data about a specific file."
					},
					"response": [
						{
							"name": "Get data about one specific file uploaded to Pipedrive",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the file"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123,\n    \"user_id\": 456,\n    \"deal_id\": 1,\n    \"person_id\": 789,\n    \"org_id\": 1,\n    \"product_id\": 1,\n    \"activity_id\": 1,\n    \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n    \"log_id\": null,\n    \"add_time\": \"2020-02-20 14:36:35\",\n    \"update_time\": \"2020-02-20 14:57:33\",\n    \"file_name\": \"IMG_8189_52233498214699de9579e7b304a81b157b2eb2137e8062.jpg\",\n    \"file_type\": \"img\",\n    \"file_size\": 7801780,\n    \"active_flag\": true,\n    \"inline_flag\": false,\n    \"remote_location\": \"googledocs\",\n    \"remote_id\": \"1mT6jshiv6537IirwOExXJuG1jdR4F0FQ\",\n    \"cid\": \"\",\n    \"s3_bucket\": \"\",\n    \"mail_message_id\": \"\",\n    \"mail_template_id\": \"\",\n    \"deal_name\": \"\",\n    \"person_name\": \"Person\",\n    \"org_name\": \"\",\n    \"product_name\": \"\",\n    \"lead_name\": \"Test lead name\",\n    \"url\": \"https://2a7f.pipedrive.com/v1/files/123/download\",\n    \"name\": \"test file name\",\n    \"description\": \"test file description\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update file details",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "<string>",
									"description": "The visible name of the file"
								},
								{
									"key": "description",
									"value": "<string>",
									"description": "The description of the file"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the file"
								}
							]
						},
						"description": "Updates the properties of a file."
					},
					"response": [
						{
							"name": "Update file name and description",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "<string>",
											"description": "The visible name of the file"
										},
										{
											"key": "description",
											"value": "<string>",
											"description": "The description of the file"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the file"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123,\n    \"user_id\": 456,\n    \"deal_id\": 1,\n    \"person_id\": 789,\n    \"org_id\": 1,\n    \"product_id\": 1,\n    \"activity_id\": 1,\n    \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n    \"log_id\": null,\n    \"add_time\": \"2020-02-20 14:36:35\",\n    \"update_time\": \"2020-02-20 14:57:33\",\n    \"file_name\": \"IMG_8189_52233498214699de9579e7b304a81b157b2eb2137e8062.jpg\",\n    \"file_type\": \"img\",\n    \"file_size\": 7801780,\n    \"active_flag\": true,\n    \"inline_flag\": false,\n    \"remote_location\": \"googledocs\",\n    \"remote_id\": \"1mT6jshiv6537IirwOExXJuG1jdR4F0FQ\",\n    \"cid\": \"\",\n    \"s3_bucket\": \"\",\n    \"mail_message_id\": \"\",\n    \"mail_template_id\": \"\",\n    \"deal_name\": \"\",\n    \"person_name\": \"Person\",\n    \"org_name\": \"\",\n    \"product_name\": \"\",\n    \"lead_name\": \"Test lead name\",\n    \"url\": \"https://2a7f.pipedrive.com/v1/files/123/download\",\n    \"name\": \"test file name\",\n    \"description\": \"test file description\"\n  }\n}"
						}
					]
				},
				{
					"name": "Download one file",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files/:id/download",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								":id",
								"download"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the file"
								}
							]
						},
						"description": "Initializes a file download."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/octet-stream"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files/:id/download",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										":id",
										"download"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the file"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/octet-stream"
								}
							],
							"cookie": [],
							"body": "qui tempor pariatur"
						}
					]
				}
			],
			"description": "Files are documents of any kind (images, spreadsheets, text files, etc.) that are uploaded to Pipedrive, and usually associated with a particular deal, person, organization, product, note or activity. Remote files can only be associated with a particular deal, person or organization. Note that the API currently does not support downloading files although it lets you retrieve a file’s meta-info along with a URL which can be used to download the file by using a standard HTTP GET request.\n"
		},
		{
			"name": "Filters",
			"item": [
				{
					"name": "Delete multiple filters in bulk",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/filters?ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"filters"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) The comma-separated filter IDs to delete"
								}
							]
						},
						"description": "Marks multiple filters as deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/filters?ids=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filters"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": [\n      1,\n      2,\n      3\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get all filters",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/filters?type=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"filters"
							],
							"query": [
								{
									"key": "type",
									"value": "<string>",
									"description": "The types of filters to fetch"
								}
							]
						},
						"description": "Returns data about all filters."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/filters?type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filters"
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"All open deals\",\n      \"active_flag\": true,\n      \"type\": \"deals\",\n      \"temporary_flag\": null,\n      \"user_id\": 927097,\n      \"add_time\": \"2019-10-15 11:01:53\",\n      \"update_time\": \"2019-10-15 11:01:53\",\n      \"visible_to\": 7,\n      \"custom_view_id\": 1\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add a new filter",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"conditions\": \"<object>\",\n  \"type\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/filters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"filters"
							]
						},
						"description": "Adds a new filter, returns the ID upon success. Note that in the conditions JSON object only one first-level condition group is supported, and it must be glued with 'AND', and only two second level condition groups are supported of which one must be glued with 'AND' and the second with 'OR'. Other combinations do not work (yet) but the syntax supports introducing them in future. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-filter\" target=\"_blank\" rel=\"noopener noreferrer\">adding a filter</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"conditions\": \"<object>\",\n  \"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filters"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Deal title is 'my title'\",\n    \"active_flag\": true,\n    \"type\": \"deals\",\n    \"temporary_flag\": false,\n    \"user_id\": 1,\n    \"add_time\": \"2018-01-27 08:49:26\",\n    \"update_time\": \"2018-01-27 08:49:26\",\n    \"visible_to\": 1,\n    \"custom_view_id\": 1,\n    \"conditions\": {\n      \"glue\": \"and\",\n      \"conditions\": [\n        {\n          \"glue\": \"and\",\n          \"conditions\": [\n            {\n              \"object\": \"deal\",\n              \"field_id\": \"123141\",\n              \"operator\": \"=\",\n              \"value\": \"my title\"\n            }\n          ]\n        },\n        {\n          \"glue\": \"or\",\n          \"conditions\": [\n            null\n          ]\n        }\n      ]\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get all filter helpers",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/filters/helpers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"filters",
								"helpers"
							]
						},
						"description": "Returns all supported filter helpers. It helps to know what conditions and helpers are available when you want to <a href=\"/docs/api/v1/Filters#addFilter\">add</a> or <a href=\"/docs/api/v1/Filters#updateFilter\">update</a> filters. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-filter\" target=\"_blank\" rel=\"noopener noreferrer\">adding a filter</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/filters/helpers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filters",
										"helpers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"operators\": {\n      \"int\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\",\n        \">\": \"is more than\",\n        \"<\": \"is less than\",\n        \">=\": \"is more or equal to\",\n        \"<=\": \"is less or equal to\",\n        \"IS NULL\": \"is empty\",\n        \"IS NOT NULL\": \"is not empty\"\n      },\n      \"double\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\",\n        \">\": \"is more than\",\n        \"<\": \"is less than\",\n        \">=\": \"is more or equal to\",\n        \"<=\": \"is less or equal to\",\n        \"IS NULL\": \"is empty\",\n        \"IS NOT NULL\": \"is not empty\"\n      },\n      \"monetary\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\",\n        \">\": \"is more than\",\n        \"<\": \"is less than\",\n        \">=\": \"is more or equal to\",\n        \"<=\": \"is less or equal to\",\n        \"IS NULL\": \"is empty\",\n        \"IS NOT NULL\": \"is not empty\"\n      },\n      \"time\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\",\n        \"<\": \"is before\",\n        \">\": \"is after\",\n        \">=\": \"is exactly or after than\",\n        \"<=\": \"is exactly or before than\",\n        \"IS NULL\": \"is empty\",\n        \"IS NOT NULL\": \"is not empty\"\n      },\n      \"date\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\",\n        \">\": \"is later than\",\n        \"<\": \"is earlier than\",\n        \">=\": \"is exactly or later than\",\n        \"<=\": \"is exactly or earlier than\",\n        \"IS NULL\": \"is empty\",\n        \"IS NOT NULL\": \"is not empty\"\n      },\n      \"entered_stage\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\",\n        \">\": \"is later than\",\n        \"<\": \"is earlier than\",\n        \">=\": \"is exactly or later than\",\n        \"<=\": \"is exactly or earlier than\"\n      },\n      \"timerange\": {\n        \"=\": \"starts at\",\n        \"!=\": \"does not start at\",\n        \"ends_at\": \"ends at\",\n        \"does_not_end_at\": \"does not end at\",\n        \"<\": \"starts before\",\n        \"<=\": \"starts exactly on or before\",\n        \"ends_before\": \"ends before\",\n        \"ends_e_before\": \"ends exactly on or before\",\n        \">\": \"starts after\",\n        \"ends_after\": \"ends after\",\n        \">=\": \"starts exactly or after\",\n        \"ends_e_after\": \"ends exactly or after\",\n        \"includes\": \"does include\",\n        \"IS NULL\": \"is empty\",\n        \"IS NOT NULL\": \"is not empty\"\n      },\n      \"daterange\": {\n        \"=\": \"starts at\",\n        \"!=\": \"does not start at\",\n        \"ends_at\": \"ends at\",\n        \"does_not_end_at\": \"does not end at\",\n        \"<\": \"starts before\",\n        \"<=\": \"starts exactly on or before\",\n        \"ends_before\": \"ends before\",\n        \"ends_e_before\": \"ends exactly on or before\",\n        \">\": \"starts after\",\n        \"ends_after\": \"ends after\",\n        \">=\": \"starts exactly or after\",\n        \"ends_e_after\": \"ends exactly or after\",\n        \"includes\": \"does include\",\n        \"IS NULL\": \"is empty\",\n        \"IS NOT NULL\": \"is not empty\"\n      },\n      \"varchar\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\",\n        \"IS NULL\": \"is empty\",\n        \"IS NOT NULL\": \"is not empty\",\n        \"LIKE '%$%'\": \"contains\",\n        \"LIKE '$%'\": \"starts with\",\n        \"NOT LIKE '$%'\": \"does not start with\"\n      },\n      \"stage\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\",\n        \"has_been\": \"has been\"\n      },\n      \"title\": {\n        \"=\": \"is\",\n        \"LIKE '$%'\": \"starts with\",\n        \"LIKE '%$%'\": \"contains\",\n        \"NOT LIKE '$%'\": \"does not start with\"\n      },\n      \"set\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\",\n        \"contains\": \"contains\",\n        \"not_contains\": \"does not contain\",\n        \"IS NULL\": \"is empty\",\n        \"IS NOT NULL\": \"is not empty\"\n      },\n      \"enum\": [\n        {\n          \"=\": \"is\"\n        },\n        {\n          \"!=\": \"is not\"\n        },\n        {\n          \"IS NULL\": \"is empty\"\n        },\n        {\n          \"IS NOT NULL\": \"is not empty\"\n        }\n      ],\n      \"deal\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\",\n        \"IS NULL\": \"is empty\",\n        \"IS NOT NULL\": \"is not empty\"\n      },\n      \"product\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\",\n        \"IS NULL\": \"is empty\",\n        \"IS NOT NULL\": \"is not empty\"\n      },\n      \"user\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\",\n        \"IS NULL\": \"is empty\",\n        \"IS NOT NULL\": \"is not empty\",\n        \"belongs_to_team\": \"belongs to team\"\n      },\n      \"status\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\"\n      },\n      \"visible_to\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\"\n      },\n      \"currency\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\"\n      },\n      \"pipeline\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\"\n      },\n      \"person\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\",\n        \"IS NULL\": \"is empty\",\n        \"IS NOT NULL\": \"is not empty\"\n      },\n      \"organization\": {\n        \"=\": \"is\",\n        \"!=\": \"is not\",\n        \"IS NULL\": \"is empty\",\n        \"IS NOT NULL\": \"is not empty\"\n      }\n    },\n    \"deprecated_operators\": {\n      \"NOT LIKE '%$%'\": \"does not contain\",\n      \"LIKE '%$'\": \"ends with\",\n      \"NOT LIKE '%$'\": \"does not end with\"\n    },\n    \"relative_dates\": {\n      \"Relative date intervals\": {\n        \"last_quarter\": \"last quarter\",\n        \"this_quarter\": \"this quarter\",\n        \"last_month\": \"last month\",\n        \"this_month\": \"this month\",\n        \"last_week\": \"last week\",\n        \"this_week\": \"this week\",\n        \"next_week\": \"next week\",\n        \"next_month\": \"next month\"\n      },\n      \"Relative dates\": {\n        \"6_months_ago\": \"6 months ago\",\n        \"5_months_ago\": \"5 months ago\",\n        \"4_months_ago\": \"4 months ago\",\n        \"3_months_ago\": \"3 months ago\",\n        \"2_months_ago\": \"2 months ago\",\n        \"1_months_ago\": \"1 month ago\",\n        \"3_weeks_ago\": \"3 weeks ago\",\n        \"2_weeks_ago\": \"2 weeks ago\",\n        \"1_week_ago\": \"1 week ago\",\n        \"yesterday\": \"yesterday\",\n        \"before_today\": \"before today\",\n        \"today\": \"today\",\n        \"now\": \"now\",\n        \"later_or_today\": \"today or later\",\n        \"before_tomorrow\": \"before tomorrow\",\n        \"tomorrow\": \"tomorrow\",\n        \"later_or_tomorrow\": \"tomorrow or later\",\n        \"in_1_week\": \"in 1 week\",\n        \"in_2_weeks\": \"in 2 weeks\",\n        \"in_3_weeks\": \"in 3 weeks\",\n        \"in_1_month\": \"in 1 month\",\n        \"in_2_months\": \"in 2 months\",\n        \"in_3_months\": \"in 3 months\",\n        \"in_4_months\": \"in 4 months\",\n        \"in_5_months\": \"in 5 months\",\n        \"in_6_months\": \"in 6 months\"\n      },\n      \"Deal specific\": {\n        \"rotten_time\": \"Rotten time\"\n      }\n    },\n    \"address_field_components\": {\n      \"subpremise\": \"Apartment/suite no\",\n      \"street_number\": \"House number\",\n      \"route\": \"Street/road name\",\n      \"sublocality\": \"District/sublocality\",\n      \"locality\": \"City/town/village/locality\",\n      \"admin_area_level_1\": \"State/county\",\n      \"admin_area_level_2\": \"Region\",\n      \"country\": \"Country\",\n      \"postal_code\": \"ZIP/Postal code\",\n      \"formatted_address\": \"Full/combined address\"\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a filter",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/filters/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"filters",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the filter"
								}
							]
						},
						"description": "Marks a filter as deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/filters/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filters",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the filter"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Get one filter",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/filters/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"filters",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the filter"
								}
							]
						},
						"description": "Returns data about a specific filter. Note that this also returns the condition lines of the filter."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/filters/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filters",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the filter"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"All open deals\",\n    \"active_flag\": true,\n    \"type\": \"deals\",\n    \"temporary_flag\": null,\n    \"user_id\": 927097,\n    \"add_time\": \"2019-10-15 11:01:53\",\n    \"update_time\": \"2019-10-15 11:01:53\",\n    \"visible_to\": 7,\n    \"custom_view_id\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Update filter",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"conditions\": \"<object>\",\n  \"name\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/filters/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"filters",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the filter"
								}
							]
						},
						"description": "Updates an existing filter."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"conditions\": \"<object>\",\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/filters/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filters",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the filter"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Deal title is 'my title'\",\n    \"active_flag\": true,\n    \"type\": \"deals\",\n    \"temporary_flag\": false,\n    \"user_id\": 1,\n    \"add_time\": \"2018-01-27 08:49:26\",\n    \"update_time\": \"2018-01-27 08:49:26\",\n    \"visible_to\": 1,\n    \"custom_view_id\": 1,\n    \"conditions\": {\n      \"glue\": \"and\",\n      \"conditions\": [\n        {\n          \"glue\": \"and\",\n          \"conditions\": [\n            {\n              \"object\": \"deal\",\n              \"field_id\": \"123141\",\n              \"operator\": \"=\",\n              \"value\": \"my title\"\n            }\n          ]\n        },\n        {\n          \"glue\": \"or\",\n          \"conditions\": [\n            null\n          ]\n        }\n      ]\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Each filter is essentially a set of data validation conditions. A filter of the same kind can be applied when fetching a list of deals, leads, persons, organizations or products in the context of a pipeline. Filters are limited to a maximum of 16 conditions. When applied, only items matching the conditions of the filter are returned. Detailed definitions of filter conditions and additional functionality is not yet available.\n"
		},
		{
			"name": "Goals",
			"item": [
				{
					"name": "Add a new goal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"<object>\",\n  \"assignee\": \"<object>\",\n  \"expected_outcome\": \"<object>\",\n  \"duration\": \"<object>\",\n  \"interval\": \"<string>\",\n  \"title\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/goals",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"goals"
							]
						},
						"description": "Adds a new goal. Along with adding a new goal, a report is created to track the progress of your goal."
					},
					"response": [
						{
							"name": "Successful response containing payload in the `data.goal` object",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"<object>\",\n  \"assignee\": \"<object>\",\n  \"expected_outcome\": \"<object>\",\n  \"duration\": \"<object>\",\n  \"interval\": \"<string>\",\n  \"title\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/goals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"goals"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"statusCode\": 20000,\n  \"statusText\": \"OK\",\n  \"service\": \"statistics-goals-api\",\n  \"data\": {\n    \"goal\": {\n      \"id\": \"5665cef556ddff22606fc8f6c0004807\",\n      \"owner_id\": 987654,\n      \"title\": \"Some example goal\",\n      \"type\": {\n        \"name\": \"Deals started\",\n        \"params\": {\n          \"pipeline_id\": [\n            5,\n            2\n          ],\n          \"activity_type_id\": [\n            9\n          ]\n        }\n      },\n      \"assignee\": {\n        \"type\": \"company\",\n        \"id\": 123456\n      },\n      \"interval\": \"weekly\",\n      \"duration\": {\n        \"start\": \"2019-11-01\",\n        \"end\": \"2020-10-30\"\n      },\n      \"expected_outcome\": {\n        \"target\": 100,\n        \"tracking_metric\": \"quantity\"\n      },\n      \"is_active\": false,\n      \"report_ids\": [\n        \"f37bd66a2ab64d28ff6a9b6d2289813a\"\n      ]\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Find goals",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/goals/find?type.name=<string>&title=<string>&is_active=true&assignee.id=<integer>&assignee.type=<string>&expected_outcome.target=<number>&expected_outcome.tracking_metric=<string>&expected_outcome.currency_id=<integer>&type.params.pipeline_id=<integer>&type.params.pipeline_id=<integer>&type.params.stage_id=<integer>&type.params.activity_type_id=<integer>&type.params.activity_type_id=<integer>&period.start=<date>&period.end=<date>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"goals",
								"find"
							],
							"query": [
								{
									"key": "type.name",
									"value": "<string>",
									"description": "The type of the goal. If provided, everyone's goals will be returned."
								},
								{
									"key": "title",
									"value": "<string>",
									"description": "The title of the goal"
								},
								{
									"key": "is_active",
									"value": "true",
									"description": "Whether the goal is active or not"
								},
								{
									"key": "assignee.id",
									"value": "<integer>",
									"description": "The ID of the user who's goal to fetch. When omitted, only your goals will be returned."
								},
								{
									"key": "assignee.type",
									"value": "<string>",
									"description": "The type of the goal's assignee. If provided, everyone's goals will be returned."
								},
								{
									"key": "expected_outcome.target",
									"value": "<number>",
									"description": "The numeric value of the outcome. If provided, everyone's goals will be returned."
								},
								{
									"key": "expected_outcome.tracking_metric",
									"value": "<string>",
									"description": "The tracking metric of the expected outcome of the goal. If provided, everyone's goals will be returned."
								},
								{
									"key": "expected_outcome.currency_id",
									"value": "<integer>",
									"description": "The numeric ID of the goal's currency. Only applicable to goals with `expected_outcome.tracking_metric` with value `sum`. If provided, everyone's goals will be returned."
								},
								{
									"key": "type.params.pipeline_id",
									"value": "<integer>",
									"description": "An array of pipeline IDs or `null` for all pipelines. If provided, everyone's goals will be returned."
								},
								{
									"key": "type.params.pipeline_id",
									"value": "<integer>",
									"description": "An array of pipeline IDs or `null` for all pipelines. If provided, everyone's goals will be returned."
								},
								{
									"key": "type.params.stage_id",
									"value": "<integer>",
									"description": "The ID of the stage. Applicable to only `deals_progressed` type of goals. If provided, everyone's goals will be returned."
								},
								{
									"key": "type.params.activity_type_id",
									"value": "<integer>",
									"description": "An array of IDs or `null` for all activity types. Only applicable for `activities_completed` and/or `activities_added` types of goals. If provided, everyone's goals will be returned."
								},
								{
									"key": "type.params.activity_type_id",
									"value": "<integer>",
									"description": "An array of IDs or `null` for all activity types. Only applicable for `activities_completed` and/or `activities_added` types of goals. If provided, everyone's goals will be returned."
								},
								{
									"key": "period.start",
									"value": "<date>",
									"description": "The start date of the period for which to find goals. Date in format of YYYY-MM-DD. When `period.start` is provided, `period.end` must be provided too."
								},
								{
									"key": "period.end",
									"value": "<date>",
									"description": "The end date of the period for which to find goals. Date in format of YYYY-MM-DD."
								}
							]
						},
						"description": "Returns data about goals based on criteria. For searching, append `{searchField}={searchValue}` to the URL, where `searchField` can be any one of the lowest-level fields in dot-notation (e.g. `type.params.pipeline_id`; `title`). `searchValue` should be the value you are looking for on that field. Additionally, `is_active=<true|false>` can be provided to search for only active/inactive goals. When providing `period.start`, `period.end` must also be provided and vice versa."
					},
					"response": [
						{
							"name": "Successful response containing payload in the `data.goal` object",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/goals/find?type.name=<string>&title=<string>&is_active=true&assignee.id=<integer>&assignee.type=<string>&expected_outcome.target=<number>&expected_outcome.tracking_metric=<string>&expected_outcome.currency_id=<integer>&type.params.pipeline_id=<integer>&type.params.pipeline_id=<integer>&type.params.stage_id=<integer>&type.params.activity_type_id=<integer>&type.params.activity_type_id=<integer>&period.start=<date>&period.end=<date>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"goals",
										"find"
									],
									"query": [
										{
											"key": "type.name",
											"value": "<string>"
										},
										{
											"key": "title",
											"value": "<string>"
										},
										{
											"key": "is_active",
											"value": "true"
										},
										{
											"key": "assignee.id",
											"value": "<integer>"
										},
										{
											"key": "assignee.type",
											"value": "<string>"
										},
										{
											"key": "expected_outcome.target",
											"value": "<number>"
										},
										{
											"key": "expected_outcome.tracking_metric",
											"value": "<string>"
										},
										{
											"key": "expected_outcome.currency_id",
											"value": "<integer>"
										},
										{
											"key": "type.params.pipeline_id",
											"value": "<integer>"
										},
										{
											"key": "type.params.pipeline_id",
											"value": "<integer>"
										},
										{
											"key": "type.params.stage_id",
											"value": "<integer>"
										},
										{
											"key": "type.params.activity_type_id",
											"value": "<integer>"
										},
										{
											"key": "type.params.activity_type_id",
											"value": "<integer>"
										},
										{
											"key": "period.start",
											"value": "<date>"
										},
										{
											"key": "period.end",
											"value": "<date>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"statusCode\": 20000,\n  \"statusText\": \"OK\",\n  \"service\": \"statistics-goals-api\",\n  \"data\": {\n    \"goals\": [\n      {\n        \"id\": \"5665cef556ddff22606fc8f6c0004807\",\n        \"owner_id\": 987654,\n        \"title\": \"Some example goal\",\n        \"type\": {\n          \"name\": \"Deals started\",\n          \"params\": {\n            \"pipeline_id\": [\n              5,\n              2\n            ],\n            \"activity_type_id\": [\n              9\n            ]\n          }\n        },\n        \"assignee\": {\n          \"type\": \"company\",\n          \"id\": 123456\n        },\n        \"interval\": \"weekly\",\n        \"duration\": {\n          \"start\": \"2019-11-01\",\n          \"end\": \"2020-10-30\"\n        },\n        \"expected_outcome\": {\n          \"target\": 100,\n          \"tracking_metric\": \"quantity\"\n        },\n        \"is_active\": false,\n        \"report_ids\": [\n          \"f37bd66a2ab64d28ff6a9b6d2289813a\"\n        ]\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Update existing goal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"assignee\": \"<object>\",\n  \"type\": \"<object>\",\n  \"expected_outcome\": \"<object>\",\n  \"duration\": \"<object>\",\n  \"interval\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/goals/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"goals",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The ID of the goal"
								}
							]
						},
						"description": "Updates an existing goal."
					},
					"response": [
						{
							"name": "Successful response containing payload in the `data.goal` object",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"assignee\": \"<object>\",\n  \"type\": \"<object>\",\n  \"expected_outcome\": \"<object>\",\n  \"duration\": \"<object>\",\n  \"interval\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/goals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"goals",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the goal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"statusCode\": 20000,\n  \"statusText\": \"OK\",\n  \"service\": \"statistics-goals-api\",\n  \"data\": {\n    \"goal\": {\n      \"id\": \"5665cef556ddff22606fc8f6c0004807\",\n      \"owner_id\": 987654,\n      \"title\": \"Some example goal\",\n      \"type\": {\n        \"name\": \"Deals started\",\n        \"params\": {\n          \"pipeline_id\": [\n            5,\n            2\n          ],\n          \"activity_type_id\": [\n            9\n          ]\n        }\n      },\n      \"assignee\": {\n        \"type\": \"company\",\n        \"id\": 123456\n      },\n      \"interval\": \"weekly\",\n      \"duration\": {\n        \"start\": \"2019-11-01\",\n        \"end\": \"2020-10-30\"\n      },\n      \"expected_outcome\": {\n        \"target\": 100,\n        \"tracking_metric\": \"quantity\"\n      },\n      \"is_active\": false,\n      \"report_ids\": [\n        \"f37bd66a2ab64d28ff6a9b6d2289813a\"\n      ]\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete existing goal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/goals/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"goals",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The ID of the goal"
								}
							]
						},
						"description": "Marks a goal as deleted."
					},
					"response": [
						{
							"name": "Successful response with id 'success' field only",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/goals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"goals",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the goal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"statusCode\": 20000,\n  \"statusText\": \"OK\",\n  \"service\": \"statistics-goals-api\"\n}"
						}
					]
				},
				{
					"name": "Get result of a goal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/goals/:id/results?period.start=<date>&period.end=<date>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"goals",
								":id",
								"results"
							],
							"query": [
								{
									"key": "period.start",
									"value": "<date>",
									"description": "(Required) The start date of the period for which to find the goal's progress. Format: YYYY-MM-DD. This date must be the same or after the goal duration start date.\n"
								},
								{
									"key": "period.end",
									"value": "<date>",
									"description": "(Required) The end date of the period for which to find the goal's progress. Format: YYYY-MM-DD. This date must be the same or before the goal duration end date.\n"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The ID of the goal that the results are looked for"
								}
							]
						},
						"description": "Gets the progress of a goal for the specified period."
					},
					"response": [
						{
							"name": "Successful response containing payload in the `data.goal` object",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/goals/:id/results?period.start=<date>&period.end=<date>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"goals",
										":id",
										"results"
									],
									"query": [
										{
											"key": "period.start",
											"value": "<date>"
										},
										{
											"key": "period.end",
											"value": "<date>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the goal that the results are looked for"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"statusCode\": 20000,\n  \"statusText\": \"OK\",\n  \"service\": \"statistics-goals-api\",\n  \"data\": {\n    \"goal\": {\n      \"id\": \"5665cef556ddff22606fc8f6c0004807\",\n      \"owner_id\": 987654,\n      \"title\": \"Some example goal\",\n      \"type\": {\n        \"name\": \"Deals started\",\n        \"params\": {\n          \"pipeline_id\": [\n            5,\n            2\n          ],\n          \"activity_type_id\": [\n            9\n          ]\n        }\n      },\n      \"assignee\": {\n        \"type\": \"company\",\n        \"id\": 123456\n      },\n      \"interval\": \"weekly\",\n      \"duration\": {\n        \"start\": \"2019-11-01\",\n        \"end\": \"2020-10-30\"\n      },\n      \"expected_outcome\": {\n        \"target\": 100,\n        \"tracking_metric\": \"quantity\"\n      },\n      \"is_active\": false,\n      \"report_ids\": [\n        \"f37bd66a2ab64d28ff6a9b6d2289813a\"\n      ]\n    },\n    \"progress\": 3\n  }\n}"
						}
					]
				}
			],
			"description": "Goals help your team meet your sales targets. There are three types of goals - company, team and user.\n"
		},
		{
			"name": "ItemSearch",
			"item": [
				{
					"name": "Perform a search from multiple item types",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/itemSearch?term=<string>&item_types=<string>&fields=<string>&search_for_related_items=<boolean>&exact_match=<boolean>&include_fields=<string>&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"itemSearch"
							],
							"query": [
								{
									"key": "term",
									"value": "<string>",
									"description": "(Required) The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded."
								},
								{
									"key": "item_types",
									"value": "<string>",
									"description": "A comma-separated string array. The type of items to perform the search from. Defaults to all."
								},
								{
									"key": "fields",
									"value": "<string>",
									"description": "A comma-separated string array. The fields to perform the search from. Defaults to all. Relevant for each item type are:<br> <table> <tr><th><b>Item type</b></th><th><b>Field</b></th></tr> <tr><td>Deal</td><td>`custom_fields`, `notes`, `title`</td></tr> <tr><td>Person</td><td>`custom_fields`, `email`, `name`, `notes`, `phone`</td></tr> <tr><td>Organization</td><td>`address`, `custom_fields`, `name`, `notes`</td></tr> <tr><td>Product</td><td>`code`, `custom_fields`, `name`</td></tr> <tr><td>Lead</td><td>`custom_fields`, `notes`, `email`, `organization_name`, `person_name`, `phone`, `title`</td></tr> <tr><td>File</td><td>`name`</td></tr> <tr><td>Mail attachment</td><td>`name`</td></tr> <tr><td>Project</td><td> `custom_fields`, `notes`, `title`, `description` </td></tr> </table> <br> Only the following custom field types are searchable: `address`, `varchar`, `text`, `varchar_auto`, `double`, `monetary` and `phone`. Read more about searching by custom fields <a href=\"https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.<br/> When searching for leads, the email, organization_name, person_name, and phone fields will return results only for leads not linked to contacts. For searching leads by person or organization values, please use `search_for_related_items`."
								},
								{
									"key": "search_for_related_items",
									"value": "<boolean>",
									"description": "When enabled, the response will include up to 100 newest related leads and 100 newest related deals for each found person and organization and up to 100 newest related persons for each found organization"
								},
								{
									"key": "exact_match",
									"value": "<boolean>",
									"description": "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
								},
								{
									"key": "include_fields",
									"value": "<string>",
									"description": "A comma-separated string array. Supports including optional fields in the results which are not provided by default."
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter."
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Performs a search from your choice of item types and fields."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/itemSearch?term=<string>&item_types=<string>&fields=<string>&search_for_related_items=<boolean>&exact_match=<boolean>&include_fields=<string>&start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"itemSearch"
									],
									"query": [
										{
											"key": "term",
											"value": "<string>"
										},
										{
											"key": "item_types",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "search_for_related_items",
											"value": "<boolean>"
										},
										{
											"key": "exact_match",
											"value": "<boolean>"
										},
										{
											"key": "include_fields",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"items\": [\n      {\n        \"result_score\": 1.22724,\n        \"item\": {\n          \"id\": 42,\n          \"type\": \"deal\",\n          \"title\": \"Sample Deal\",\n          \"value\": 53883,\n          \"currency\": \"USD\",\n          \"status\": \"open\",\n          \"visible_to\": 3,\n          \"owner\": {\n            \"id\": 69\n          },\n          \"stage\": {\n            \"id\": 3,\n            \"name\": \"Demo Scheduled\"\n          },\n          \"person\": {\n            \"id\": 6,\n            \"name\": \"Sample Person\"\n          },\n          \"organization\": {\n            \"id\": 9,\n            \"name\": \"Sample Organization\",\n            \"address\": \"Dabas, Hungary\"\n          },\n          \"custom_fields\": [\n            \"Sample text\"\n          ],\n          \"notes\": [\n            \"Sample note\"\n          ]\n        }\n      },\n      {\n        \"result_score\": 0.31335002,\n        \"item\": {\n          \"id\": 9,\n          \"type\": \"organization\",\n          \"name\": \"Sample Organization\",\n          \"address\": \"Dabas, Hungary\",\n          \"visible_to\": 3,\n          \"owner\": {\n            \"id\": 69\n          },\n          \"custom_fields\": [],\n          \"notes\": []\n        }\n      },\n      {\n        \"result_score\": 0.29955,\n        \"item\": {\n          \"id\": 6,\n          \"type\": \"person\",\n          \"name\": \"Sample Person\",\n          \"phones\": [\n            \"555123123\",\n            \"+372 (55) 123468\",\n            \"0231632772\"\n          ],\n          \"emails\": [\n            \"primary@email.com\",\n            \"secondary@email.com\"\n          ],\n          \"visible_to\": 1,\n          \"owner\": {\n            \"id\": 69\n          },\n          \"organization\": {\n            \"id\": 9,\n            \"name\": \"Sample Organization\",\n            \"address\": \"Dabas, Hungary\"\n          },\n          \"custom_fields\": [\n            \"Custom Field Text\"\n          ],\n          \"notes\": [\n            \"Person note\"\n          ]\n        }\n      },\n      {\n        \"result_score\": 0.0093,\n        \"item\": {\n          \"id\": 4,\n          \"type\": \"mail_attachment\",\n          \"name\": \"Sample mail attachment.txt\",\n          \"url\": \"/files/4/download\"\n        }\n      },\n      {\n        \"result_score\": 0.0093,\n        \"item\": {\n          \"id\": 3,\n          \"type\": \"file\",\n          \"name\": \"Sample file attachment.txt\",\n          \"url\": \"/files/3/download\",\n          \"deal\": {\n            \"id\": 42,\n            \"title\": \"Sample Deal\"\n          },\n          \"person\": {\n            \"id\": 6,\n            \"name\": \"Sample Person\"\n          },\n          \"organization\": {\n            \"id\": 9,\n            \"name\": \"Sample Organization\",\n            \"address\": \"Dabas, Hungary\"\n          }\n        }\n      },\n      {\n        \"result_score\": 0.0011999999,\n        \"item\": {\n          \"id\": 1,\n          \"type\": \"product\",\n          \"name\": \"Sample Product\",\n          \"code\": \"product-code\",\n          \"visible_to\": 3,\n          \"owner\": {\n            \"id\": 69\n          },\n          \"custom_fields\": []\n        }\n      }\n    ],\n    \"related_items\": [\n      {\n        \"result_score\": 0,\n        \"item\": {\n          \"id\": 2,\n          \"type\": \"deal\",\n          \"title\": \"Other deal\",\n          \"value\": 100,\n          \"currency\": \"USD\",\n          \"status\": \"open\",\n          \"visible_to\": 3,\n          \"owner\": {\n            \"id\": 1\n          },\n          \"stage\": {\n            \"id\": 1,\n            \"name\": \"Lead In\"\n          },\n          \"person\": {\n            \"id\": 1,\n            \"name\": \"Sample Person\"\n          }\n        }\n      }\n    ]\n  },\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Perform a search using a specific field from an item type",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/itemSearch/field?term=<string>&field_type=<string>&exact_match=false&field_key=<string>&return_item_ids=<boolean>&start=<integer>&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"itemSearch",
								"field"
							],
							"query": [
								{
									"key": "term",
									"value": "<string>",
									"description": "(Required) The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded."
								},
								{
									"key": "field_type",
									"value": "<string>",
									"description": "(Required) The type of the field to perform the search from"
								},
								{
									"key": "exact_match",
									"value": "false",
									"description": "When enabled, only full exact matches against the given term are returned. The search <b>is</b> case sensitive."
								},
								{
									"key": "field_key",
									"value": "<string>",
									"description": "(Required) The key of the field to search from. The field key can be obtained by fetching the list of the fields using any of the fields' API GET methods (dealFields, personFields, etc.). Only the following custom field types are searchable: `address`, `varchar`, `text`, `varchar_auto`, `double`, `monetary` and `phone`. Read more about searching by custom fields <a href=\"https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>."
								},
								{
									"key": "return_item_ids",
									"value": "<boolean>",
									"description": "Whether to return the IDs of the matching items or not. When not set or set to `0` or `false`, only distinct values of the searched field are returned. When set to `1` or `true`, the ID of each found item is returned."
								},
								{
									"key": "start",
									"value": "<integer>",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Performs a search from the values of a specific field. Results can either be the distinct values of the field (useful for searching autocomplete field values), or the IDs of actual items (deals, leads, persons, organizations or products)."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/itemSearch/field?term=<string>&field_type=<string>&exact_match=false&field_key=<string>&return_item_ids=<boolean>&start=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"itemSearch",
										"field"
									],
									"query": [
										{
											"key": "term",
											"value": "<string>"
										},
										{
											"key": "field_type",
											"value": "<string>"
										},
										{
											"key": "exact_match",
											"value": "false"
										},
										{
											"key": "field_key",
											"value": "<string>"
										},
										{
											"key": "return_item_ids",
											"value": "<boolean>"
										},
										{
											"key": "start",
											"value": "<integer>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Jane Doe\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"John Doe\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Ordered reference objects, pointing to either deals, persons, organizations, leads, products, files or mail attachments.\n"
		},
		{
			"name": "LeadLabels",
			"item": [
				{
					"name": "Get all lead labels",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/leadLabels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"leadLabels"
							]
						},
						"description": "Returns details of all lead labels. This endpoint does not support pagination and all labels are always returned."
					},
					"response": [
						{
							"name": "Successful response containing payload in the `data` field",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leadLabels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leadLabels"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"f08b42a0-4e75-11ea-9643-03698ef1cfd6\",\n      \"name\": \"Hot\",\n      \"color\": \"red\",\n      \"add_time\": \"2020-02-13T15:31:44.000Z\",\n      \"update_time\": \"2020-02-13T15:31:44.000Z\"\n    },\n    {\n      \"id\": \"f08b42a1-4e75-11ea-9643-03698ef1cfd6\",\n      \"name\": \"Cold\",\n      \"color\": \"blue\",\n      \"add_time\": \"2020-02-13T15:31:44.000Z\",\n      \"update_time\": \"2020-02-13T15:31:44.000Z\"\n    },\n    {\n      \"id\": \"f08b69b0-4e75-11ea-9643-03698ef1cfd6\",\n      \"name\": \"Warm\",\n      \"color\": \"yellow\",\n      \"add_time\": \"2020-02-13T15:31:44.000Z\",\n      \"update_time\": \"2020-02-13T15:31:44.000Z\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add a lead label",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"color\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/leadLabels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"leadLabels"
							]
						},
						"description": "Creates a lead label."
					},
					"response": [
						{
							"name": "Successful response containing payload in the `data` field",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"color\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/leadLabels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leadLabels"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"f08b42a0-4e75-11ea-9643-03698ef1cfd6\",\n    \"name\": \"Hot\",\n    \"color\": \"red\",\n    \"add_time\": \"2020-02-13T15:31:44.000Z\",\n    \"update_time\": \"2020-10-14T13:11:36.000Z\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update a lead label",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"color\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/leadLabels/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"leadLabels",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"description": "(Required) The ID of the lead label"
								}
							]
						},
						"description": "Updates one or more properties of a lead label. Only properties included in the request will be updated.\n"
					},
					"response": [
						{
							"name": "Successful response containing payload in the `data` field",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"color\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/leadLabels/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leadLabels",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID of the lead label"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"f08b42a0-4e75-11ea-9643-03698ef1cfd6\",\n    \"name\": \"Hot\",\n    \"color\": \"red\",\n    \"add_time\": \"2020-02-13T15:31:44.000Z\",\n    \"update_time\": \"2020-10-14T13:11:36.000Z\"\n  }\n}"
						},
						{
							"name": "A resource describing an error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"color\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/leadLabels/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leadLabels",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID of the lead label"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"reprehenderit consectetur fugiat\",\n  \"error_info\": \"s\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Delete a lead label",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/leadLabels/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"leadLabels",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"description": "(Required) The ID of the lead label"
								}
							]
						},
						"description": "Deletes a specific lead label."
					},
					"response": [
						{
							"name": "Successful response with id value only. Used in DELETE calls.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leadLabels/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leadLabels",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID of the lead label"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\"\n  }\n}"
						},
						{
							"name": "A resource describing an error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leadLabels/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leadLabels",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID of the lead label"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"reprehenderit consectetur fugiat\",\n  \"error_info\": \"s\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				}
			],
			"description": "Lead labels allow you to visually categorize your leads. There are three default lead labels: hot, cold, and warm, but you can add as many new custom labels as you want.\n"
		},
		{
			"name": "LeadSources",
			"item": [
				{
					"name": "Get all lead sources",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/leadSources",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"leadSources"
							]
						},
						"description": "Returns all lead sources. Please note that the list of lead sources is fixed, it cannot be modified. All leads created through the Pipedrive API will have a lead source `API` assigned.\n"
					},
					"response": [
						{
							"name": "The successful response containing payload in the `data` field.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leadSources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leadSources"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"name\": \"Manually created\"\n    },\n    {\n      \"name\": \"Deal\"\n    },\n    {\n      \"name\": \"Web forms\"\n    },\n    {\n      \"name\": \"Prospector\"\n    },\n    {\n      \"name\": \"Leadbooster\"\n    },\n    {\n      \"name\": \"Live chat\"\n    },\n    {\n      \"name\": \"Import\"\n    },\n    {\n      \"name\": \"Website visitors\"\n    },\n    {\n      \"name\": \"Workflow automation\"\n    },\n    {\n      \"name\": \"API\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"description": "A lead source indicates where your lead came from. Currently, these are the possible lead sources: `Manually created`, `Deal`, `Web forms`, `Prospector`, `Leadbooster`, `Live chat`, `Import`, `Website visitors`, `Workflow automation`, and `API`. Lead sources are pre-defined and cannot be edited. Please note that leads sourced from the Chatbot feature are assigned the value `Leadbooster`. Please also note that this list is not final and new sources may be added as needed.\n"
		},
		{
			"name": "Leads",
			"item": [
				{
					"name": "Get all leads",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/leads?limit=<integer>&start=<integer>&owner_id=<integer>&person_id=<integer>&organization_id=<integer>&filter_id=<integer>&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"leads"
							],
							"query": [
								{
									"key": "limit",
									"value": "<integer>",
									"description": "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned."
								},
								{
									"key": "start",
									"value": "<integer>",
									"description": "For pagination, the position that represents the first result for the page"
								},
								{
									"key": "owner_id",
									"value": "<integer>",
									"description": "If supplied, only leads matching the given user will be returned. However, `filter_id` takes precedence over `owner_id` when supplied."
								},
								{
									"key": "person_id",
									"value": "<integer>",
									"description": "If supplied, only leads matching the given person will be returned. However, `filter_id` takes precedence over `person_id` when supplied."
								},
								{
									"key": "organization_id",
									"value": "<integer>",
									"description": "If supplied, only leads matching the given organization will be returned. However, `filter_id` takes precedence over `organization_id` when supplied."
								},
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "The ID of the filter to use"
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys)."
								}
							]
						},
						"description": "Returns multiple not archived leads. Leads are sorted by the time they were created, from oldest to newest. Pagination can be controlled using `limit` and `start` query parameters. If a lead contains custom fields, the fields' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field's value hasn't been set for the lead, it won't appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields' structure from deals.\n"
					},
					"response": [
						{
							"name": "Successful response containing payload in the `data` field",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leads?limit=100&start=0&owner_id=1&person_id=1&organization_id=1&filter_id=1&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leads"
									],
									"query": [
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "owner_id",
											"value": "1"
										},
										{
											"key": "person_id",
											"value": "1"
										},
										{
											"key": "organization_id",
											"value": "1"
										},
										{
											"key": "filter_id",
											"value": "1"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n      \"title\": \"Jane Doe Lead\",\n      \"owner_id\": 1,\n      \"creator_id\": 1,\n      \"label_ids\": [\n        \"f08b42a0-4e75-11ea-9643-03698ef1cfd6\",\n        \"f08b42a1-4e75-11ea-9643-03698ef1cfd6\"\n      ],\n      \"person_id\": 1092,\n      \"organization_id\": null,\n      \"source_name\": \"API\",\n      \"origin\": \"API\",\n      \"origin_id\": null,\n      \"channel\": 52,\n      \"channel_id\": \"Jun23 Billboards\",\n      \"is_archived\": false,\n      \"was_seen\": false,\n      \"value\": {\n        \"amount\": 999,\n        \"currency\": \"USD\"\n      },\n      \"expected_close_date\": null,\n      \"next_activity_id\": 1,\n      \"add_time\": \"2020-10-14T11:30:36.551Z\",\n      \"update_time\": \"2020-10-14T11:30:36.551Z\",\n      \"visible_to\": \"3\",\n      \"cc_email\": \"company+1+leadntPaYKA5QRxXkh6WMNHiGh@dev.pipedrivemail.com\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add a lead",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"label_ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"person_id\": \"<integer>\",\n  \"organization_id\": \"<integer>\",\n  \"value\": {\n    \"amount\": \"<number>\",\n    \"currency\": \"<string>\"\n  },\n  \"expected_close_date\": \"<date>\",\n  \"visible_to\": \"<string>\",\n  \"was_seen\": \"<boolean>\",\n  \"origin_id\": \"<string>\",\n  \"channel\": \"<integer>\",\n  \"channel_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/leads",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"leads"
							]
						},
						"description": "Creates a lead. A lead always has to be linked to a person or an organization or both. All leads created through the Pipedrive API will have a lead source and origin set to `API`. Here's the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-lead\" target=\"_blank\" rel=\"noopener noreferrer\">adding a lead</a>. If a lead contains custom fields, the fields' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field's value hasn't been set for the lead, it won't appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields' structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields' values tutorial</a>."
					},
					"response": [
						{
							"name": "Successful response containing payload in the `data` field",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"label_ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"person_id\": \"<integer>\",\n  \"organization_id\": \"<integer>\",\n  \"value\": {\n    \"amount\": \"<number>\",\n    \"currency\": \"<string>\"\n  },\n  \"expected_close_date\": \"<date>\",\n  \"visible_to\": \"<string>\",\n  \"was_seen\": \"<boolean>\",\n  \"origin_id\": \"<string>\",\n  \"channel\": \"<integer>\",\n  \"channel_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/leads",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leads"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n    \"title\": \"Jane Doe Lead\",\n    \"owner_id\": 1,\n    \"creator_id\": 1,\n    \"label_ids\": [\n      \"f08b42a0-4e75-11ea-9643-03698ef1cfd6\",\n      \"f08b42a1-4e75-11ea-9643-03698ef1cfd6\"\n    ],\n    \"person_id\": 1092,\n    \"organization_id\": null,\n    \"source_name\": \"API\",\n    \"origin\": \"API\",\n    \"origin_id\": null,\n    \"channel\": 52,\n    \"channel_id\": \"Jun23 Billboards\",\n    \"is_archived\": false,\n    \"was_seen\": false,\n    \"value\": {\n      \"amount\": 999,\n      \"currency\": \"USD\"\n    },\n    \"expected_close_date\": null,\n    \"next_activity_id\": 1,\n    \"add_time\": \"2020-10-14T11:30:36.551Z\",\n    \"update_time\": \"2020-10-14T11:30:36.551Z\",\n    \"visible_to\": \"3\",\n    \"cc_email\": \"company+1+leadntPaYKA5QRxXkh6WMNHiGh@dev.pipedrivemail.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get all archived leads",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/leads/archived?limit=<integer>&start=<integer>&owner_id=<integer>&person_id=<integer>&organization_id=<integer>&filter_id=<integer>&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"leads",
								"archived"
							],
							"query": [
								{
									"key": "limit",
									"value": "<integer>",
									"description": "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned."
								},
								{
									"key": "start",
									"value": "<integer>",
									"description": "For pagination, the position that represents the first result for the page"
								},
								{
									"key": "owner_id",
									"value": "<integer>",
									"description": "If supplied, only leads matching the given user will be returned. However, `filter_id` takes precedence over `owner_id` when supplied."
								},
								{
									"key": "person_id",
									"value": "<integer>",
									"description": "If supplied, only leads matching the given person will be returned. However, `filter_id` takes precedence over `person_id` when supplied."
								},
								{
									"key": "organization_id",
									"value": "<integer>",
									"description": "If supplied, only leads matching the given organization will be returned. However, `filter_id` takes precedence over `organization_id` when supplied."
								},
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "The ID of the filter to use"
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys)."
								}
							]
						},
						"description": "Returns multiple archived leads. Leads are sorted by the time they were created, from oldest to newest. Pagination can be controlled using `limit` and `start` query parameters. If a lead contains custom fields, the fields' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field's value hasn't been set for the lead, it won't appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields' structure from deals.\n"
					},
					"response": [
						{
							"name": "Successful response containing payload in the `data` field",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leads/archived?limit=100&start=0&owner_id=1&person_id=1&organization_id=1&filter_id=1&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leads",
										"archived"
									],
									"query": [
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "owner_id",
											"value": "1"
										},
										{
											"key": "person_id",
											"value": "1"
										},
										{
											"key": "organization_id",
											"value": "1"
										},
										{
											"key": "filter_id",
											"value": "1"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n      \"title\": \"Jane Doe Lead\",\n      \"owner_id\": 1,\n      \"creator_id\": 1,\n      \"label_ids\": [\n        \"f08b42a0-4e75-11ea-9643-03698ef1cfd6\",\n        \"f08b42a1-4e75-11ea-9643-03698ef1cfd6\"\n      ],\n      \"person_id\": 1092,\n      \"organization_id\": null,\n      \"source_name\": \"API\",\n      \"origin\": \"API\",\n      \"origin_id\": null,\n      \"channel\": 52,\n      \"channel_id\": \"Jun23 Billboards\",\n      \"is_archived\": true,\n      \"was_seen\": false,\n      \"value\": {\n        \"amount\": 999,\n        \"currency\": \"USD\"\n      },\n      \"expected_close_date\": null,\n      \"next_activity_id\": 1,\n      \"add_time\": \"2020-10-14T11:30:36.551Z\",\n      \"update_time\": \"2020-10-14T11:30:36.551Z\",\n      \"visible_to\": \"3\",\n      \"cc_email\": \"company+1+leadntPaYKA5QRxXkh6WMNHiGh@dev.pipedrivemail.com\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get one lead",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/leads/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"leads",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"description": "(Required) The ID of the lead"
								}
							]
						},
						"description": "Returns details of a specific lead. If a lead contains custom fields, the fields' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field's value hasn't been set for the lead, it won't appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals."
					},
					"response": [
						{
							"name": "Successful response containing payload in the `data` field",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leads/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leads",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID of the lead"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n    \"title\": \"Jane Doe Lead\",\n    \"owner_id\": 1,\n    \"creator_id\": 1,\n    \"label_ids\": [\n      \"f08b42a0-4e75-11ea-9643-03698ef1cfd6\",\n      \"f08b42a1-4e75-11ea-9643-03698ef1cfd6\"\n    ],\n    \"person_id\": 1092,\n    \"organization_id\": null,\n    \"source_name\": \"API\",\n    \"origin\": \"API\",\n    \"origin_id\": null,\n    \"channel\": 52,\n    \"channel_id\": \"Jun23 Billboards\",\n    \"is_archived\": false,\n    \"was_seen\": false,\n    \"value\": {\n      \"amount\": 999,\n      \"currency\": \"USD\"\n    },\n    \"expected_close_date\": null,\n    \"next_activity_id\": 1,\n    \"add_time\": \"2020-10-14T11:30:36.551Z\",\n    \"update_time\": \"2020-10-14T11:30:36.551Z\",\n    \"visible_to\": \"3\",\n    \"cc_email\": \"company+1+leadntPaYKA5QRxXkh6WMNHiGh@dev.pipedrivemail.com\"\n  }\n}"
						},
						{
							"name": "A resource describing an error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leads/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leads",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID of the lead"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"requested lead not found\",\n  \"error_info\": \"Object was not found.\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Update a lead",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"label_ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"person_id\": \"<integer>\",\n  \"organization_id\": \"<integer>\",\n  \"is_archived\": \"<boolean>\",\n  \"value\": {\n    \"amount\": \"<number>\",\n    \"currency\": \"<string>\"\n  },\n  \"expected_close_date\": \"<date>\",\n  \"visible_to\": \"<string>\",\n  \"was_seen\": \"<boolean>\",\n  \"channel\": \"<integer>\",\n  \"channel_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/leads/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"leads",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"description": "(Required) The ID of the lead"
								}
							]
						},
						"description": "Updates one or more properties of a lead. Only properties included in the request will be updated. Send `null` to unset a property (applicable for example for `value`, `person_id` or `organization_id`). If a lead contains custom fields, the fields' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field's value hasn't been set for the lead, it won't appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields’ values tutorial</a>."
					},
					"response": [
						{
							"name": "Successful response containing payload in the `data` field",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"label_ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"person_id\": \"<integer>\",\n  \"organization_id\": \"<integer>\",\n  \"is_archived\": \"<boolean>\",\n  \"value\": {\n    \"amount\": \"<number>\",\n    \"currency\": \"<string>\"\n  },\n  \"expected_close_date\": \"<date>\",\n  \"visible_to\": \"<string>\",\n  \"was_seen\": \"<boolean>\",\n  \"channel\": \"<integer>\",\n  \"channel_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/leads/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leads",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID of the lead"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n    \"title\": \"Jane Doe Lead\",\n    \"owner_id\": 1,\n    \"creator_id\": 1,\n    \"label_ids\": [\n      \"f08b42a0-4e75-11ea-9643-03698ef1cfd6\",\n      \"f08b42a1-4e75-11ea-9643-03698ef1cfd6\"\n    ],\n    \"person_id\": 1092,\n    \"organization_id\": null,\n    \"source_name\": \"API\",\n    \"origin\": \"API\",\n    \"origin_id\": null,\n    \"channel\": 52,\n    \"channel_id\": \"Jun23 Billboards\",\n    \"is_archived\": false,\n    \"was_seen\": false,\n    \"value\": {\n      \"amount\": 999,\n      \"currency\": \"USD\"\n    },\n    \"expected_close_date\": null,\n    \"next_activity_id\": 1,\n    \"add_time\": \"2020-10-14T11:30:36.551Z\",\n    \"update_time\": \"2020-10-14T11:30:36.551Z\",\n    \"visible_to\": \"3\",\n    \"cc_email\": \"company+1+leadntPaYKA5QRxXkh6WMNHiGh@dev.pipedrivemail.com\"\n  }\n}"
						},
						{
							"name": "A resource describing an error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"label_ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"person_id\": \"<integer>\",\n  \"organization_id\": \"<integer>\",\n  \"is_archived\": \"<boolean>\",\n  \"value\": {\n    \"amount\": \"<number>\",\n    \"currency\": \"<string>\"\n  },\n  \"expected_close_date\": \"<date>\",\n  \"visible_to\": \"<string>\",\n  \"was_seen\": \"<boolean>\",\n  \"channel\": \"<integer>\",\n  \"channel_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/leads/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leads",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID of the lead"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"requested lead not found\",\n  \"error_info\": \"Object was not found.\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Delete a lead",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/leads/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"leads",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"description": "(Required) The ID of the lead"
								}
							]
						},
						"description": "Deletes a specific lead."
					},
					"response": [
						{
							"name": "Successful response with id value only. Used in DELETE calls.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leads/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leads",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID of the lead"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\"\n  }\n}"
						},
						{
							"name": "A resource describing an error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leads/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leads",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID of the lead"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"requested lead not found\",\n  \"error_info\": \"Object was not found.\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "List permitted users",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/leads/:id/permittedUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"leads",
								":id",
								"permittedUsers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The ID of the lead"
								}
							]
						},
						"description": "Lists the users permitted to access a lead."
					},
					"response": [
						{
							"name": "Lists users permitted to access a lead",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leads/:id/permittedUsers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leads",
										":id",
										"permittedUsers"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the lead"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    10100010,\n    22302444,\n    33511023\n  ]\n}"
						}
					]
				},
				{
					"name": "Search leads",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/leads/search?term=<string>&fields=<string>&exact_match=<boolean>&person_id=<integer>&organization_id=<integer>&include_fields=<string>&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"leads",
								"search"
							],
							"query": [
								{
									"key": "term",
									"value": "<string>",
									"description": "(Required) The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded."
								},
								{
									"key": "fields",
									"value": "<string>",
									"description": "A comma-separated string array. The fields to perform the search from. Defaults to all of them."
								},
								{
									"key": "exact_match",
									"value": "<boolean>",
									"description": "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
								},
								{
									"key": "person_id",
									"value": "<integer>",
									"description": "Will filter leads by the provided person ID. The upper limit of found leads associated with the person is 2000."
								},
								{
									"key": "organization_id",
									"value": "<integer>",
									"description": "Will filter leads by the provided organization ID. The upper limit of found leads associated with the organization is 2000."
								},
								{
									"key": "include_fields",
									"value": "<string>",
									"description": "Supports including optional fields in the results which are not provided by default"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter."
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Searches all leads by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found leads can be filtered by the person ID and the organization ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leads/search?term=<string>&fields=<string>&exact_match=<boolean>&person_id=<integer>&organization_id=<integer>&include_fields=<string>&start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leads",
										"search"
									],
									"query": [
										{
											"key": "term",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "exact_match",
											"value": "<boolean>"
										},
										{
											"key": "person_id",
											"value": "<integer>"
										},
										{
											"key": "organization_id",
											"value": "<integer>"
										},
										{
											"key": "include_fields",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"items\": [\n      {\n        \"result_score\": 0.29,\n        \"item\": {\n          \"id\": \"39c433f0-8a4c-11ec-8728-09968f0a1ca0\",\n          \"type\": \"lead\",\n          \"title\": \"John Doe lead\",\n          \"owner\": {\n            \"id\": 1\n          },\n          \"person\": {\n            \"id\": 1,\n            \"name\": \"John Doe\"\n          },\n          \"organization\": {\n            \"id\": 1,\n            \"name\": \"John company\"\n          },\n          \"phones\": [],\n          \"emails\": [\n            \"john@doe.com\"\n          ],\n          \"custom_fields\": [],\n          \"notes\": [],\n          \"value\": 100,\n          \"currency\": \"USD\",\n          \"visible_to\": 3,\n          \"is_archived\": false\n        }\n      }\n    ]\n  },\n  \"additional_data\": {\n    \"description\": \"The additional data of the list\",\n    \"type\": \"object\",\n    \"properties\": {\n      \"start\": {\n        \"type\": \"integer\",\n        \"description\": \"Pagination start\"\n      },\n      \"limit\": {\n        \"type\": \"integer\",\n        \"description\": \"Items shown per page\"\n      },\n      \"more_items_in_collection\": {\n        \"type\": \"boolean\",\n        \"description\": \"If there are more list items in the collection than displayed or not\"\n      }\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Leads are potential deals stored in Leads Inbox before they are archived or converted to a deal. Each lead needs to be named (using the `title` field) and be linked to a person or an organization. In addition to that, a lead can contain most of the fields a deal can (such as `value` or `expected_close_date`).\n"
		},
		{
			"name": "LegacyTeams",
			"item": [
				{
					"name": "Get all teams",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/legacyTeams?order_by=id&skip_users=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"legacyTeams"
							],
							"query": [
								{
									"key": "order_by",
									"value": "id",
									"description": "The field name to sort returned teams by"
								},
								{
									"key": "skip_users",
									"value": "0",
									"description": "When enabled, the teams will not include IDs of member users"
								}
							]
						},
						"description": "Returns data about teams within the company."
					},
					"response": [
						{
							"name": "The list of team objects",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/legacyTeams?order_by=id&skip_users=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legacyTeams"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "skip_users",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Closers\",\n      \"description\": \"Berlin office Sales Team\",\n      \"manager_id\": 4,\n      \"users\": [\n        2,\n        3,\n        4,\n        5\n      ],\n      \"active_flag\": 1,\n      \"deleted_flag\": 0,\n      \"add_time\": \"2019-10-07 09:06:09\",\n      \"created_by_user_id\": 2\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Coffee\",\n      \"description\": \"London office Sales Team\",\n      \"manager_id\": 7,\n      \"users\": [\n        5,\n        8\n      ],\n      \"active_flag\": 0,\n      \"deleted_flag\": 0,\n      \"add_time\": \"2018-04-11 12:54:43\",\n      \"created_by_user_id\": 7\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add a new team",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"manager_id\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"users\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/legacyTeams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"legacyTeams"
							]
						},
						"description": "Adds a new team to the company and returns the created object."
					},
					"response": [
						{
							"name": "The team data",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"manager_id\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"users\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/legacyTeams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legacyTeams"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Closers\",\n    \"description\": \"Berlin office Sales Team\",\n    \"manager_id\": 4,\n    \"users\": [\n      2,\n      3,\n      5\n    ],\n    \"active_flag\": 1,\n    \"deleted_flag\": 0,\n    \"add_time\": \"2019-10-07 09:06:09\",\n    \"created_by_user_id\": 2\n  }\n}"
						},
						{
							"name": "Forbidden response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"manager_id\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"users\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/legacyTeams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legacyTeams"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You do not have permissions to do this.\",\n  \"error_info\": \"Please check developers.pipedrive.com\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Get a single team",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/legacyTeams/:id?skip_users=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"legacyTeams",
								":id"
							],
							"query": [
								{
									"key": "skip_users",
									"value": "0",
									"description": "When enabled, the teams will not include IDs of member users"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the team"
								}
							]
						},
						"description": "Returns data about a specific team."
					},
					"response": [
						{
							"name": "The team data",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/legacyTeams/:id?skip_users=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legacyTeams",
										":id"
									],
									"query": [
										{
											"key": "skip_users",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Closers\",\n    \"description\": \"Berlin office Sales Team\",\n    \"manager_id\": 4,\n    \"users\": [\n      2,\n      3,\n      5\n    ],\n    \"active_flag\": 1,\n    \"deleted_flag\": 0,\n    \"add_time\": \"2019-10-07 09:06:09\",\n    \"created_by_user_id\": 2\n  }\n}"
						},
						{
							"name": "Team with specified ID does not exist or is inaccessible",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/legacyTeams/:id?skip_users=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legacyTeams",
										":id"
									],
									"query": [
										{
											"key": "skip_users",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the team"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"Team 1 does not exist\"\n}"
						}
					]
				},
				{
					"name": "Update a team",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"manager_id\": \"<integer>\",\n  \"users\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"active_flag\": \"<number>\",\n  \"deleted_flag\": \"<number>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/legacyTeams/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"legacyTeams",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the team"
								}
							]
						},
						"description": "Updates an existing team and returns the updated object."
					},
					"response": [
						{
							"name": "The team data",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"manager_id\": \"<integer>\",\n  \"users\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"active_flag\": \"<number>\",\n  \"deleted_flag\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/legacyTeams/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legacyTeams",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Closers\",\n    \"description\": \"Berlin office Sales Team\",\n    \"manager_id\": 4,\n    \"users\": [\n      2,\n      3,\n      5\n    ],\n    \"active_flag\": 1,\n    \"deleted_flag\": 0,\n    \"add_time\": \"2019-10-07 09:06:09\",\n    \"created_by_user_id\": 2\n  }\n}"
						},
						{
							"name": "Forbidden response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"manager_id\": \"<integer>\",\n  \"users\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"active_flag\": \"<number>\",\n  \"deleted_flag\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/legacyTeams/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legacyTeams",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the team"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You do not have permissions to do this.\",\n  \"error_info\": \"Please check developers.pipedrive.com\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						},
						{
							"name": "Team with specified ID does not exist or is inaccessible",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"manager_id\": \"<integer>\",\n  \"users\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"active_flag\": \"<number>\",\n  \"deleted_flag\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/legacyTeams/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legacyTeams",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the team"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"Team 1 does not exist\"\n}"
						}
					]
				},
				{
					"name": "Get all users in a team",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/legacyTeams/:id/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"legacyTeams",
								":id",
								"users"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the team"
								}
							]
						},
						"description": "Returns a list of all user IDs within a team."
					},
					"response": [
						{
							"name": "A list of user IDs within a team",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/legacyTeams/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legacyTeams",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    2,\n    3,\n    4,\n    5\n  ]\n}"
						},
						{
							"name": "Team with specified ID does not exist or is inaccessible",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/legacyTeams/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legacyTeams",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the team"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"Team 1 does not exist\"\n}"
						}
					]
				},
				{
					"name": "Add users to a team",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"users\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/legacyTeams/:id/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"legacyTeams",
								":id",
								"users"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the team"
								}
							]
						},
						"description": "Adds users to an existing team."
					},
					"response": [
						{
							"name": "A list of user IDs within a team",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"users\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/legacyTeams/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legacyTeams",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    2,\n    3,\n    4,\n    5\n  ]\n}"
						},
						{
							"name": "Forbidden response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"users\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/legacyTeams/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legacyTeams",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the team"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You do not have permissions to do this.\",\n  \"error_info\": \"Please check developers.pipedrive.com\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						},
						{
							"name": "Team with specified ID does not exist or is inaccessible",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"users\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/legacyTeams/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legacyTeams",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the team"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"Team 1 does not exist\"\n}"
						}
					]
				},
				{
					"name": "Delete users from a team",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"users\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/legacyTeams/:id/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"legacyTeams",
								":id",
								"users"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the team"
								}
							]
						},
						"description": "Deletes users from an existing team."
					},
					"response": [
						{
							"name": "A list of user IDs within a team",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"users\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/legacyTeams/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legacyTeams",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    2,\n    3,\n    4,\n    5\n  ]\n}"
						},
						{
							"name": "Forbidden response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"users\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/legacyTeams/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legacyTeams",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the team"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You do not have permissions to do this.\",\n  \"error_info\": \"Please check developers.pipedrive.com\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						},
						{
							"name": "Team with specified ID does not exist or is inaccessible",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"users\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/legacyTeams/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legacyTeams",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the team"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"Team 1 does not exist\"\n}"
						}
					]
				},
				{
					"name": "Get all teams of a user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/legacyTeams/user/:id?order_by=id&skip_users=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"legacyTeams",
								"user",
								":id"
							],
							"query": [
								{
									"key": "order_by",
									"value": "id",
									"description": "The field name to sort returned teams by"
								},
								{
									"key": "skip_users",
									"value": "0",
									"description": "When enabled, the teams will not include IDs of member users"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the user"
								}
							]
						},
						"description": "Returns data about all teams which have the specified user as a member."
					},
					"response": [
						{
							"name": "The list of team objects",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/legacyTeams/user/:id?order_by=id&skip_users=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"legacyTeams",
										"user",
										":id"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "skip_users",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Closers\",\n      \"description\": \"Berlin office Sales Team\",\n      \"manager_id\": 4,\n      \"users\": [\n        2,\n        3,\n        4,\n        5\n      ],\n      \"active_flag\": 1,\n      \"deleted_flag\": 0,\n      \"add_time\": \"2019-10-07 09:06:09\",\n      \"created_by_user_id\": 2\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Coffee\",\n      \"description\": \"London office Sales Team\",\n      \"manager_id\": 7,\n      \"users\": [\n        5,\n        8\n      ],\n      \"active_flag\": 0,\n      \"deleted_flag\": 0,\n      \"add_time\": \"2018-04-11 12:54:43\",\n      \"created_by_user_id\": 7\n    }\n  ]\n}"
						}
					]
				}
			],
			"description": "Legacy teams allow you to form groups of users withing the organization for more efficient management. Previously Legacy Teams were called Teams and occupied the `v1/teams*` path. They're being deprecated because we are preparing for an upgraded version of the Teams API, which requires migrating the current functionality to a new path URL `v1/legacyTeams*`. The functionality and [OAuth scopes](https://pipedrive.readme.io/docs/marketplace-scopes-and-permissions-explanations) of all the Teams API endpoints will remain the same.\n"
		},
		{
			"name": "Mailbox",
			"item": [
				{
					"name": "Get one mail message",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/mailbox/mailMessages/:id?include_body=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mailbox",
								"mailMessages",
								":id"
							],
							"query": [
								{
									"key": "include_body",
									"value": "0",
									"description": "Whether to include the full message body or not. `0` = Don't include, `1` = Include."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the mail message to fetch"
								}
							]
						},
						"description": "Returns data about a specific mail message."
					},
					"response": [
						{
							"name": "The mail messages that are being synced with Pipedrive",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mailbox/mailMessages/:id?include_body=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mailbox",
										"mailMessages",
										":id"
									],
									"query": [
										{
											"key": "include_body",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the mail message to fetch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"statusCode\": 2000,\n  \"statusText\": \"Success\",\n  \"service\": \"email-api\",\n  \"data\": {\n    \"id\": 1,\n    \"from\": [\n      {\n        \"id\": 1,\n        \"email_address\": \"mail@example.org\",\n        \"name\": \"Test\",\n        \"linked_person_id\": 1,\n        \"linked_person_name\": \"\",\n        \"mail_message_party_id\": 1\n      }\n    ],\n    \"to\": [\n      {\n        \"id\": 1,\n        \"email_address\": \"mail@example.org\",\n        \"name\": \"Test\",\n        \"linked_person_id\": 1,\n        \"linked_person_name\": \"\",\n        \"mail_message_party_id\": 1\n      }\n    ],\n    \"cc\": [\n      {\n        \"id\": 1,\n        \"email_address\": \"mail@example.org\",\n        \"name\": \"Test\",\n        \"linked_person_id\": 1,\n        \"linked_person_name\": \"\",\n        \"mail_message_party_id\": 1\n      }\n    ],\n    \"bcc\": [\n      {\n        \"id\": 1,\n        \"email_address\": \"mail@example.org\",\n        \"name\": \"Test\",\n        \"linked_person_id\": 1,\n        \"linked_person_name\": \"\",\n        \"mail_message_party_id\": 1\n      }\n    ],\n    \"body_url\": \"https://example.org\",\n    \"account_id\": \"test\",\n    \"user_id\": 1,\n    \"mail_thread_id\": 1,\n    \"subject\": \"test subject\",\n    \"snippet\": \"test subject\",\n    \"mail_tracking_status\": \"opened\",\n    \"mail_link_tracking_enabled_flag\": 0,\n    \"read_flag\": 1,\n    \"draft\": \"\",\n    \"draft_flag\": 0,\n    \"synced_flag\": 1,\n    \"deleted_flag\": 0,\n    \"has_body_flag\": 1,\n    \"sent_flag\": 0,\n    \"sent_from_pipedrive_flag\": 0,\n    \"smart_bcc_flag\": 0,\n    \"message_time\": \"2019-11-14T06:02:06.000Z\",\n    \"add_time\": \"2019-11-14T06:02:06.000Z\",\n    \"update_time\": \"2019-11-14T07:15:49.000Z\",\n    \"has_attachments_flag\": 1,\n    \"has_inline_attachments_flag\": 0,\n    \"has_real_attachments_flag\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Get mail threads",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/mailbox/mailThreads?folder=inbox&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mailbox",
								"mailThreads"
							],
							"query": [
								{
									"key": "folder",
									"value": "inbox",
									"description": "(Required) The type of folder to fetch"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Returns mail threads in a specified folder ordered by the most recent message within."
					},
					"response": [
						{
							"name": "Get mail threads",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mailbox/mailThreads?folder=inbox&start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mailbox",
										"mailThreads"
									],
									"query": [
										{
											"key": "folder",
											"value": "inbox"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"parties\": {\n        \"to\": [\n          {\n            \"id\": 2,\n            \"name\": \"\",\n            \"latest_sent\": false,\n            \"email_address\": \"example@test.com\",\n            \"message_time\": 1574677850000,\n            \"linked_person_id\": 3,\n            \"linked_person_name\": \"Tester\",\n            \"linked_organization_id\": null,\n            \"mail_message_party_id\": 5318\n          }\n        ],\n        \"from\": [\n          {\n            \"id\": 3,\n            \"name\": \"\",\n            \"latest_sent\": false,\n            \"email_address\": \"example@test.com\",\n            \"message_time\": 1574677850000,\n            \"linked_person_id\": 2,\n            \"linked_person_name\": \"Tester\",\n            \"linked_organization_id\": null,\n            \"mail_message_party_id\": 5318\n          }\n        ]\n      },\n      \"drafts_parties\": [],\n      \"folders\": [\n        \"inbox\"\n      ],\n      \"account_id\": \"123412jhfsaa221\",\n      \"user_id\": 232,\n      \"version\": 9,\n      \"subject\": \"Example\",\n      \"snippet\": \"Example Snippet\",\n      \"snippet_draft\": null,\n      \"snippet_sent\": \"\",\n      \"has_attachments_flag\": 1,\n      \"has_inline_attachments_flag\": 1,\n      \"has_real_attachments_flag\": 0,\n      \"has_draft_flag\": 0,\n      \"has_sent_flag\": 0,\n      \"archived_flag\": 0,\n      \"deleted_flag\": 0,\n      \"shared_flag\": 1,\n      \"synced_flag\": 1,\n      \"external_deleted_flag\": 0,\n      \"smart_bcc_flag\": 0,\n      \"first_message_to_me_flag\": 1,\n      \"mail_link_tracking_enabled_flag\": 0,\n      \"last_message_timestamp\": \"2019-11-20T20:20:46.000Z\",\n      \"first_message_timestamp\": \"2019-11-20T17:40:46.000Z\",\n      \"last_message_sent_timestamp\": null,\n      \"last_message_received_timestamp\": \"2019-11-20T20:20:46.000Z\",\n      \"add_time\": \"2019-11-20T17:40:59.000Z\",\n      \"update_time\": \"2019-11-20T20:21:22.000Z\",\n      \"deal_id\": null,\n      \"deal_status\": null,\n      \"all_messages_sent_flag\": 0\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete mail thread",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/mailbox/mailThreads/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mailbox",
								"mailThreads",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the mail thread"
								}
							]
						},
						"description": "Marks a mail thread as deleted."
					},
					"response": [
						{
							"name": "Marks mail thread as deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mailbox/mailThreads/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mailbox",
										"mailThreads",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the mail thread"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"statusCode\": 2000,\n  \"statusText\": \"Success\",\n  \"service\": \"email-api\",\n  \"data\": {\n    \"id\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Get one mail thread",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/mailbox/mailThreads/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mailbox",
								"mailThreads",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the mail thread"
								}
							]
						},
						"description": "Returns a specific mail thread."
					},
					"response": [
						{
							"name": "Get mail threads",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mailbox/mailThreads/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mailbox",
										"mailThreads",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the mail thread"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"parties\": {\n      \"to\": [\n        {\n          \"id\": 2,\n          \"name\": \"\",\n          \"latest_sent\": false,\n          \"email_address\": \"example@test.com\",\n          \"message_time\": 1574677850000,\n          \"linked_person_id\": 3,\n          \"linked_person_name\": \"Tester\",\n          \"linked_organization_id\": null,\n          \"mail_message_party_id\": 5318\n        }\n      ],\n      \"from\": [\n        {\n          \"id\": 3,\n          \"name\": \"\",\n          \"latest_sent\": false,\n          \"email_address\": \"example@test.com\",\n          \"message_time\": 1574677850000,\n          \"linked_person_id\": 2,\n          \"linked_person_name\": \"Tester\",\n          \"linked_organization_id\": null,\n          \"mail_message_party_id\": 5318\n        }\n      ]\n    },\n    \"drafts_parties\": [],\n    \"folders\": [\n      \"inbox\"\n    ],\n    \"account_id\": \"123412jhfsaa221\",\n    \"user_id\": 232,\n    \"version\": 9,\n    \"subject\": \"Example\",\n    \"snippet\": \"Example Snippet\",\n    \"snippet_draft\": null,\n    \"snippet_sent\": \"\",\n    \"has_attachments_flag\": 1,\n    \"has_inline_attachments_flag\": 1,\n    \"has_real_attachments_flag\": 0,\n    \"has_draft_flag\": 0,\n    \"has_sent_flag\": 0,\n    \"archived_flag\": 0,\n    \"deleted_flag\": 0,\n    \"shared_flag\": 1,\n    \"synced_flag\": 1,\n    \"external_deleted_flag\": 0,\n    \"smart_bcc_flag\": 0,\n    \"first_message_to_me_flag\": 1,\n    \"mail_link_tracking_enabled_flag\": 0,\n    \"last_message_timestamp\": \"2019-11-20T20:20:46.000Z\",\n    \"first_message_timestamp\": \"2019-11-20T17:40:46.000Z\",\n    \"last_message_sent_timestamp\": null,\n    \"last_message_received_timestamp\": \"2019-11-20T20:20:46.000Z\",\n    \"add_time\": \"2019-11-20T17:40:59.000Z\",\n    \"update_time\": \"2019-11-20T20:21:22.000Z\",\n    \"deal_id\": null,\n    \"deal_status\": null,\n    \"all_messages_sent_flag\": 0\n  }\n}"
						}
					]
				},
				{
					"name": "Update mail thread details",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "deal_id",
									"value": "<integer>",
									"description": "The ID of the deal this thread is associated with"
								},
								{
									"key": "lead_id",
									"value": "<uuid>",
									"description": "The ID of the lead this thread is associated with"
								},
								{
									"key": "shared_flag",
									"value": "<number>",
									"description": "Whether this thread is shared with other users in your company"
								},
								{
									"key": "read_flag",
									"value": "<number>",
									"description": "Whether this thread is read or unread"
								},
								{
									"key": "archived_flag",
									"value": "<number>",
									"description": "Whether this thread is archived or not. You can only archive threads that belong to Inbox folder. Archived threads will disappear from Inbox."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/mailbox/mailThreads/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mailbox",
								"mailThreads",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the mail thread"
								}
							]
						},
						"description": "Updates the properties of a mail thread."
					},
					"response": [
						{
							"name": "Updates the properties of a mail thread",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "deal_id",
											"value": "<integer>",
											"description": "The ID of the deal this thread is associated with"
										},
										{
											"key": "lead_id",
											"value": "<uuid>",
											"description": "The ID of the lead this thread is associated with"
										},
										{
											"key": "shared_flag",
											"value": "<number>",
											"description": "Whether this thread is shared with other users in your company"
										},
										{
											"key": "read_flag",
											"value": "<number>",
											"description": "Whether this thread is read or unread"
										},
										{
											"key": "archived_flag",
											"value": "<number>",
											"description": "Whether this thread is archived or not. You can only archive threads that belong to Inbox folder. Archived threads will disappear from Inbox."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/mailbox/mailThreads/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mailbox",
										"mailThreads",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the mail thread"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"folders\": [\n      \"inbox\"\n    ],\n    \"account_id\": \"12123qwaesda1\",\n    \"user_id\": 9,\n    \"version\": 13,\n    \"subject\": \"[EXAMPLE] Subject\",\n    \"snippet\": \"[EXAMPLE] Snippet\",\n    \"snippet_draft\": null,\n    \"snippet_sent\": \"\",\n    \"message_count\": 7,\n    \"read_flag\": 0,\n    \"mail_tracking_status\": null,\n    \"has_attachments_flag\": 1,\n    \"has_inline_attachments_flag\": 1,\n    \"has_real_attachments_flag\": 0,\n    \"has_draft_flag\": 0,\n    \"has_sent_flag\": 0,\n    \"archived_flag\": 0,\n    \"deleted_flag\": 0,\n    \"shared_flag\": 1,\n    \"synced_flag\": 1,\n    \"external_deleted_flag\": 0,\n    \"smart_bcc_flag\": 0,\n    \"first_message_to_me_flag\": 1,\n    \"mail_link_tracking_enabled_flag\": 0,\n    \"last_message_timestamp\": \"2019-11-25T10:30:50.000Z\",\n    \"first_message_timestamp\": \"2019-11-25T08:40:50.000Z\",\n    \"last_message_sent_timestamp\": null,\n    \"last_message_received_timestamp\": \"2019-11-25T10:30:50.000Z\",\n    \"add_time\": \"2019-11-25T08:41:10.000Z\",\n    \"update_time\": \"2019-11-25T10:31:34.000Z\",\n    \"deal_id\": null,\n    \"deal_status\": null,\n    \"all_messages_sent_flag\": 0\n  }\n}"
						}
					]
				},
				{
					"name": "Get all mail messages of mail thread",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/mailbox/mailThreads/:id/mailMessages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mailbox",
								"mailThreads",
								":id",
								"mailMessages"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the mail thread"
								}
							]
						},
						"description": "Returns all the mail messages inside a specified mail thread."
					},
					"response": [
						{
							"name": "Get mail messages from thread",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mailbox/mailThreads/:id/mailMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mailbox",
										"mailThreads",
										":id",
										"mailMessages"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the mail thread"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"from\": [\n        {\n          \"id\": 1,\n          \"email_address\": \"example@email.com\",\n          \"name\": \"Example Message\",\n          \"linked_person_id\": 4,\n          \"linked_person_name\": \"\",\n          \"mail_message_party_id\": 3\n        }\n      ],\n      \"to\": [\n        {\n          \"id\": 4,\n          \"email_address\": \"example@email.com\",\n          \"name\": \"Example Message\",\n          \"linked_person_id\": 1,\n          \"linked_person_name\": \"\",\n          \"mail_message_party_id\": 3\n        }\n      ],\n      \"cc\": [],\n      \"bcc\": [],\n      \"body_url\": \"http://this_would_be_the_link.cloudfront.net/\",\n      \"account_id\": \"iuaousdp77asdadah\",\n      \"user_id\": 777,\n      \"mail_thread_id\": 2,\n      \"subject\": \"The Subject\",\n      \"snippet\": \"Snippet from the email\",\n      \"mail_tracking_status\": null,\n      \"mail_link_tracking_enabled_flag\": 0,\n      \"read_flag\": 1,\n      \"draft\": null,\n      \"draft_flag\": 0,\n      \"synced_flag\": 1,\n      \"deleted_flag\": 0,\n      \"has_body_flag\": 1,\n      \"sent_flag\": 0,\n      \"sent_from_pipedrive_flag\": 0,\n      \"smart_bcc_flag\": 0,\n      \"message_time\": \"2019-08-07T21:15:08.000Z\",\n      \"add_time\": \"2019-08-07T21:34:35.000Z\",\n      \"update_time\": \"2019-08-07T21:34:35.000Z\",\n      \"has_attachments_flag\": 0,\n      \"has_inline_attachments_flag\": 0,\n      \"has_real_attachments_flag\": 0\n    }\n  ]\n}"
						}
					]
				}
			],
			"description": "Mailbox was designed to be the email control hub inside Pipedrive. Pipedrive supports all major providers (including Gmail, Outlook and also custom IMAP/SMTP). There are 2 options for syncing user emails: 2-way sync: Mail Connection is established with the mail provider (example Gmail). There can be only 1 active Mail Connection per user in company. 1-way sync: SmartBCC feature which stores the copies of email messages to Pipedrive by adding the SmartBCC specific address to mail recipients.\n"
		},
		{
			"name": "Meetings",
			"item": [
				{
					"name": "Link a user with the installed video call integration",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_provider_id\": \"<uuid>\",\n  \"user_id\": \"<integer>\",\n  \"company_id\": \"<integer>\",\n  \"marketplace_client_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/meetings/userProviderLinks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"meetings",
								"userProviderLinks"
							]
						},
						"description": "A video calling provider must call this endpoint after a user has installed the video calling app so that the new user's information is sent."
					},
					"response": [
						{
							"name": "User provider link was successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_provider_id\": \"1e3943c9-6395-462b-b432-1f252c017f3d\",\n  \"user_id\": 123,\n  \"company_id\": 456,\n  \"marketplace_client_id\": \"57da5c3c55a82bb4\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/meetings/userProviderLinks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										"userProviderLinks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"message\": \"The user was added successfully\"\n  }\n}"
						},
						{
							"name": "No permission to create user provider link",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_provider_id\": \"1e3943c9-6395-462b-b432-1f252c017f3d\",\n  \"user_id\": 123,\n  \"company_id\": 456,\n  \"marketplace_client_id\": \"57da5c3c55a82bb4\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/meetings/userProviderLinks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										"userProviderLinks"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"message\": \"Missing user id or company id\"\n}"
						}
					]
				},
				{
					"name": "Delete the link between a user and the installed video call integration",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/meetings/userProviderLinks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"meetings",
								"userProviderLinks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"description": "(Required) Unique identifier linking a user to the installed integration"
								}
							]
						},
						"description": "A video calling provider must call this endpoint to remove the link between a user and the installed video calling app."
					},
					"response": [
						{
							"name": "User provider link successfully removed",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/userProviderLinks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										"userProviderLinks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Unique identifier linking a user to the installed integration"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"message\": \"The user data was successfully removed\"\n  }\n}"
						},
						{
							"name": "No permission to remove user provider link",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/userProviderLinks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										"userProviderLinks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Unique identifier linking a user to the installed integration"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"message\": \"Missing user id or company id\"\n}"
						},
						{
							"name": "Incorrect parameter provided",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/meetings/userProviderLinks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meetings",
										"userProviderLinks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Unique identifier linking a user to the installed integration"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"message\": \"Missing user id or company id\"\n}"
						}
					]
				}
			],
			"description": "Meetings API allows integrating video calling apps into Pipedrive through [Video Calling App extension](https://pipedrive.readme.io/docs/video-calling-app-extension). It enables you to manage and interact with your video calls and meetings inside Pipedrive. These endpoints are accessible only through apps with video calls integration [OAuth scope](https://pipedrive.readme.io/docs/marketplace-scopes-and-permissions-explanations).\n"
		},
		{
			"name": "NoteFields",
			"item": [
				{
					"name": "Get all note fields",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/noteFields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"noteFields"
							]
						},
						"description": "Returns data about all note fields."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/noteFields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"noteFields"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"key\": \"content\",\n      \"name\": \"Content\",\n      \"field_type\": \"text\",\n      \"active_flag\": true,\n      \"edit_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"mandatory_flag\": true\n    },\n    {\n      \"id\": 2,\n      \"key\": \"pinned_to_deal_flag\",\n      \"name\": \"Note is pinned to deal\",\n      \"field_type\": \"enum\",\n      \"active_flag\": true,\n      \"edit_flag\": true,\n      \"bulk_edit_allowed\": true,\n      \"options\": [\n        {\n          \"id\": 1,\n          \"label\": \"Yes\"\n        },\n        {\n          \"id\": 0,\n          \"label\": \"No\"\n        }\n      ],\n      \"mandatory_flag\": true\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Note fields represent different fields that a note has.\n"
		},
		{
			"name": "Notes",
			"item": [
				{
					"name": "Get all notes",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notes?user_id=<integer>&lead_id=<uuid>&deal_id=<integer>&person_id=<integer>&org_id=<integer>&project_id=<integer>&start=0&limit=<integer>&sort=<string>&start_date=<date>&end_date=<date>&pinned_to_lead_flag=<number>&pinned_to_deal_flag=<number>&pinned_to_organization_flag=<number>&pinned_to_person_flag=<number>&pinned_to_project_flag=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes"
							],
							"query": [
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "The ID of the user whose notes to fetch. If omitted, notes by all users will be returned."
								},
								{
									"key": "lead_id",
									"value": "<uuid>",
									"description": "The ID of the lead which notes to fetch. If omitted, notes about all leads will be returned."
								},
								{
									"key": "deal_id",
									"value": "<integer>",
									"description": "The ID of the deal which notes to fetch. If omitted, notes about all deals will be returned."
								},
								{
									"key": "person_id",
									"value": "<integer>",
									"description": "The ID of the person whose notes to fetch. If omitted, notes about all persons will be returned."
								},
								{
									"key": "org_id",
									"value": "<integer>",
									"description": "The ID of the organization which notes to fetch. If omitted, notes about all organizations will be returned."
								},
								{
									"key": "project_id",
									"value": "<integer>",
									"description": "The ID of the project which notes to fetch. If omitted, notes about all projects will be returned."
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys). Supported fields: `id`, `user_id`, `deal_id`, `person_id`, `org_id`, `content`, `add_time`, `update_time`."
								},
								{
									"key": "start_date",
									"value": "<date>",
									"description": "The date in format of YYYY-MM-DD from which notes to fetch"
								},
								{
									"key": "end_date",
									"value": "<date>",
									"description": "The date in format of YYYY-MM-DD until which notes to fetch to"
								},
								{
									"key": "pinned_to_lead_flag",
									"value": "<number>",
									"description": "If set, the results are filtered by note to lead pinning state"
								},
								{
									"key": "pinned_to_deal_flag",
									"value": "<number>",
									"description": "If set, the results are filtered by note to deal pinning state"
								},
								{
									"key": "pinned_to_organization_flag",
									"value": "<number>",
									"description": "If set, the results are filtered by note to organization pinning state"
								},
								{
									"key": "pinned_to_person_flag",
									"value": "<number>",
									"description": "If set, the results are filtered by note to person pinning state"
								},
								{
									"key": "pinned_to_project_flag",
									"value": "<number>",
									"description": "If set, the results are filtered by note to project pinning state"
								}
							]
						},
						"description": "Returns all notes."
					},
					"response": [
						{
							"name": "Get all notes",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notes?user_id=<integer>&lead_id=<uuid>&deal_id=<integer>&person_id=<integer>&org_id=<integer>&project_id=<integer>&start=0&limit=<integer>&sort=<string>&start_date=<date>&end_date=<date>&pinned_to_lead_flag=<number>&pinned_to_deal_flag=<number>&pinned_to_organization_flag=<number>&pinned_to_person_flag=<number>&pinned_to_project_flag=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notes"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "lead_id",
											"value": "<uuid>"
										},
										{
											"key": "deal_id",
											"value": "<integer>"
										},
										{
											"key": "person_id",
											"value": "<integer>"
										},
										{
											"key": "org_id",
											"value": "<integer>"
										},
										{
											"key": "project_id",
											"value": "<integer>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "start_date",
											"value": "<date>"
										},
										{
											"key": "end_date",
											"value": "<date>"
										},
										{
											"key": "pinned_to_lead_flag",
											"value": "<number>"
										},
										{
											"key": "pinned_to_deal_flag",
											"value": "<number>"
										},
										{
											"key": "pinned_to_organization_flag",
											"value": "<number>"
										},
										{
											"key": "pinned_to_person_flag",
											"value": "<number>"
										},
										{
											"key": "pinned_to_project_flag",
											"value": "<number>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"active_flag\": true,\n      \"add_time\": \"2019-12-09 13:59:21\",\n      \"content\": \"abc\",\n      \"deal\": {\n        \"title\": \"Deal title\"\n      },\n      \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n      \"deal_id\": 1,\n      \"last_update_user_id\": 1,\n      \"org_id\": 1,\n      \"organization\": {\n        \"name\": \"Organization name\"\n      },\n      \"person\": {\n        \"name\": \"Person name\"\n      },\n      \"person_id\": 1,\n      \"project_id\": 1,\n      \"project\": {\n        \"title\": \"Project name\"\n      },\n      \"pinned_to_lead_flag\": false,\n      \"pinned_to_deal_flag\": true,\n      \"pinned_to_organization_flag\": false,\n      \"pinned_to_person_flag\": false,\n      \"pinned_to_project_flag\": false,\n      \"update_time\": \"2019-12-09 14:26:11\",\n      \"user\": {\n        \"email\": \"user@email.com\",\n        \"icon_url\": \"https://iconurl.net/profile_120x120_123.jpg\",\n        \"is_you\": true,\n        \"name\": \"User Name\"\n      },\n      \"user_id\": 1\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true,\n      \"next_start\": 100\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a note",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"<string>\",\n  \"lead_id\": \"<uuid>\",\n  \"deal_id\": \"<integer>\",\n  \"person_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"project_id\": \"<integer>\",\n  \"user_id\": \"<integer>\",\n  \"add_time\": \"<string>\",\n  \"pinned_to_lead_flag\": \"<number>\",\n  \"pinned_to_deal_flag\": \"<number>\",\n  \"pinned_to_organization_flag\": \"<number>\",\n  \"pinned_to_person_flag\": \"<number>\",\n  \"pinned_to_project_flag\": \"<number>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes"
							]
						},
						"description": "Adds a new note."
					},
					"response": [
						{
							"name": "Add, update or get a note",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"lead_id\": \"<uuid>\",\n  \"deal_id\": \"<integer>\",\n  \"person_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"project_id\": \"<integer>\",\n  \"user_id\": \"<integer>\",\n  \"add_time\": \"<string>\",\n  \"pinned_to_lead_flag\": \"<number>\",\n  \"pinned_to_deal_flag\": \"<number>\",\n  \"pinned_to_organization_flag\": \"<number>\",\n  \"pinned_to_person_flag\": \"<number>\",\n  \"pinned_to_project_flag\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"active_flag\": true,\n    \"add_time\": \"2019-12-09 13:59:21\",\n    \"content\": \"abc\",\n    \"deal\": {\n      \"title\": \"Deal title\"\n    },\n    \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n    \"deal_id\": 1,\n    \"last_update_user_id\": 1,\n    \"org_id\": 1,\n    \"organization\": {\n      \"name\": \"Organization name\"\n    },\n    \"person\": {\n      \"name\": \"Person name\"\n    },\n    \"person_id\": 1,\n    \"project_id\": 1,\n    \"project\": {\n      \"title\": \"Project name\"\n    },\n    \"pinned_to_lead_flag\": false,\n    \"pinned_to_deal_flag\": true,\n    \"pinned_to_organization_flag\": false,\n    \"pinned_to_person_flag\": false,\n    \"pinned_to_project_flag\": false,\n    \"update_time\": \"2019-12-09 14:26:11\",\n    \"user\": {\n      \"email\": \"user@email.com\",\n      \"icon_url\": \"https://iconurl.net/profile_120x120_123.jpg\",\n      \"is_you\": true,\n      \"name\": \"User Name\"\n    },\n    \"user_id\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a note",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the note"
								}
							]
						},
						"description": "Deletes a specific note."
					},
					"response": [
						{
							"name": "Delete a note",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the note"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": true\n}"
						}
					]
				},
				{
					"name": "Get one note",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the note"
								}
							]
						},
						"description": "Returns details about a specific note."
					},
					"response": [
						{
							"name": "Add, update or get a note",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the note"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"active_flag\": true,\n    \"add_time\": \"2019-12-09 13:59:21\",\n    \"content\": \"abc\",\n    \"deal\": {\n      \"title\": \"Deal title\"\n    },\n    \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n    \"deal_id\": 1,\n    \"last_update_user_id\": 1,\n    \"org_id\": 1,\n    \"organization\": {\n      \"name\": \"Organization name\"\n    },\n    \"person\": {\n      \"name\": \"Person name\"\n    },\n    \"person_id\": 1,\n    \"project_id\": 1,\n    \"project\": {\n      \"title\": \"Project name\"\n    },\n    \"pinned_to_lead_flag\": false,\n    \"pinned_to_deal_flag\": true,\n    \"pinned_to_organization_flag\": false,\n    \"pinned_to_person_flag\": false,\n    \"pinned_to_project_flag\": false,\n    \"update_time\": \"2019-12-09 14:26:11\",\n    \"user\": {\n      \"email\": \"user@email.com\",\n      \"icon_url\": \"https://iconurl.net/profile_120x120_123.jpg\",\n      \"is_you\": true,\n      \"name\": \"User Name\"\n    },\n    \"user_id\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Update a note",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<object>",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the note"
								}
							]
						},
						"description": "Updates a note."
					},
					"response": [
						{
							"name": "Add, update or get a note",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"lead_id\": \"<uuid>\",\n  \"deal_id\": \"<integer>\",\n  \"person_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"project_id\": \"<integer>\",\n  \"user_id\": \"<integer>\",\n  \"add_time\": \"<string>\",\n  \"pinned_to_lead_flag\": \"<number>\",\n  \"pinned_to_deal_flag\": \"<number>\",\n  \"pinned_to_organization_flag\": \"<number>\",\n  \"pinned_to_person_flag\": \"<number>\",\n  \"pinned_to_project_flag\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the note"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"active_flag\": true,\n    \"add_time\": \"2019-12-09 13:59:21\",\n    \"content\": \"abc\",\n    \"deal\": {\n      \"title\": \"Deal title\"\n    },\n    \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n    \"deal_id\": 1,\n    \"last_update_user_id\": 1,\n    \"org_id\": 1,\n    \"organization\": {\n      \"name\": \"Organization name\"\n    },\n    \"person\": {\n      \"name\": \"Person name\"\n    },\n    \"person_id\": 1,\n    \"project_id\": 1,\n    \"project\": {\n      \"title\": \"Project name\"\n    },\n    \"pinned_to_lead_flag\": false,\n    \"pinned_to_deal_flag\": true,\n    \"pinned_to_organization_flag\": false,\n    \"pinned_to_person_flag\": false,\n    \"pinned_to_project_flag\": false,\n    \"update_time\": \"2019-12-09 14:26:11\",\n    \"user\": {\n      \"email\": \"user@email.com\",\n      \"icon_url\": \"https://iconurl.net/profile_120x120_123.jpg\",\n      \"is_you\": true,\n      \"name\": \"User Name\"\n    },\n    \"user_id\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Get all comments for a note",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notes/:id/comments?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes",
								":id",
								"comments"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the note"
								}
							]
						},
						"description": "Returns all comments associated with a note."
					},
					"response": [
						{
							"name": "Get all comments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notes/:id/comments?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notes",
										":id",
										"comments"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the note"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"uuid\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n      \"active_flag\": true,\n      \"add_time\": \"2021-06-22T07:18:16.750Z\",\n      \"company_id\": 77,\n      \"content\": \"This is a comment\",\n      \"object_id\": \"725\",\n      \"object_type\": \"note\",\n      \"update_time\": \"2021-06-22T07:18:25.648Z\",\n      \"updater_id\": 8877,\n      \"user_id\": 8877\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true,\n      \"next_start\": 100\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a comment to a note",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notes/:id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes",
								":id",
								"comments"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the note"
								}
							]
						},
						"description": "Adds a new comment to a note."
					},
					"response": [
						{
							"name": "Add, update or get a comment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notes/:id/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notes",
										":id",
										"comments"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the note"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"uuid\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n    \"active_flag\": true,\n    \"add_time\": \"2021-06-22T07:18:16.750Z\",\n    \"company_id\": 77,\n    \"content\": \"This is a comment\",\n    \"object_id\": \"725\",\n    \"object_type\": \"note\",\n    \"update_time\": \"2021-06-22T07:18:25.648Z\",\n    \"updater_id\": 8877,\n    \"user_id\": 8877\n  }\n}"
						}
					]
				},
				{
					"name": "Get one comment",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notes/:id/comments/:commentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes",
								":id",
								"comments",
								":commentId"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the note"
								},
								{
									"key": "commentId",
									"value": "<uuid>",
									"description": "(Required) The ID of the comment"
								}
							]
						},
						"description": "Returns the details of a comment."
					},
					"response": [
						{
							"name": "Add, update or get a comment",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notes/:id/comments/:commentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notes",
										":id",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the note"
										},
										{
											"key": "commentId",
											"value": "<uuid>",
											"description": "(Required) The ID of the comment"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"uuid\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n    \"active_flag\": true,\n    \"add_time\": \"2021-06-22T07:18:16.750Z\",\n    \"company_id\": 77,\n    \"content\": \"This is a comment\",\n    \"object_id\": \"725\",\n    \"object_type\": \"note\",\n    \"update_time\": \"2021-06-22T07:18:25.648Z\",\n    \"updater_id\": 8877,\n    \"user_id\": 8877\n  }\n}"
						}
					]
				},
				{
					"name": "Update a comment related to a note",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notes/:id/comments/:commentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes",
								":id",
								"comments",
								":commentId"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the note"
								},
								{
									"key": "commentId",
									"value": "<uuid>",
									"description": "(Required) The ID of the comment"
								}
							]
						},
						"description": "Updates a comment related to a note."
					},
					"response": [
						{
							"name": "Add, update or get a comment",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notes/:id/comments/:commentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notes",
										":id",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the note"
										},
										{
											"key": "commentId",
											"value": "<uuid>",
											"description": "(Required) The ID of the comment"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"uuid\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n    \"active_flag\": true,\n    \"add_time\": \"2021-06-22T07:18:16.750Z\",\n    \"company_id\": 77,\n    \"content\": \"This is a comment\",\n    \"object_id\": \"725\",\n    \"object_type\": \"note\",\n    \"update_time\": \"2021-06-22T07:18:25.648Z\",\n    \"updater_id\": 8877,\n    \"user_id\": 8877\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a comment related to a note",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notes/:id/comments/:commentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notes",
								":id",
								"comments",
								":commentId"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the note"
								},
								{
									"key": "commentId",
									"value": "<uuid>",
									"description": "(Required) The ID of the comment"
								}
							]
						},
						"description": "Deletes a comment."
					},
					"response": [
						{
							"name": "Delete a comment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notes/:id/comments/:commentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notes",
										":id",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the note"
										},
										{
											"key": "commentId",
											"value": "<uuid>",
											"description": "(Required) The ID of the comment"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": true\n}"
						}
					]
				}
			],
			"description": "Notes are pieces of textual (HTML-formatted) information that can be attached to deals, persons and organizations. Notes are usually displayed in the UI in chronological order – newest first – and in context with other updates regarding the item they are attached to. The maximum note size is approximately 100,000 characters (or 100KB per note).\n"
		},
		{
			"name": "Oauth",
			"item": [
				{
					"name": "Requesting authorization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html"
							}
						],
						"url": {
							"raw": "https://oauth.pipedrive.com/oauth/authorize?client_id=<string>&redirect_uri=<string>&state=<string>",
							"protocol": "https",
							"host": [
								"oauth",
								"pipedrive",
								"com"
							],
							"path": [
								"oauth",
								"authorize"
							],
							"query": [
								{
									"key": "client_id",
									"value": "<string>",
									"description": "(Required) The client ID provided to you by the Pipedrive Marketplace when you register your app"
								},
								{
									"key": "redirect_uri",
									"value": "<string>",
									"description": "(Required) The callback URL you provided when you registered your app. Authorization code will be sent to that URL (if it matches with the value you entered in the registration form) if a user approves the app install. Or, if a customer declines, the corresponding error will also be sent to this URL."
								},
								{
									"key": "state",
									"value": "<string>",
									"description": "You may pass any random string as the state parameter and the same string will be returned to your app after a user authorizes access. It may be used to store the user's session ID from your app or distinguish different responses. Using state may increase security; see RFC-6749.\n"
								}
							]
						},
						"description": "Authorize a user by redirecting them to the Pipedrive OAuth authorization page and request their permissions to act on their behalf. This step is necessary to implement only when you allow app installation outside of the Marketplace."
					},
					"response": [
						{
							"name": "Authorize user in the app.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/html"
									}
								],
								"url": {
									"raw": "https://oauth.pipedrive.com/oauth/authorize?client_id=<string>&redirect_uri=<string>&state=<string>",
									"protocol": "https",
									"host": [
										"oauth",
										"pipedrive",
										"com"
									],
									"path": [
										"oauth",
										"authorize"
									],
									"query": [
										{
											"key": "client_id",
											"value": "<string>"
										},
										{
											"key": "redirect_uri",
											"value": "<string>"
										},
										{
											"key": "state",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html"
								}
							],
							"cookie": [],
							"body": "As a result of the request, the customer will see a page with the confirmation dialog, which will present the details of your app (title, company name, icon) and explain the permission scopes that you have set for the app. Customers should confirm their wish to install the app by clicking \"Allow and install\" or deny authorization by clicking \"Cancel\".\n"
						}
					]
				},
				{
					"name": "Getting the tokens",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "<string>",
								"description": "(Required) Base 64 encoded string containing the `client_id` and `client_secret` values. The header value should be `Basic <base64(client_id:client_secret)>`."
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"description": "Since you are trying to exchange an authorization code for a pair of tokens, you must use the value \"authorization_code\""
								},
								{
									"key": "code",
									"value": "<string>",
									"description": "The authorization code that you received after the user confirmed app installation"
								},
								{
									"key": "redirect_uri",
									"value": "<string>",
									"description": "The callback URL you provided when you registered your app"
								}
							]
						},
						"url": {
							"raw": "https://oauth.pipedrive.com/oauth/token",
							"protocol": "https",
							"host": [
								"oauth",
								"pipedrive",
								"com"
							],
							"path": [
								"oauth",
								"token"
							]
						},
						"description": "After the customer has confirmed the app installation, you will need to exchange the `authorization_code` to a pair of access and refresh tokens. Using an access token, you can access the user's data through the API."
					},
					"response": [
						{
							"name": "Returns user Oauth2 tokens.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									},
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "(Required) Base 64 encoded string containing the `client_id` and `client_secret` values. The header value should be `Basic <base64(client_id:client_secret)>`."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "authorization_code",
											"description": "Since you are trying to exchange an authorization code for a pair of tokens, you must use the value \"authorization_code\""
										},
										{
											"key": "code",
											"value": "<string>",
											"description": "The authorization code that you received after the user confirmed app installation"
										},
										{
											"key": "redirect_uri",
											"value": "<string>",
											"description": "The callback URL you provided when you registered your app"
										}
									]
								},
								"url": {
									"raw": "https://oauth.pipedrive.com/oauth/token",
									"protocol": "https",
									"host": [
										"oauth",
										"pipedrive",
										"com"
									],
									"path": [
										"oauth",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"access_token\": \"v1u:AQIBAHj+LzTNK1yuuuaLqifzhWb9crUNKTpk4FlQ9rjnXqp/6AErhI98syaV25RmpLJLIgOkAAAAfjB8BgkqhkiG9w0BBwagbzBtAgEAMGgGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMbGNxa4UccVoXAmLNAgEQgDsiQ7cNdoRBJeFr1i3KW84RYyM1Qtwq1oSBJOl/NFQdVjDI2iQH0LBhS28DbL2KDvoVIihea9Ryt/9rIQ==:RIDnTOIXo8QirT3DMYw0Y0s8xBbxz59f5IMq7T7WhSz313e2MXRHB6g+8OTNCSqVO7QsUhluoAmOfBP1FNkPycy9txn7t2Uoz9y/JDVf4Givv4MMiK/Xq3I7hO4N6FeD+2GqDJDBn24OW6b0SRIr4FEROhGo3BpcPRGehv46NLn1n5LrqXrQwO9qrGD4gIZe40oO2IQgGL9QAPDfqvZ+JhUtcpAipRLp7cCDRfYU8+sdOFJ+hLffqC8isFcV6iPsNrmj\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 3599,\n  \"refresh_token\": \"1:1:2a5496a8bdd0f829dcb09dc8ba82b188f0ea4481\",\n  \"scope\": \"base\",\n  \"api_domain\": \"https://user-company.pipedrive.com\"\n}"
						}
					]
				},
				{
					"name": "Refreshing the tokens",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "<string>",
								"description": "(Required) Base 64 encoded string containing the `client_id` and `client_secret` values. The header value should be `Basic <base64(client_id:client_secret)>`."
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "refresh_token",
									"description": "Since you are to refresh your access_token, you must use the value \"refresh_token\""
								},
								{
									"key": "refresh_token",
									"value": "<string>",
									"description": "The refresh token that you received after you exchanged the authorization code"
								}
							]
						},
						"url": {
							"raw": "https://oauth.pipedrive.com/oauth/token/",
							"protocol": "https",
							"host": [
								"oauth",
								"pipedrive",
								"com"
							],
							"path": [
								"oauth",
								"token",
								""
							]
						},
						"description": "The `access_token` has a lifetime. After a period of time, which was returned to you in `expires_in` JSON property, the `access_token` will be invalid, and you can no longer use it to get data from our API. To refresh the `access_token`, you must use the `refresh_token`."
					},
					"response": [
						{
							"name": "Returns user Oauth2 tokens.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									},
									{
										"key": "Authorization",
										"value": "<string>",
										"description": "(Required) Base 64 encoded string containing the `client_id` and `client_secret` values. The header value should be `Basic <base64(client_id:client_secret)>`."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "refresh_token",
											"description": "Since you are to refresh your access_token, you must use the value \"refresh_token\""
										},
										{
											"key": "refresh_token",
											"value": "<string>",
											"description": "The refresh token that you received after you exchanged the authorization code"
										}
									]
								},
								"url": {
									"raw": "https://oauth.pipedrive.com/oauth/token/",
									"protocol": "https",
									"host": [
										"oauth",
										"pipedrive",
										"com"
									],
									"path": [
										"oauth",
										"token",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"access_token\": \"v1u:AQIBAHj+LzTNK1yuuuaLqifzhWb9crUNKTpk4FlQ9rjnXqp/6AErhI98syaV25RmpLJLIgOkAAAAfjB8BgkqhkiG9w0BBwagbzBtAgEAMGgGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMbGNxa4UccVoXAmLNAgEQgDsiQ7cNdoRBJeFr1i3KW84RYyM1Qtwq1oSBJOl/NFQdVjDI2iQH0LBhS28DbL2KDvoVIihea9Ryt/9rIQ==:RIDnTOIXo8QirT3DMYw0Y0s8xBbxz59f5IMq7T7WhSz313e2MXRHB6g+8OTNCSqVO7QsUhluoAmOfBP1FNkPycy9txn7t2Uoz9y/JDVf4Givv4MMiK/Xq3I7hO4N6FeD+2GqDJDBn24OW6b0SRIr4FEROhGo3BpcPRGehv46NLn1n5LrqXrQwO9qrGD4gIZe40oO2IQgGL9QAPDfqvZ+JhUtcpAipRLp7cCDRfYU8+sdOFJ+hLffqC8isFcV6iPsNrmj\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 3599,\n  \"refresh_token\": \"1:1:2a5496a8bdd0f829dcb09dc8ba82b188f0ea4481\",\n  \"scope\": \"base\",\n  \"api_domain\": \"https://user-company.pipedrive.com\"\n}"
						}
					]
				}
			],
			"description": "Using OAuth 2.0 is necessary for developing apps that are available in the Pipedrive Marketplace. Authorization via OAuth 2.0 is a well-known and stable way to get fine-grained access to an API. To retrieve OAuth2 tokens you should send requests to the `https://oauth.pipedrive.com` domain. After registering the app, you must add the necessary server-side logic to your app to establish the OAuth flow. Please read more about authorization step on the [Pipedrive Developers page](https://pipedrive.readme.io/docs/marketplace-oauth-authorization).\n"
		},
		{
			"name": "OrganizationFields",
			"item": [
				{
					"name": "Get all organization fields",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizationFields?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationFields"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Returns data about all organization fields."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizationFields?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationFields"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"key\": \"title\",\n      \"name\": \"Title\",\n      \"order_nr\": 2,\n      \"field_type\": \"varchar\",\n      \"add_time\": \"2019-02-04 13:58:03\",\n      \"update_time\": \"2019-02-04 13:58:03\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": false,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": true,\n      \"add_visible_flag\": true,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"options\": null,\n      \"mandatory_flag\": true\n    },\n    {\n      \"id\": 2,\n      \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n      \"name\": \"Customer Type\",\n      \"order_nr\": 1,\n      \"field_type\": \"enum\",\n      \"add_time\": \"2019-02-04 13:58:03\",\n      \"update_time\": \"2019-02-04 13:58:03\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": true,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": true,\n      \"add_visible_flag\": false,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"options\": [\n        {\n          \"id\": 190,\n          \"label\": \"Private person\"\n        },\n        {\n          \"id\": 191,\n          \"label\": \"Company\"\n        },\n        {\n          \"id\": 192,\n          \"label\": \"Government\"\n        }\n      ],\n      \"mandatory_flag\": true\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a new organization field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"field_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizationFields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationFields"
							]
						},
						"description": "Adds a new organization field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"field_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizationFields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationFields"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n    \"name\": \"Customer Type\",\n    \"order_nr\": 1,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-02-04 13:58:03\",\n    \"update_time\": \"2019-02-04 13:58:03\",\n    \"last_updated_by_user_id\": 1,\n    \"created_by_user_id\": 1,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": false,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 190,\n        \"label\": \"Private person\"\n      },\n      {\n        \"id\": 191,\n        \"label\": \"Company\"\n      },\n      {\n        \"id\": 192,\n        \"label\": \"Government\"\n      }\n    ],\n    \"mandatory_flag\": true\n  }\n}"
						}
					]
				},
				{
					"name": "Delete multiple organization fields in bulk",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizationFields?ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationFields"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) The comma-separated field IDs to delete"
								}
							]
						},
						"description": "Marks multiple fields as deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizationFields?ids=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationFields"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": [\n      123,\n      456\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get one organization field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizationFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the field"
								}
							]
						},
						"description": "Returns data about a specific organization field."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizationFields/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationFields",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n    \"name\": \"Customer Type\",\n    \"order_nr\": 1,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-02-04 13:58:03\",\n    \"update_time\": \"2019-02-04 13:58:03\",\n    \"last_updated_by_user_id\": 1,\n    \"created_by_user_id\": 1,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": false,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 190,\n        \"label\": \"Private person\"\n      },\n      {\n        \"id\": 191,\n        \"label\": \"Company\"\n      },\n      {\n        \"id\": 192,\n        \"label\": \"Government\"\n      }\n    ],\n    \"mandatory_flag\": true\n  }\n}"
						}
					]
				},
				{
					"name": "Delete an organization field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizationFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the field"
								}
							]
						},
						"description": "Marks a field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizationFields/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationFields",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123\n  }\n}"
						}
					]
				},
				{
					"name": "Update an organization field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizationFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the field"
								}
							]
						},
						"description": "Updates an organization field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields' values</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizationFields/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationFields",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n    \"name\": \"Customer Type\",\n    \"order_nr\": 1,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-02-04 13:58:03\",\n    \"update_time\": \"2019-02-04 13:58:03\",\n    \"last_updated_by_user_id\": 1,\n    \"created_by_user_id\": 1,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": false,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 190,\n        \"label\": \"Private person\"\n      },\n      {\n        \"id\": 191,\n        \"label\": \"Company\"\n      },\n      {\n        \"id\": 192,\n        \"label\": \"Government\"\n      }\n    ],\n    \"mandatory_flag\": true\n  }\n}"
						}
					]
				}
			],
			"description": "Organization fields represent the near-complete schema for an organization in the context of the company of the authorized user. Each company can have a different schema for their organizations, with various custom fields. In the context of using organization fields as a schema for defining the data fields of an organization, it must be kept in mind that some types of custom fields can have additional data fields which are not separate organization fields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of organization fields. For example, if there is a monetary field with the key `ffk9s9` stored on the account, `ffk9s9` would hold the numeric value of the field, and `ffk9s9_currency` would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one organization and list its keys.\n"
		},
		{
			"name": "OrganizationRelationships",
			"item": [
				{
					"name": "Get all relationships for organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizationRelationships?org_id=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationRelationships"
							],
							"query": [
								{
									"key": "org_id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization to get relationships for"
								}
							]
						},
						"description": "Gets all of the relationships for a supplied organization ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizationRelationships?org_id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationRelationships"
									],
									"query": [
										{
											"key": "org_id",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"related_organization_name\": \"Telia\",\n      \"calculated_type\": \"daughter\",\n      \"calculated_related_org_id\": 1480,\n      \"id\": 1,\n      \"type\": \"parent\",\n      \"rel_owner_org_id\": {\n        \"name\": \"Pipedrive Inc.\",\n        \"people_count\": 1,\n        \"owner_id\": 925000,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"company@pipedrivemail.com\",\n        \"value\": 1481\n      },\n      \"rel_linked_org_id\": {\n        \"name\": \"Telia\",\n        \"people_count\": 2,\n        \"owner_id\": 925000,\n        \"address\": \"USA\",\n        \"active_flag\": true,\n        \"cc_email\": \"company@pipedrivemail.com\",\n        \"value\": 1480\n      },\n      \"add_time\": \"2020-09-22 08:58:28\",\n      \"update_time\": \"2020-09-22 08:58:28\",\n      \"active_flag\": \"true\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1482\": {\n        \"id\": 457,\n        \"name\": \"Yandex\",\n        \"people_count\": 2,\n        \"owner_id\": 9271535,\n        \"address\": \"Mustamäe tee 4b, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Create an organization relationship",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"<string>\",\n  \"rel_owner_org_id\": \"<integer>\",\n  \"rel_linked_org_id\": \"<integer>\",\n  \"org_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizationRelationships",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationRelationships"
							]
						},
						"description": "Creates and returns an organization relationship."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"<string>\",\n  \"rel_owner_org_id\": \"<integer>\",\n  \"rel_linked_org_id\": \"<integer>\",\n  \"org_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizationRelationships",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationRelationships"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"type\": \"parent\",\n    \"rel_owner_org_id\": {\n      \"name\": \"Pipedrive Inc.\",\n      \"people_count\": 1,\n      \"owner_id\": 925000,\n      \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n      \"active_flag\": true,\n      \"cc_email\": \"company@pipedrivemail.com\",\n      \"value\": 1481\n    },\n    \"rel_linked_org_id\": {\n      \"name\": \"Telia\",\n      \"people_count\": 2,\n      \"owner_id\": 925000,\n      \"address\": \"USA\",\n      \"active_flag\": true,\n      \"cc_email\": \"company@pipedrivemail.com\",\n      \"value\": 1480\n    },\n    \"add_time\": \"2020-09-22 08:58:28\",\n    \"update_time\": \"2020-09-22 08:58:28\",\n    \"active_flag\": \"true\"\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1482\": {\n        \"id\": 457,\n        \"name\": \"Yandex\",\n        \"people_count\": 2,\n        \"owner_id\": 9271535,\n        \"address\": \"Mustamäe tee 4b, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete an organization relationship",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizationRelationships/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationRelationships",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization relationship"
								}
							]
						},
						"description": "Deletes an organization relationship and returns the deleted ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizationRelationships/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationRelationships",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization relationship"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 10\n  }\n}"
						}
					]
				},
				{
					"name": "Get one organization relationship",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizationRelationships/:id?org_id=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationRelationships",
								":id"
							],
							"query": [
								{
									"key": "org_id",
									"value": "<integer>",
									"description": "The ID of the base organization for the returned calculated values"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization relationship"
								}
							]
						},
						"description": "Finds and returns an organization relationship from its ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizationRelationships/:id?org_id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationRelationships",
										":id"
									],
									"query": [
										{
											"key": "org_id",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization relationship"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"type\": \"parent\",\n    \"rel_owner_org_id\": {\n      \"name\": \"Pipedrive Inc.\",\n      \"people_count\": 1,\n      \"owner_id\": 925000,\n      \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n      \"active_flag\": true,\n      \"cc_email\": \"company@pipedrivemail.com\",\n      \"value\": 1481\n    },\n    \"rel_linked_org_id\": {\n      \"name\": \"Telia\",\n      \"people_count\": 2,\n      \"owner_id\": 925000,\n      \"address\": \"USA\",\n      \"active_flag\": true,\n      \"cc_email\": \"company@pipedrivemail.com\",\n      \"value\": 1480\n    },\n    \"add_time\": \"2020-09-22 08:58:28\",\n    \"update_time\": \"2020-09-22 08:58:28\",\n    \"active_flag\": \"true\",\n    \"calculated_type\": \"daughter\",\n    \"calculated_related_org_id\": 1480\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1482\": {\n        \"id\": 457,\n        \"name\": \"Yandex\",\n        \"people_count\": 2,\n        \"owner_id\": 9271535,\n        \"address\": \"Mustamäe tee 4b, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update an organization relationship",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"org_id\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"rel_owner_org_id\": \"<integer>\",\n  \"rel_linked_org_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizationRelationships/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizationRelationships",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization relationship"
								}
							]
						},
						"description": "Updates and returns an organization relationship."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"org_id\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"rel_owner_org_id\": \"<integer>\",\n  \"rel_linked_org_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizationRelationships/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizationRelationships",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization relationship"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"type\": \"parent\",\n    \"rel_owner_org_id\": {\n      \"name\": \"Pipedrive Inc.\",\n      \"people_count\": 1,\n      \"owner_id\": 925000,\n      \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n      \"active_flag\": true,\n      \"cc_email\": \"company@pipedrivemail.com\",\n      \"value\": 1481\n    },\n    \"rel_linked_org_id\": {\n      \"name\": \"Telia\",\n      \"people_count\": 2,\n      \"owner_id\": 925000,\n      \"address\": \"USA\",\n      \"active_flag\": true,\n      \"cc_email\": \"company@pipedrivemail.com\",\n      \"value\": 1480\n    },\n    \"add_time\": \"2020-09-22 08:58:28\",\n    \"update_time\": \"2020-09-22 08:58:28\",\n    \"active_flag\": \"true\"\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1482\": {\n        \"id\": 457,\n        \"name\": \"Yandex\",\n        \"people_count\": 2,\n        \"owner_id\": 9271535,\n        \"address\": \"Mustamäe tee 4b, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Organization relationships represent how different organizations are related to each other. The relationship can be hierarchical (parent-child companies) or lateral as defined by the `type` field - either `parent` or `related`.\n"
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "Delete multiple organizations in bulk",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations?ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) The comma-separated IDs that will be deleted"
								}
							]
						},
						"description": "Marks multiple organizations as deleted. After 30 days, the organizations will be permanently deleted. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Organizations#deleteOrganization\" target=\"_blank\" rel=\"noopener noreferrer\">DELETE /api/v2/organizations/{id}</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?ids=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": [\n      123,\n      100\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get all organizations",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations?user_id=<integer>&filter_id=<integer>&first_char=<string>&start=0&limit=<integer>&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							],
							"query": [
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "If supplied, only organizations owned by the given user will be returned. However, `filter_id` takes precedence over `user_id` when both are supplied."
								},
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "The ID of the filter to use"
								},
								{
									"key": "first_char",
									"value": "<string>",
									"description": "If supplied, only organizations whose name starts with the specified letter will be returned (case-insensitive)"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys)."
								}
							]
						},
						"description": "Returns all organizations."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?user_id=<integer>&filter_id=<integer>&first_char=<string>&start=0&limit=<integer>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "first_char",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"company_id\": 77,\n      \"owner_id\": {\n        \"id\": 10,\n        \"name\": \"Will Smith\",\n        \"email\": \"will.smith@pipedrive.com\",\n        \"has_pic\": 0,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true,\n        \"value\": 10\n      },\n      \"name\": \"Bolt\",\n      \"open_deals_count\": 1,\n      \"related_open_deals_count\": 2,\n      \"closed_deals_count\": 3,\n      \"related_closed_deals_count\": 1,\n      \"email_messages_count\": 2,\n      \"people_count\": 1,\n      \"activities_count\": 2,\n      \"done_activities_count\": 1,\n      \"undone_activities_count\": 0,\n      \"files_count\": 0,\n      \"notes_count\": 0,\n      \"followers_count\": 1,\n      \"won_deals_count\": 0,\n      \"related_won_deals_count\": 0,\n      \"lost_deals_count\": 0,\n      \"related_lost_deals_count\": 0,\n      \"active_flag\": true,\n      \"picture_id\": {\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cf14ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb2ac8f269_512.jpg\"\n        },\n        \"value\": 101\n      },\n      \"country_code\": null,\n      \"first_char\": \"b\",\n      \"update_time\": \"2020-09-08 12:14:11\",\n      \"add_time\": \"2020-02-25 10:04:08\",\n      \"visible_to\": \"3\",\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": 34,\n      \"last_activity_date\": \"2019-11-28\",\n      \"label\": 7,\n      \"label_ids\": [\n        7,\n        8\n      ],\n      \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n      \"address_subpremise\": \"\",\n      \"address_street_number\": \"3a\",\n      \"address_route\": \"Mustamäe tee\",\n      \"address_sublocality\": \"Kristiine\",\n      \"address_locality\": \"Tallinn\",\n      \"address_admin_area_level_1\": \"Harju maakond\",\n      \"address_admin_area_level_2\": \"\",\n      \"address_country\": \"Estonia\",\n      \"address_postal_code\": \"10616\",\n      \"address_formatted_address\": \"Mustamäe tee 3a, 10616 Tallinn, Estonia\",\n      \"owner_name\": \"John Doe\",\n      \"cc_email\": \"org@pipedrivemail.com\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false,\n      \"next_start\": 100\n    }\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Org Name\",\n        \"people_count\": 1,\n        \"owner_id\": 123,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"user\": {\n      \"123\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true\n      }\n    },\n    \"picture\": {\n      \"1\": {\n        \"id\": 1,\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n        }\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"add_time\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"label\": \"<integer>\",\n  \"label_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visible_to\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						},
						"description": "Adds a new organization. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the organizationFields and look for `key` values. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-an-organization\" target=\"_blank\" rel=\"noopener noreferrer\">adding an organization</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"add_time\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"label\": \"<integer>\",\n  \"label_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visible_to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 77,\n    \"owner_id\": {\n      \"id\": 10,\n      \"name\": \"Will Smith\",\n      \"email\": \"will.smith@pipedrive.com\",\n      \"has_pic\": 0,\n      \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n      \"active_flag\": true,\n      \"value\": 10\n    },\n    \"name\": \"Bolt\",\n    \"open_deals_count\": 1,\n    \"related_open_deals_count\": 2,\n    \"closed_deals_count\": 3,\n    \"related_closed_deals_count\": 1,\n    \"email_messages_count\": 2,\n    \"people_count\": 1,\n    \"activities_count\": 2,\n    \"done_activities_count\": 1,\n    \"undone_activities_count\": 0,\n    \"files_count\": 0,\n    \"notes_count\": 0,\n    \"followers_count\": 1,\n    \"won_deals_count\": 0,\n    \"related_won_deals_count\": 0,\n    \"lost_deals_count\": 0,\n    \"related_lost_deals_count\": 0,\n    \"active_flag\": true,\n    \"picture_id\": {\n      \"item_type\": \"person\",\n      \"item_id\": 25,\n      \"active_flag\": true,\n      \"add_time\": \"2020-09-08 08:17:52\",\n      \"update_time\": \"0000-00-00 00:00:00\",\n      \"added_by_user_id\": 967055,\n      \"pictures\": {\n        \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cf14ac8f269_128.jpg\",\n        \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb2ac8f269_512.jpg\"\n      },\n      \"value\": 101\n    },\n    \"country_code\": null,\n    \"first_char\": \"b\",\n    \"update_time\": \"2020-09-08 12:14:11\",\n    \"add_time\": \"2020-02-25 10:04:08\",\n    \"visible_to\": \"3\",\n    \"next_activity_date\": \"2019-11-29\",\n    \"next_activity_time\": \"11:30:00\",\n    \"next_activity_id\": 128,\n    \"last_activity_id\": 34,\n    \"last_activity_date\": \"2019-11-28\",\n    \"label\": 7,\n    \"label_ids\": [\n      7,\n      8\n    ],\n    \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n    \"address_subpremise\": \"\",\n    \"address_street_number\": \"3a\",\n    \"address_route\": \"Mustamäe tee\",\n    \"address_sublocality\": \"Kristiine\",\n    \"address_locality\": \"Tallinn\",\n    \"address_admin_area_level_1\": \"Harju maakond\",\n    \"address_admin_area_level_2\": \"\",\n    \"address_country\": \"Estonia\",\n    \"address_postal_code\": \"10616\",\n    \"address_formatted_address\": \"Mustamäe tee 3a, 10616 Tallinn, Estonia\",\n    \"owner_name\": \"John Doe\",\n    \"cc_email\": \"org@pipedrivemail.com\"\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Org Name\",\n        \"people_count\": 1,\n        \"owner_id\": 123,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"user\": {\n      \"123\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true\n      }\n    },\n    \"picture\": {\n      \"1\": {\n        \"id\": 1,\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n        }\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get all organizations collection",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/collection?cursor=<string>&limit=<integer>&since=<string>&until=<string>&owner_id=<integer>&first_char=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"collection"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
								},
								{
									"key": "since",
									"value": "<string>",
									"description": "The time boundary that points to the start of the range of data. Datetime in ISO 8601 format. E.g. 2022-11-01 08:55:59. Operates on the `update_time` field."
								},
								{
									"key": "until",
									"value": "<string>",
									"description": "The time boundary that points to the end of the range of data. Datetime in ISO 8601 format. E.g. 2022-11-01 08:55:59. Operates on the `update_time` field."
								},
								{
									"key": "owner_id",
									"value": "<integer>",
									"description": "If supplied, only organizations owned by the given user will be returned"
								},
								{
									"key": "first_char",
									"value": "<string>",
									"description": "If supplied, only organizations whose name starts with the specified letter will be returned (case-insensitive)"
								}
							]
						},
						"description": "Returns all organizations. Please note that only global admins (those with global permissions) can access this endpoint. Users with regular permissions will receive a 403 response. Read more about global permissions <a href=\"https://support.pipedrive.com/en/article/global-user-management\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Organizations#getOrganizations\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/organizations</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/collection?cursor=<string>&limit=100&since=<string>&until=<string>&owner_id=<integer>&first_char=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										"collection"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "since",
											"value": "<string>"
										},
										{
											"key": "until",
											"value": "<string>"
										},
										{
											"key": "owner_id",
											"value": "<integer>"
										},
										{
											"key": "first_char",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"active_flag\": true,\n      \"owner_id\": 123,\n      \"name\": \"Pipedrive\",\n      \"update_time\": \"2023-02-08 05:30:20\",\n      \"delete_time\": null,\n      \"add_time\": \"2023-01-08 05:30:20\",\n      \"visible_to\": \"3\",\n      \"label\": 1,\n      \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n      \"address_subpremise\": \"\",\n      \"address_street_number\": \"3a\",\n      \"address_route\": \"Mustamäe tee\",\n      \"address_sublocality\": \"Kristiine\",\n      \"address_locality\": \"Tallinn\",\n      \"address_admin_area_level_1\": \"Harju maakond\",\n      \"address_admin_area_level_2\": \"\",\n      \"address_country\": \"Estonia\",\n      \"address_postal_code\": \"10616\",\n      \"address_formatted_address\": \"Mustamäe tee 3a, 10616 Tallinn, Estonia\",\n      \"cc_email\": \"org@pipedrivemail.com\"\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"eyJhY3Rpdml0aWVzIjoyN30\"\n  }\n}"
						},
						{
							"name": "Forbidden response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/collection?cursor=<string>&limit=100&since=<string>&until=<string>&owner_id=<integer>&first_char=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										"collection"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "since",
											"value": "<string>"
										},
										{
											"key": "until",
											"value": "<string>"
										},
										{
											"key": "owner_id",
											"value": "<integer>"
										},
										{
											"key": "first_char",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You do not have permissions to do this.\",\n  \"error_info\": \"Please check developers.pipedrive.com\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Search organizations",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/search?term=<string>&fields=<string>&exact_match=<boolean>&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"search"
							],
							"query": [
								{
									"key": "term",
									"value": "<string>",
									"description": "(Required) The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded."
								},
								{
									"key": "fields",
									"value": "<string>",
									"description": "A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: `address`, `varchar`, `text`, `varchar_auto`, `double`, `monetary` and `phone`. Read more about searching by custom fields <a href=\"https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>."
								},
								{
									"key": "exact_match",
									"value": "<boolean>",
									"description": "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter."
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Searches all organizations by name, address, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/search?term=<string>&fields=<string>&exact_match=<boolean>&start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										"search"
									],
									"query": [
										{
											"key": "term",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "exact_match",
											"value": "<boolean>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"items\": [\n      {\n        \"result_score\": 0.316,\n        \"item\": {\n          \"id\": 1,\n          \"type\": \"organization\",\n          \"name\": \"Organization name\",\n          \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n          \"visible_to\": 3,\n          \"owner\": {\n            \"id\": 1\n          },\n          \"custom_fields\": [],\n          \"notes\": []\n        }\n      }\n    ]\n  },\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Marks an organization as deleted. After 30 days, the organization will be permanently deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123\n  }\n}"
						}
					]
				},
				{
					"name": "Get details of an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Returns the details of an organization. Note that this also returns some additional fields which are not present when asking for all organizations. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the `key` value of organizationFields."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 77,\n    \"owner_id\": {\n      \"id\": 10,\n      \"name\": \"Will Smith\",\n      \"email\": \"will.smith@pipedrive.com\",\n      \"has_pic\": 0,\n      \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n      \"active_flag\": true,\n      \"value\": 10\n    },\n    \"name\": \"Bolt\",\n    \"open_deals_count\": 1,\n    \"related_open_deals_count\": 2,\n    \"closed_deals_count\": 3,\n    \"related_closed_deals_count\": 1,\n    \"email_messages_count\": 2,\n    \"people_count\": 1,\n    \"activities_count\": 2,\n    \"done_activities_count\": 1,\n    \"undone_activities_count\": 0,\n    \"files_count\": 0,\n    \"notes_count\": 0,\n    \"followers_count\": 1,\n    \"won_deals_count\": 0,\n    \"related_won_deals_count\": 0,\n    \"lost_deals_count\": 0,\n    \"related_lost_deals_count\": 0,\n    \"active_flag\": true,\n    \"picture_id\": {\n      \"item_type\": \"person\",\n      \"item_id\": 25,\n      \"active_flag\": true,\n      \"add_time\": \"2020-09-08 08:17:52\",\n      \"update_time\": \"0000-00-00 00:00:00\",\n      \"added_by_user_id\": 967055,\n      \"pictures\": {\n        \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cf14ac8f269_128.jpg\",\n        \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb2ac8f269_512.jpg\"\n      },\n      \"value\": 101\n    },\n    \"country_code\": null,\n    \"first_char\": \"b\",\n    \"update_time\": \"2020-09-08 12:14:11\",\n    \"add_time\": \"2020-02-25 10:04:08\",\n    \"visible_to\": \"3\",\n    \"next_activity_date\": null,\n    \"next_activity_time\": null,\n    \"next_activity_id\": null,\n    \"last_activity_id\": 34,\n    \"last_activity_date\": \"2019-11-28\",\n    \"label\": 7,\n    \"label_ids\": [\n      7,\n      8\n    ],\n    \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n    \"address_subpremise\": \"\",\n    \"address_street_number\": \"3a\",\n    \"address_route\": \"Mustamäe tee\",\n    \"address_sublocality\": \"Kristiine\",\n    \"address_locality\": \"Tallinn\",\n    \"address_admin_area_level_1\": \"Harju maakond\",\n    \"address_admin_area_level_2\": \"\",\n    \"address_country\": \"Estonia\",\n    \"address_postal_code\": \"10616\",\n    \"address_formatted_address\": \"Mustamäe tee 3a, 10616 Tallinn, Estonia\",\n    \"owner_name\": \"John Doe\",\n    \"cc_email\": \"org@pipedrivemail.com\",\n    \"last_activity\": {\n      \"id\": 8,\n      \"company_id\": 22122,\n      \"user_id\": 1234,\n      \"done\": false,\n      \"type\": \"deadline\",\n      \"reference_type\": \"scheduler-service\",\n      \"reference_id\": 7,\n      \"conference_meeting_client\": \"871b8bc88d3a1202\",\n      \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n      \"conference_meeting_id\": \"17058746701\",\n      \"due_date\": \"2020-06-09\",\n      \"due_time\": \"10:00\",\n      \"duration\": \"01:00\",\n      \"busy_flag\": true,\n      \"add_time\": \"2020-06-08 12:37:56\",\n      \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n      \"last_notification_time\": \"2020-08-08 12:37:56\",\n      \"last_notification_user_id\": 7655,\n      \"notification_language_id\": 1,\n      \"subject\": \"Deadline\",\n      \"public_description\": \"This is a description\",\n      \"calendar_sync_include_context\": \"\",\n      \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n      \"org_id\": 5,\n      \"person_id\": 1101,\n      \"deal_id\": 300,\n      \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n      \"project_id\": null,\n      \"active_flag\": true,\n      \"update_time\": \"2020-08-08 12:37:56\",\n      \"update_user_id\": 5596,\n      \"gcal_event_id\": \"\",\n      \"google_calendar_id\": \"\",\n      \"google_calendar_etag\": \"\",\n      \"source_timezone\": \"\",\n      \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n      \"rec_rule_extension\": \"\",\n      \"rec_master_activity_id\": 1,\n      \"series\": [],\n      \"note\": \"A note for the activity\",\n      \"created_by_user_id\": 1234,\n      \"location_subpremise\": \"\",\n      \"location_street_number\": \"3\",\n      \"location_route\": \"Mustamäe tee\",\n      \"location_sublocality\": \"Kristiine\",\n      \"location_locality\": \"Tallinn\",\n      \"location_admin_area_level_1\": \"Harju maakond\",\n      \"location_admin_area_level_2\": \"\",\n      \"location_country\": \"Estonia\",\n      \"location_postal_code\": \"10616\",\n      \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n      \"attendees\": [\n        {\n          \"email_address\": \"attendee@pipedrivemail.com\",\n          \"is_organizer\": 0,\n          \"name\": \"Attendee\",\n          \"person_id\": 25312,\n          \"status\": \"noreply\",\n          \"user_id\": null\n        }\n      ],\n      \"participants\": [\n        {\n          \"person_id\": 17985,\n          \"primary_flag\": false\n        },\n        {\n          \"person_id\": 1101,\n          \"primary_flag\": true\n        }\n      ],\n      \"org_name\": \"Organization\",\n      \"person_name\": \"Person\",\n      \"deal_title\": \"Deal\",\n      \"owner_name\": \"Creator\",\n      \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n      \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n      \"assigned_to_user_id\": 1235,\n      \"file\": {\n        \"id\": \"376892,\",\n        \"clean_name\": \"Audio 10:55:07.m4a\",\n        \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n      }\n    },\n    \"next_activity\": null\n  },\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false,\n      \"next_start\": 100\n    }\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Org Name\",\n        \"people_count\": 1,\n        \"owner_id\": 123,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"user\": {\n      \"123\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true\n      }\n    },\n    \"picture\": {\n      \"1\": {\n        \"id\": 1,\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n        }\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"label\": \"<integer>\",\n  \"label_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visible_to\": \"<string>\",\n  \"Ut5\": -38799963.96768184,\n  \"sint_5_\": \"irure laborum\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Updates the properties of an organization."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"label\": \"<integer>\",\n  \"label_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visible_to\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 77,\n    \"owner_id\": {\n      \"id\": 10,\n      \"name\": \"Will Smith\",\n      \"email\": \"will.smith@pipedrive.com\",\n      \"has_pic\": 0,\n      \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n      \"active_flag\": true,\n      \"value\": 10\n    },\n    \"name\": \"Bolt\",\n    \"open_deals_count\": 1,\n    \"related_open_deals_count\": 2,\n    \"closed_deals_count\": 3,\n    \"related_closed_deals_count\": 1,\n    \"email_messages_count\": 2,\n    \"people_count\": 1,\n    \"activities_count\": 2,\n    \"done_activities_count\": 1,\n    \"undone_activities_count\": 0,\n    \"files_count\": 0,\n    \"notes_count\": 0,\n    \"followers_count\": 1,\n    \"won_deals_count\": 0,\n    \"related_won_deals_count\": 0,\n    \"lost_deals_count\": 0,\n    \"related_lost_deals_count\": 0,\n    \"active_flag\": true,\n    \"picture_id\": {\n      \"item_type\": \"person\",\n      \"item_id\": 25,\n      \"active_flag\": true,\n      \"add_time\": \"2020-09-08 08:17:52\",\n      \"update_time\": \"0000-00-00 00:00:00\",\n      \"added_by_user_id\": 967055,\n      \"pictures\": {\n        \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cf14ac8f269_128.jpg\",\n        \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb2ac8f269_512.jpg\"\n      },\n      \"value\": 101\n    },\n    \"country_code\": null,\n    \"first_char\": \"b\",\n    \"update_time\": \"2020-09-08 12:14:11\",\n    \"add_time\": \"2020-02-25 10:04:08\",\n    \"visible_to\": \"3\",\n    \"next_activity_date\": \"2019-11-29\",\n    \"next_activity_time\": \"11:30:00\",\n    \"next_activity_id\": 128,\n    \"last_activity_id\": 34,\n    \"last_activity_date\": \"2019-11-28\",\n    \"label\": 7,\n    \"label_ids\": [\n      7,\n      8\n    ],\n    \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n    \"address_subpremise\": \"\",\n    \"address_street_number\": \"3a\",\n    \"address_route\": \"Mustamäe tee\",\n    \"address_sublocality\": \"Kristiine\",\n    \"address_locality\": \"Tallinn\",\n    \"address_admin_area_level_1\": \"Harju maakond\",\n    \"address_admin_area_level_2\": \"\",\n    \"address_country\": \"Estonia\",\n    \"address_postal_code\": \"10616\",\n    \"address_formatted_address\": \"Mustamäe tee 3a, 10616 Tallinn, Estonia\",\n    \"owner_name\": \"John Doe\",\n    \"cc_email\": \"org@pipedrivemail.com\"\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Org Name\",\n        \"people_count\": 1,\n        \"owner_id\": 123,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"user\": {\n      \"123\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true\n      }\n    },\n    \"picture\": {\n      \"1\": {\n        \"id\": 1,\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n        }\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List activities associated with an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/activities?start=0&limit=<integer>&done=<number>&exclude=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"activities"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "done",
									"value": "<number>",
									"description": "Whether the activity is done or not. 0 = Not done, 1 = Done. If omitted returns both Done and Not done activities."
								},
								{
									"key": "exclude",
									"value": "<string>",
									"description": "A comma-separated string of activity IDs to exclude from result"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Lists activities associated with an organization. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Activities#getActivities\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/activities?org_id={id}</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/activities?start=0&limit=<integer>&done=<number>&exclude=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"activities"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "done",
											"value": "<number>"
										},
										{
											"key": "exclude",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 8,\n      \"company_id\": 22122,\n      \"user_id\": 1234,\n      \"done\": false,\n      \"type\": \"deadline\",\n      \"reference_type\": \"scheduler-service\",\n      \"reference_id\": 7,\n      \"conference_meeting_client\": \"871b8bc88d3a1202\",\n      \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n      \"conference_meeting_id\": \"17058746701\",\n      \"due_date\": \"2020-06-09\",\n      \"due_time\": \"10:00\",\n      \"duration\": \"01:00\",\n      \"busy_flag\": true,\n      \"add_time\": \"2020-06-08 12:37:56\",\n      \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n      \"last_notification_time\": \"2020-08-08 12:37:56\",\n      \"last_notification_user_id\": 7655,\n      \"notification_language_id\": 1,\n      \"subject\": \"Deadline\",\n      \"public_description\": \"This is a description\",\n      \"calendar_sync_include_context\": \"\",\n      \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n      \"org_id\": 5,\n      \"person_id\": 1101,\n      \"deal_id\": 300,\n      \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n      \"project_id\": null,\n      \"active_flag\": true,\n      \"update_time\": \"2020-08-08 12:37:56\",\n      \"update_user_id\": 5596,\n      \"gcal_event_id\": \"\",\n      \"google_calendar_id\": \"\",\n      \"google_calendar_etag\": \"\",\n      \"source_timezone\": \"\",\n      \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n      \"rec_rule_extension\": \"\",\n      \"rec_master_activity_id\": 1,\n      \"series\": [],\n      \"note\": \"A note for the activity\",\n      \"created_by_user_id\": 1234,\n      \"location_subpremise\": \"\",\n      \"location_street_number\": \"3\",\n      \"location_route\": \"Mustamäe tee\",\n      \"location_sublocality\": \"Kristiine\",\n      \"location_locality\": \"Tallinn\",\n      \"location_admin_area_level_1\": \"Harju maakond\",\n      \"location_admin_area_level_2\": \"\",\n      \"location_country\": \"Estonia\",\n      \"location_postal_code\": \"10616\",\n      \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n      \"attendees\": [\n        {\n          \"email_address\": \"attendee@pipedrivemail.com\",\n          \"is_organizer\": 0,\n          \"name\": \"Attendee\",\n          \"person_id\": 25312,\n          \"status\": \"noreply\",\n          \"user_id\": null\n        }\n      ],\n      \"participants\": [\n        {\n          \"person_id\": 17985,\n          \"primary_flag\": false\n        },\n        {\n          \"person_id\": 1101,\n          \"primary_flag\": true\n        }\n      ],\n      \"org_name\": \"Organization\",\n      \"person_name\": \"Person\",\n      \"deal_title\": \"Deal\",\n      \"owner_name\": \"Creator\",\n      \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n      \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n      \"assigned_to_user_id\": 1235,\n      \"file\": {\n        \"id\": \"376892,\",\n        \"clean_name\": \"Audio 10:55:07.m4a\",\n        \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"allOf\": [\n      {\n        \"activity_distribution\": {\n          \"8877\": {\n            \"activities\": {\n              \"call\": 2,\n              \"meeting\": 1\n            },\n            \"name\": \"Will Smith\",\n            \"activity_count\": 3,\n            \"share\": 100\n          }\n        }\n      },\n      {\n        \"pagination\": {\n          \"start\": 0,\n          \"limit\": 100,\n          \"more_items_in_collection\": true\n        }\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "List updates about organization field values",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/changelog?cursor=<string>&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"changelog"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Lists updates about field values of an organization."
					},
					"response": [
						{
							"name": "Get changelog of an organization",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/changelog?cursor=<string>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"changelog"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"field_key\": \"name\",\n      \"old_value\": \"Org 10\",\n      \"new_value\": \"Org 11\",\n      \"actor_user_id\": 26,\n      \"time\": \"2024-02-12 09:14:35\",\n      \"change_source\": \"app\",\n      \"change_source_user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36\",\n      \"is_bulk_update_flag\": false\n    },\n    {\n      \"field_key\": \"51c27e4a19c3bedd91162a9d446707c1f95174ea\",\n      \"old_value\": \"0\",\n      \"new_value\": \"20\",\n      \"actor_user_id\": 26,\n      \"time\": \"2024-02-12 09:10:12\",\n      \"change_source\": \"app\",\n      \"change_source_user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36\",\n      \"is_bulk_update_flag\": false\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"aWQ6NTQ0\"\n  }\n}"
						}
					]
				},
				{
					"name": "List deals associated with an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/deals?start=0&limit=<integer>&status=all_not_deleted&sort=<string>&only_primary_association=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"deals"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "status",
									"value": "all_not_deleted",
									"description": "Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys)."
								},
								{
									"key": "only_primary_association",
									"value": "<number>",
									"description": "If set, only deals that are directly associated to the organization are fetched. If not set (default), all deals are fetched that are either directly or indirectly related to the organization. Indirect relations include relations through custom, organization-type fields and through persons of the given organization."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Lists deals associated with an organization. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Deals#getDeals\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/deals?org_id={id}</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/deals?start=0&limit=<integer>&status=all_not_deleted&sort=<string>&only_primary_association=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"deals"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "status",
											"value": "all_not_deleted"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "only_primary_association",
											"value": "<number>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"creator_user_id\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 8877\n      },\n      \"user_id\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 8877\n      },\n      \"person_id\": {\n        \"active_flag\": true,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"37244499911\",\n            \"primary\": true\n          }\n        ],\n        \"value\": 1101\n      },\n      \"org_id\": {\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\",\n        \"value\": 5\n      },\n      \"stage_id\": 2,\n      \"title\": \"Deal One\",\n      \"value\": 5000,\n      \"currency\": \"EUR\",\n      \"add_time\": \"2019-05-29 04:21:51\",\n      \"update_time\": \"2019-11-28 16:19:50\",\n      \"stage_change_time\": \"2019-11-28 15:41:22\",\n      \"active\": true,\n      \"deleted\": false,\n      \"status\": \"open\",\n      \"probability\": null,\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": null,\n      \"last_activity_date\": null,\n      \"lost_reason\": null,\n      \"visible_to\": \"1\",\n      \"close_time\": null,\n      \"pipeline_id\": 1,\n      \"won_time\": \"2019-11-27 11:40:36\",\n      \"first_won_time\": \"2019-11-27 11:40:36\",\n      \"lost_time\": \"2019-11-27 11:40:36\",\n      \"products_count\": 0,\n      \"files_count\": 0,\n      \"notes_count\": 2,\n      \"followers_count\": 0,\n      \"email_messages_count\": 4,\n      \"activities_count\": 1,\n      \"done_activities_count\": 0,\n      \"undone_activities_count\": 1,\n      \"participants_count\": 1,\n      \"expected_close_date\": \"2019-06-29\",\n      \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n      \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n      \"label\": \"11\",\n      \"stage_order_nr\": 2,\n      \"person_name\": \"Person\",\n      \"org_name\": \"Organization\",\n      \"next_activity_subject\": \"Call\",\n      \"next_activity_type\": \"call\",\n      \"next_activity_duration\": \"00:30:00\",\n      \"next_activity_note\": \"Note content\",\n      \"formatted_value\": \"€5,000\",\n      \"weighted_value\": 5000,\n      \"formatted_weighted_value\": \"€5,000\",\n      \"weighted_value_currency\": \"EUR\",\n      \"rotten_time\": null,\n      \"owner_name\": \"Creator\",\n      \"cc_email\": \"company+deal1@pipedrivemail.com\",\n      \"org_hidden\": false,\n      \"person_hidden\": false\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"8877\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"organization\": {\n      \"5\": {\n        \"id\": 5,\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"person\": {\n      \"1101\": {\n        \"active_flag\": true,\n        \"id\": 1101,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"3421787767\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"stage\": {\n      \"2\": {\n        \"id\": 2,\n        \"company_id\": 123,\n        \"order_nr\": 1,\n        \"name\": \"Stage Name\",\n        \"active_flag\": true,\n        \"deal_probability\": 100,\n        \"pipeline_id\": 1,\n        \"rotten_flag\": false,\n        \"rotten_days\": null,\n        \"add_time\": \"2015-12-08 13:54:06\",\n        \"update_time\": \"2015-12-08 13:54:06\",\n        \"pipeline_name\": \"Pipeline\",\n        \"pipeline_deal_probability\": true\n      }\n    },\n    \"pipeline\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Pipeline\",\n        \"url_title\": \"Pipeline\",\n        \"order_nr\": 0,\n        \"active\": true,\n        \"deal_probability\": true,\n        \"add_time\": \"2015-12-08 10:00:24\",\n        \"update_time\": \"2015-12-08 10:00:24\"\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List files attached to an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/files?start=0&limit=<integer>&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"files"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page. Please note that a maximum value of 100 is allowed."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Supported fields: `id`, `update_time`"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Lists files associated with an organization."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/files?start=0&limit=<integer>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"files"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"user_id\": 8877,\n      \"deal_id\": 1,\n      \"person_id\": 1,\n      \"org_id\": 1480,\n      \"product_id\": 1,\n      \"activity_id\": 1,\n      \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n      \"log_id\": null,\n      \"add_time\": \"2020-09-16 11:19:36\",\n      \"update_time\": \"2020-09-16 11:19:36\",\n      \"file_name\": \"95781006_794143070992462_4330873630616453120_n_60817458877506f9eb74d03e5ef9ba061915b797998.jpg\",\n      \"file_type\": \"img\",\n      \"file_size\": 95116,\n      \"active_flag\": true,\n      \"inline_flag\": false,\n      \"remote_location\": \"s3\",\n      \"remote_id\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n      \"cid\": \"\",\n      \"s3_bucket\": \"\",\n      \"mail_message_id\": \"\",\n      \"mail_template_id\": \"\",\n      \"deal_name\": \"nice deal\",\n      \"person_name\": \"\",\n      \"people_name\": \"\",\n      \"org_name\": \"Pipedrive Inc.\",\n      \"product_name\": \"\",\n      \"lead_name\": \"nice lead\",\n      \"url\": \"https://app.pipedrive.com/api/v1/files/304/download\",\n      \"name\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n      \"description\": \"\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List updates about an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/flow?start=0&limit=<integer>&all_changes=<string>&items=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"flow"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "all_changes",
									"value": "<string>",
									"description": "Whether to show custom field updates or not. 1 = Include custom field changes. If omitted, returns changes without custom field updates."
								},
								{
									"key": "items",
									"value": "<string>",
									"description": "A comma-separated string for filtering out item specific updates. (Possible values - activity, plannedActivity, note, file, change, deal, follower, participant, mailMessage, mailMessageWithAttachment, invoice, activityFile, document)."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Lists updates about an organization."
					},
					"response": [
						{
							"name": "Get the organization updates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/flow?start=0&limit=<integer>&all_changes=<string>&items=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"flow"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "all_changes",
											"value": "<string>"
										},
										{
											"key": "items",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"object\": \"organizationChange\",\n      \"timestamp\": \"2020-09-15 11:55:14\",\n      \"data\": {\n        \"id\": 3694,\n        \"item_id\": 1480,\n        \"user_id\": 9271535,\n        \"field_key\": \"owner_id\",\n        \"old_value\": 9271535,\n        \"new_value\": 8877,\n        \"is_bulk_update_flag\": null,\n        \"log_time\": \"2020-09-15 11:55:14\",\n        \"change_source\": \"app\",\n        \"change_source_user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML like Gecko) Chrome/84.0.4147.135 Safari/537.36\",\n        \"additional_data\": {\n          \"new_value_formatted\": \"Will Smith\",\n          \"old_value_formatted\": \"Robert Smith\"\n        }\n      }\n    },\n    {\n      \"object\": \"activity\",\n      \"timestamp\": \"2020-08-07 08:15:00\",\n      \"data\": {\n        \"id\": 8,\n        \"company_id\": 22122,\n        \"user_id\": 1234,\n        \"done\": false,\n        \"type\": \"deadline\",\n        \"reference_type\": \"scheduler-service\",\n        \"reference_id\": 7,\n        \"conference_meeting_client\": \"871b8bc88d3a1202\",\n        \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n        \"conference_meeting_id\": \"17058746701\",\n        \"due_date\": \"2020-06-09\",\n        \"due_time\": \"10:00\",\n        \"duration\": \"01:00\",\n        \"busy_flag\": true,\n        \"add_time\": \"2020-06-08 12:37:56\",\n        \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n        \"last_notification_time\": \"2020-08-08 12:37:56\",\n        \"last_notification_user_id\": 7655,\n        \"notification_language_id\": 1,\n        \"subject\": \"Deadline\",\n        \"public_description\": \"This is a description\",\n        \"calendar_sync_include_context\": \"\",\n        \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n        \"org_id\": 5,\n        \"person_id\": 1101,\n        \"deal_id\": 300,\n        \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n        \"project_id\": null,\n        \"active_flag\": true,\n        \"update_time\": \"2020-08-08 12:37:56\",\n        \"update_user_id\": 5596,\n        \"gcal_event_id\": \"\",\n        \"google_calendar_id\": \"\",\n        \"google_calendar_etag\": \"\",\n        \"source_timezone\": \"\",\n        \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n        \"rec_rule_extension\": \"\",\n        \"rec_master_activity_id\": 1,\n        \"series\": [],\n        \"note\": \"A note for the activity\",\n        \"created_by_user_id\": 1234,\n        \"location_subpremise\": \"\",\n        \"location_street_number\": \"3\",\n        \"location_route\": \"Mustamäe tee\",\n        \"location_sublocality\": \"Kristiine\",\n        \"location_locality\": \"Tallinn\",\n        \"location_admin_area_level_1\": \"Harju maakond\",\n        \"location_admin_area_level_2\": \"\",\n        \"location_country\": \"Estonia\",\n        \"location_postal_code\": \"10616\",\n        \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n        \"attendees\": [\n          {\n            \"email_address\": \"attendee@pipedrivemail.com\",\n            \"is_organizer\": 0,\n            \"name\": \"Attendee\",\n            \"person_id\": 25312,\n            \"status\": \"noreply\",\n            \"user_id\": null\n          }\n        ],\n        \"participants\": [\n          {\n            \"person_id\": 17985,\n            \"primary_flag\": false\n          },\n          {\n            \"person_id\": 1101,\n            \"primary_flag\": true\n          }\n        ],\n        \"org_name\": \"Organization\",\n        \"person_name\": \"Person\",\n        \"deal_title\": \"Deal\",\n        \"owner_name\": \"Creator\",\n        \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n        \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n        \"assigned_to_user_id\": 1235,\n        \"file\": {\n          \"id\": \"376892,\",\n          \"clean_name\": \"Audio 10:55:07.m4a\",\n          \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n        }\n      }\n    },\n    {\n      \"object\": \"file\",\n      \"timestamp\": \"2020-08-10 11:52:26\",\n      \"data\": {\n        \"id\": 1,\n        \"user_id\": 8877,\n        \"deal_id\": 1,\n        \"person_id\": 1,\n        \"org_id\": 1480,\n        \"product_id\": 1,\n        \"activity_id\": 1,\n        \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n        \"log_id\": null,\n        \"add_time\": \"2020-09-16 11:19:36\",\n        \"update_time\": \"2020-09-16 11:19:36\",\n        \"file_name\": \"95781006_794143070992462_4330873630616453120_n_60817458877506f9eb74d03e5ef9ba061915b797998.jpg\",\n        \"file_type\": \"img\",\n        \"file_size\": 95116,\n        \"active_flag\": true,\n        \"inline_flag\": false,\n        \"remote_location\": \"s3\",\n        \"remote_id\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n        \"cid\": \"\",\n        \"s3_bucket\": \"\",\n        \"mail_message_id\": \"\",\n        \"mail_template_id\": \"\",\n        \"deal_name\": \"nice deal\",\n        \"person_name\": \"\",\n        \"people_name\": \"\",\n        \"org_name\": \"Pipedrive Inc.\",\n        \"product_name\": \"\",\n        \"lead_name\": \"nice lead\",\n        \"url\": \"https://app.pipedrive.com/api/v1/files/304/download\",\n        \"name\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n        \"description\": \"\"\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  },\n  \"related_objects\": {\n    \"allOf\": [\n      {\n        \"user\": {\n          \"123\": {\n            \"id\": 123,\n            \"name\": \"Jane Doe\",\n            \"email\": \"jane@pipedrive.com\",\n            \"has_pic\": 1,\n            \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n            \"active_flag\": true\n          }\n        }\n      },\n      {\n        \"organization\": {\n          \"1\": {\n            \"id\": 1,\n            \"name\": \"Org Name\",\n            \"people_count\": 1,\n            \"owner_id\": 123,\n            \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n            \"active_flag\": true,\n            \"cc_email\": \"org@pipedrivemail.com\"\n          }\n        }\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "List followers of an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"followers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Lists the followers of an organization."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/followers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"followers"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"user_id\": 100,\n      \"id\": 123,\n      \"org_id\": 77,\n      \"add_time\": \"2020-09-08 08:17:52\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false,\n      \"next_start\": 100\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a follower to an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"followers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Adds a follower to an organization."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/followers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"followers"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"user_id\": 100,\n    \"id\": 123,\n    \"org_id\": 77,\n    \"add_time\": \"2020-09-08 08:17:52\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a follower from an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/followers/:follower_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"followers",
								":follower_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								},
								{
									"key": "follower_id",
									"value": "<integer>",
									"description": "(Required) The ID of the relationship between the follower and the organization"
								}
							]
						},
						"description": "Deletes a follower from an organization. You can retrieve the `follower_id` from the <a href=\"https://developers.pipedrive.com/docs/api/v1/Organizations#getOrganizationFollowers\">List followers of an organization</a> endpoint."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/followers/:follower_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"followers",
										":follower_id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										},
										{
											"key": "follower_id",
											"value": "<integer>",
											"description": "(Required) The ID of the relationship between the follower and the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123\n  }\n}"
						}
					]
				},
				{
					"name": "List mail messages associated with an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/mailMessages?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"mailMessages"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Lists mail messages associated with an organization."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/mailMessages?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"mailMessages"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"object\": \"mailMessage\",\n      \"timestamp\": \"2020-09-16 13:38:17\",\n      \"data\": {\n        \"id\": 1,\n        \"from\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"to\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"cc\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"bcc\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"body_url\": \"https://example.org\",\n        \"nylas_id\": \"8cfw8n7l4iy24xxxxxxxxx\",\n        \"account_id\": \"ao5gpry0zykr1xxxxxxxxx\",\n        \"user_id\": 1,\n        \"mail_thread_id\": 1,\n        \"subject\": \"test subject\",\n        \"snippet\": \"test subject\",\n        \"mail_tracking_status\": \"opened\",\n        \"mail_link_tracking_enabled_flag\": 0,\n        \"read_flag\": 1,\n        \"draft\": \"\",\n        \"s3_bucket\": \"pipedrive-mail-live-fr\",\n        \"s3_bucket_path\": \"e9cf-6081745/77777/nylas/111/1111/body\",\n        \"draft_flag\": 0,\n        \"synced_flag\": 1,\n        \"deleted_flag\": 0,\n        \"external_deleted_flag\": false,\n        \"has_body_flag\": 1,\n        \"sent_flag\": 0,\n        \"sent_from_pipedrive_flag\": 0,\n        \"smart_bcc_flag\": 0,\n        \"message_time\": \"2019-11-14T06:02:06.000Z\",\n        \"add_time\": \"2019-11-14T06:02:06.000Z\",\n        \"update_time\": \"2019-11-14T07:15:49.000Z\",\n        \"has_attachments_flag\": 1,\n        \"has_inline_attachments_flag\": 0,\n        \"has_real_attachments_flag\": 1,\n        \"mua_message_id\": \"8cfw8n7l4iy24lfhnexxxxxx-0@mailer.nylas.com\",\n        \"template_id\": 1,\n        \"item_type\": \"mailMessage\",\n        \"timestamp\": \"2020-09-16T13:37:50.000Z\",\n        \"company_id\": 6081745\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Merge two organizations",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merge_with_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/merge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"merge"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Merges an organization with another organization. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/merging-two-organizations\" target=\"_blank\" rel=\"noopener noreferrer\">merging two organizations</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"merge_with_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/merge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"merge"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123\n  }\n}"
						}
					]
				},
				{
					"name": "List permitted users",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/permittedUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"permittedUsers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "List users permitted to access an organization."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/permittedUsers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"permittedUsers"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    123,\n    777\n  ]\n}"
						}
					]
				},
				{
					"name": "List persons of an organization",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:id/persons?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":id",
								"persons"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the organization"
								}
							]
						},
						"description": "Lists persons associated with an organization.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Persons#getPersons\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/persons?org_id={id}</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id/persons?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id",
										"persons"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the organization"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"company_id\": 12,\n      \"owner_id\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true,\n        \"value\": 123\n      },\n      \"org_id\": {\n        \"name\": \"Org Name\",\n        \"people_count\": 1,\n        \"owner_id\": 123,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\",\n        \"value\": 1234\n      },\n      \"name\": \"Will Smith\",\n      \"first_name\": \"Will\",\n      \"last_name\": \"Smith\",\n      \"open_deals_count\": 2,\n      \"related_open_deals_count\": 2,\n      \"closed_deals_count\": 3,\n      \"related_closed_deals_count\": 3,\n      \"participant_open_deals_count\": 1,\n      \"participant_closed_deals_count\": 1,\n      \"email_messages_count\": 1,\n      \"activities_count\": 1,\n      \"done_activities_count\": 1,\n      \"undone_activities_count\": 2,\n      \"files_count\": 2,\n      \"notes_count\": 2,\n      \"followers_count\": 3,\n      \"won_deals_count\": 3,\n      \"related_won_deals_count\": 3,\n      \"lost_deals_count\": 1,\n      \"related_lost_deals_count\": 1,\n      \"active_flag\": true,\n      \"phone\": [\n        {\n          \"value\": \"12345\",\n          \"primary\": true,\n          \"label\": \"work\"\n        }\n      ],\n      \"email\": [\n        {\n          \"value\": \"12345@email.com\",\n          \"primary\": true,\n          \"label\": \"work\"\n        }\n      ],\n      \"primary_email\": \"12345@email.com\",\n      \"first_char\": \"w\",\n      \"update_time\": \"2020-05-08 05:30:20\",\n      \"add_time\": \"2017-10-18 13:23:07\",\n      \"visible_to\": \"3\",\n      \"marketing_status\": \"no_consent\",\n      \"picture_id\": {\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n        },\n        \"value\": 4\n      },\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": 34,\n      \"last_activity_date\": \"2019-11-28\",\n      \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n      \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n      \"label\": 1,\n      \"label_ids\": [\n        1,\n        2,\n        3\n      ],\n      \"org_name\": \"Organization name\",\n      \"owner_name\": \"Jane Doe\",\n      \"cc_email\": \"org@pipedrivemail.com\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  },\n  \"related_objects\": {\n    \"allOf\": [\n      {\n        \"organization\": {\n          \"1\": {\n            \"id\": 1,\n            \"name\": \"Org Name\",\n            \"people_count\": 1,\n            \"owner_id\": 123,\n            \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n            \"active_flag\": true,\n            \"cc_email\": \"org@pipedrivemail.com\"\n          }\n        }\n      },\n      {\n        \"user\": {\n          \"123\": {\n            \"id\": 123,\n            \"name\": \"Jane Doe\",\n            \"email\": \"jane@pipedrive.com\",\n            \"has_pic\": 1,\n            \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n            \"active_flag\": true\n          }\n        }\n      }\n    ]\n  }\n}"
						}
					]
				}
			],
			"description": "Organizations are companies and other kinds of organizations you are making deals with. Persons can be associated with organizations so that each organization can contain one or more persons.\n"
		},
		{
			"name": "PermissionSets",
			"item": [
				{
					"name": "Get all permission sets",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/permissionSets?app=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissionSets"
							],
							"query": [
								{
									"key": "app",
									"value": "<string>",
									"description": "The app to filter the permission sets by"
								}
							]
						},
						"description": "Returns data about all permission sets."
					},
					"response": [
						{
							"name": "Get all permissions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissionSets?app=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissionSets"
									],
									"query": [
										{
											"key": "app",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"62cc4d7f-4038-4352-abf3-a8c1c822b631\",\n      \"name\": \"Deals admin\",\n      \"description\": \"See and edit all sales data (deals, leads), manage company-level sales setup (such as lost reasons and pipelines)\",\n      \"app\": \"sales\",\n      \"type\": \"admin\",\n      \"assignment_count\": 1\n    },\n    {\n      \"id\": \"f07d229d-088a-4144-a40f-1fe64295d180\",\n      \"name\": \"Deals regular user\",\n      \"description\": \"Access to sales data (deals, leads) and available actions may be limited depending on the custom permission setup. This set is the default for new users.\",\n      \"app\": \"sales\",\n      \"type\": \"regular\",\n      \"assignment_count\": 3\n    },\n    {\n      \"id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\",\n      \"name\": \"Global admin\",\n      \"description\": \"See and edit all cross-product data (such as contacts, activities, reports) and access related features\",\n      \"app\": \"global\",\n      \"type\": \"admin\",\n      \"assignment_count\": 1\n    },\n    {\n      \"id\": \"ec8a42e5-1842-490d-9113-b3a3b4b1c0a9\",\n      \"name\": \"Global regular user\",\n      \"description\": \"Access to cross-product data (such as contacts, activities, reports) and available actions may be limited depending on the custom permission setup. This set is the default for new users.\",\n      \"app\": \"global\",\n      \"type\": \"regular\",\n      \"assignment_count\": 2\n    },\n    {\n      \"id\": \"982c5ce5-b8ba-4b47-b102-9da024f4b990\",\n      \"name\": \"Account settings\",\n      \"description\": \"Access company account level features and setup (billing, security center, company settings, user management)\",\n      \"app\": \"account_settings\",\n      \"type\": \"admin\",\n      \"assignment_count\": 1\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get one permission set",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/permissionSets/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissionSets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The ID of the permission set"
								}
							]
						},
						"description": "Returns data about a specific permission set."
					},
					"response": [
						{
							"name": "The permission set of a specific user ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissionSets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissionSets",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the permission set"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"f07d229d-088a-4144-a40f-1fe64295d180\",\n      \"name\": \"Deals regular user\",\n      \"description\": \"Access to sales data (deals, leads) and available actions may be limited depending on the custom permission setup. This set is the default for new users.\",\n      \"app\": \"sales\",\n      \"assignment_count\": 3,\n      \"contents\": [\n        \"can_add_products\",\n        \"can_bulk_edit_items\",\n        \"can_change_visibility_of_items\",\n        \"can_delete_activities\",\n        \"can_edit_products\",\n        \"can_edit_shared_filters\",\n        \"can_export_data_from_lists\",\n        \"can_see_deals_list_summary\",\n        \"can_see_other_users\",\n        \"can_share_filters\",\n        \"can_use_api\",\n        \"can_use_email_tracking\"\n      ]\n    }\n  ]\n}"
						},
						{
							"name": "If the user ID has no assignments, then it will return NotFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissionSets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissionSets",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the permission set"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "List permission set assignments",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/permissionSets/:id/assignments?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissionSets",
								":id",
								"assignments"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The ID of the permission set"
								}
							]
						},
						"description": "Returns the list of assignments for a permission set."
					},
					"response": [
						{
							"name": "The assignments of a specific user ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissionSets/:id/assignments?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissionSets",
										":id",
										"assignments"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the permission set"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"user_id\": 10,\n      \"permission_set_id\": \"f07d229d-088a-4144-a40f-1fe64295d180\",\n      \"name\": \"Deals regular user\"\n    }\n  ]\n}"
						},
						{
							"name": "If the user ID has no assignments, then it will return NotFound",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permissionSets/:id/assignments?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permissionSets",
										":id",
										"assignments"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the permission set"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			],
			"description": "Permission sets define what users in the account can do: which actions they are allowed to perform and which features they can access. Permission sets are app-specific, where apps are large parts of functionality, e.g., sales app, which allows accessing sales data, global permissions, which oversee cross-product features (for example contacts, insights, products) or account settings, which provides access to billing, user management, company settings and security center. Some permission sets with types such as admin and regular are pre-created for the account, while other custom ones can be created by users (depending on the tier the account is on).\n"
		},
		{
			"name": "PersonFields",
			"item": [
				{
					"name": "Get all person fields",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/personFields?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"personFields"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Returns data about all person fields.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personFields?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personFields"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"key\": \"title\",\n      \"name\": \"Title\",\n      \"order_nr\": 2,\n      \"field_type\": \"varchar\",\n      \"add_time\": \"2019-02-04 13:58:03\",\n      \"update_time\": \"2019-02-04 13:58:03\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": false,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": true,\n      \"add_visible_flag\": true,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"options\": null,\n      \"mandatory_flag\": true\n    },\n    {\n      \"id\": 2,\n      \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n      \"name\": \"Customer Type\",\n      \"order_nr\": 1,\n      \"field_type\": \"enum\",\n      \"add_time\": \"2019-02-04 13:58:03\",\n      \"update_time\": \"2019-02-04 13:58:03\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": true,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": true,\n      \"add_visible_flag\": false,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"options\": [\n        {\n          \"id\": 190,\n          \"label\": \"Private person\"\n        },\n        {\n          \"id\": 191,\n          \"label\": \"Company\"\n        },\n        {\n          \"id\": 192,\n          \"label\": \"Government\"\n        }\n      ],\n      \"mandatory_flag\": true\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a new person field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"field_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/personFields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"personFields"
							]
						},
						"description": "Adds a new person field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"field_type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/personFields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personFields"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n    \"name\": \"Customer Type\",\n    \"order_nr\": 1,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-02-04 13:58:03\",\n    \"update_time\": \"2019-02-04 13:58:03\",\n    \"last_updated_by_user_id\": 1,\n    \"created_by_user_id\": 1,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": false,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 190,\n        \"label\": \"Private person\"\n      },\n      {\n        \"id\": 191,\n        \"label\": \"Company\"\n      },\n      {\n        \"id\": 192,\n        \"label\": \"Government\"\n      }\n    ],\n    \"mandatory_flag\": true\n  }\n}"
						}
					]
				},
				{
					"name": "Delete multiple person fields in bulk",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/personFields?ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"personFields"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) The comma-separated field IDs to delete"
								}
							]
						},
						"description": "Marks multiple fields as deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personFields?ids=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personFields"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": [\n      123,\n      456\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get one person field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/personFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"personFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the field"
								}
							]
						},
						"description": "Returns data about a specific person field."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personFields/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personFields",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n    \"name\": \"Customer Type\",\n    \"order_nr\": 1,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-02-04 13:58:03\",\n    \"update_time\": \"2019-02-04 13:58:03\",\n    \"last_updated_by_user_id\": 1,\n    \"created_by_user_id\": 1,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": false,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 190,\n        \"label\": \"Private person\"\n      },\n      {\n        \"id\": 191,\n        \"label\": \"Company\"\n      },\n      {\n        \"id\": 192,\n        \"label\": \"Government\"\n      }\n    ],\n    \"mandatory_flag\": true\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a person field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/personFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"personFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the field"
								}
							]
						},
						"description": "Marks a field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personFields/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personFields",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 123\n  }\n}"
						}
					]
				},
				{
					"name": "Update a person field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/personFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"personFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the field"
								}
							]
						},
						"description": "Updates a person field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields' values</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"add_visible_flag\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/personFields/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personFields",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"key\": \"9dc80c50d78a15643bfc4ca79d76156a73a1ca0e\",\n    \"name\": \"Customer Type\",\n    \"order_nr\": 1,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-02-04 13:58:03\",\n    \"update_time\": \"2019-02-04 13:58:03\",\n    \"last_updated_by_user_id\": 1,\n    \"created_by_user_id\": 1,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": false,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 190,\n        \"label\": \"Private person\"\n      },\n      {\n        \"id\": 191,\n        \"label\": \"Company\"\n      },\n      {\n        \"id\": 192,\n        \"label\": \"Government\"\n      }\n    ],\n    \"mandatory_flag\": true\n  }\n}"
						}
					]
				}
			],
			"description": "Person fields represent the near-complete schema for a person in the context of the company of the authorized user. Each company can have a different schema for their persons, with various custom fields. In the context of using person fields as a schema for defining the data fields of a person, it must be kept in mind that some types of custom fields can have additional data fields which are not separate person fields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of person fields. For example, if there is a monetary field with the key `ffk9s9` stored on the account, `ffk9s9` would hold the numeric value of the field, and `ffk9s9_currency` would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one person and list its keys.\n"
		},
		{
			"name": "Persons",
			"item": [
				{
					"name": "Delete multiple persons in bulk",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons?ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) The comma-separated IDs that will be deleted"
								}
							]
						},
						"description": "Marks multiple persons as deleted. After 30 days, the persons will be permanently deleted. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Persons#deletePerson\" target=\"_blank\" rel=\"noopener noreferrer\">DELETE /api/v2/persons/{id}</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons?ids=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": [\n      123,\n      456\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get all persons",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons?user_id=<integer>&filter_id=<integer>&first_char=<string>&start=0&limit=<integer>&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons"
							],
							"query": [
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "If supplied, only persons owned by the given user will be returned. However, `filter_id` takes precedence over `user_id` when both are supplied."
								},
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "The ID of the filter to use"
								},
								{
									"key": "first_char",
									"value": "<string>",
									"description": "If supplied, only persons whose name starts with the specified letter will be returned (case-insensitive)"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys)."
								}
							]
						},
						"description": "Returns all persons."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons?user_id=<integer>&filter_id=<integer>&first_char=<string>&start=0&limit=<integer>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "first_char",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"company_id\": 12,\n      \"owner_id\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true,\n        \"value\": 123\n      },\n      \"org_id\": {\n        \"name\": \"Org Name\",\n        \"people_count\": 1,\n        \"owner_id\": 123,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\",\n        \"value\": 1234\n      },\n      \"name\": \"Will Smith\",\n      \"first_name\": \"Will\",\n      \"last_name\": \"Smith\",\n      \"open_deals_count\": 2,\n      \"related_open_deals_count\": 2,\n      \"closed_deals_count\": 3,\n      \"related_closed_deals_count\": 3,\n      \"participant_open_deals_count\": 1,\n      \"participant_closed_deals_count\": 1,\n      \"email_messages_count\": 1,\n      \"activities_count\": 1,\n      \"done_activities_count\": 1,\n      \"undone_activities_count\": 2,\n      \"files_count\": 2,\n      \"notes_count\": 2,\n      \"followers_count\": 3,\n      \"won_deals_count\": 3,\n      \"related_won_deals_count\": 3,\n      \"lost_deals_count\": 1,\n      \"related_lost_deals_count\": 1,\n      \"active_flag\": true,\n      \"phone\": [\n        {\n          \"value\": \"12345\",\n          \"primary\": true,\n          \"label\": \"work\"\n        }\n      ],\n      \"email\": [\n        {\n          \"value\": \"12345@email.com\",\n          \"primary\": true,\n          \"label\": \"work\"\n        }\n      ],\n      \"primary_email\": \"12345@email.com\",\n      \"first_char\": \"w\",\n      \"update_time\": \"2020-05-08 05:30:20\",\n      \"add_time\": \"2017-10-18 13:23:07\",\n      \"visible_to\": \"3\",\n      \"marketing_status\": \"no_consent\",\n      \"picture_id\": {\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n        },\n        \"value\": 4\n      },\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": 34,\n      \"last_activity_date\": \"2019-11-28\",\n      \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n      \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n      \"label\": 1,\n      \"label_ids\": [\n        1,\n        2,\n        3\n      ],\n      \"org_name\": \"Organization name\",\n      \"owner_name\": \"Jane Doe\",\n      \"cc_email\": \"org@pipedrivemail.com\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false,\n      \"next_start\": 100\n    }\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Org Name\",\n        \"people_count\": 1,\n        \"owner_id\": 123,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"user\": {\n      \"123\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true\n      }\n    },\n    \"picture\": {\n      \"1\": {\n        \"id\": 1,\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n        }\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"email\": [\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"phone\": [\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"label\": \"<integer>\",\n  \"label_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visible_to\": \"<string>\",\n  \"marketing_status\": \"<string>\",\n  \"add_time\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/persons",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons"
							]
						},
						"description": "Adds a new person. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the personFields and look for `key` values.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also accept and return the `data.marketing_status` field."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"email\": [\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"phone\": [\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"label\": \"<integer>\",\n  \"label_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visible_to\": \"<string>\",\n  \"marketing_status\": \"<string>\",\n  \"add_time\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/persons",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 12,\n    \"owner_id\": {\n      \"id\": 123,\n      \"name\": \"Jane Doe\",\n      \"email\": \"jane@pipedrive.com\",\n      \"has_pic\": 1,\n      \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n      \"active_flag\": true,\n      \"value\": 123\n    },\n    \"org_id\": {\n      \"name\": \"Org Name\",\n      \"people_count\": 1,\n      \"owner_id\": 123,\n      \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n      \"active_flag\": true,\n      \"cc_email\": \"org@pipedrivemail.com\",\n      \"value\": 1234\n    },\n    \"name\": \"Will Smith\",\n    \"first_name\": \"Will\",\n    \"last_name\": \"Smith\",\n    \"open_deals_count\": 2,\n    \"related_open_deals_count\": 2,\n    \"closed_deals_count\": 3,\n    \"related_closed_deals_count\": 3,\n    \"participant_open_deals_count\": 1,\n    \"participant_closed_deals_count\": 1,\n    \"email_messages_count\": 1,\n    \"activities_count\": 1,\n    \"done_activities_count\": 1,\n    \"undone_activities_count\": 2,\n    \"files_count\": 2,\n    \"notes_count\": 2,\n    \"followers_count\": 3,\n    \"won_deals_count\": 3,\n    \"related_won_deals_count\": 3,\n    \"lost_deals_count\": 1,\n    \"related_lost_deals_count\": 1,\n    \"active_flag\": true,\n    \"phone\": [\n      {\n        \"value\": \"12345\",\n        \"primary\": true,\n        \"label\": \"work\"\n      }\n    ],\n    \"email\": [\n      {\n        \"value\": \"12345@email.com\",\n        \"primary\": true,\n        \"label\": \"work\"\n      }\n    ],\n    \"primary_email\": \"12345@email.com\",\n    \"first_char\": \"w\",\n    \"update_time\": \"2020-05-08 05:30:20\",\n    \"add_time\": \"2017-10-18 13:23:07\",\n    \"visible_to\": \"3\",\n    \"marketing_status\": \"no_consent\",\n    \"picture_id\": {\n      \"item_type\": \"person\",\n      \"item_id\": 25,\n      \"active_flag\": true,\n      \"add_time\": \"2020-09-08 08:17:52\",\n      \"update_time\": \"0000-00-00 00:00:00\",\n      \"added_by_user_id\": 967055,\n      \"pictures\": {\n        \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n        \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n      },\n      \"value\": 4\n    },\n    \"next_activity_date\": \"2019-11-29\",\n    \"next_activity_time\": \"11:30:00\",\n    \"next_activity_id\": 128,\n    \"last_activity_id\": 34,\n    \"last_activity_date\": \"2019-11-28\",\n    \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n    \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n    \"label\": 1,\n    \"label_ids\": [\n      1,\n      2,\n      3\n    ],\n    \"org_name\": \"Organization name\",\n    \"owner_name\": \"Jane Doe\",\n    \"cc_email\": \"org@pipedrivemail.com\"\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"123\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get all persons collection",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/collection?cursor=<string>&limit=<integer>&since=<string>&until=<string>&owner_id=<integer>&first_char=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								"collection"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed."
								},
								{
									"key": "since",
									"value": "<string>",
									"description": "The time boundary that points to the start of the range of data. Datetime in ISO 8601 format. E.g. 2022-11-01 08:55:59. Operates on the `update_time` field."
								},
								{
									"key": "until",
									"value": "<string>",
									"description": "The time boundary that points to the end of the range of data. Datetime in ISO 8601 format. E.g. 2022-11-01 08:55:59. Operates on the `update_time` field."
								},
								{
									"key": "owner_id",
									"value": "<integer>",
									"description": "If supplied, only persons owned by the given user will be returned"
								},
								{
									"key": "first_char",
									"value": "<string>",
									"description": "If supplied, only persons whose name starts with the specified letter will be returned (case-insensitive)"
								}
							]
						},
						"description": "Returns all persons. Please note that only global admins (those with global permissions) can access this endpoint. Users with regular permissions will receive a 403 response. Read more about global permissions <a href=\"https://support.pipedrive.com/en/article/global-user-management\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Persons#getPersons\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/persons</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/collection?cursor=<string>&limit=100&since=<string>&until=<string>&owner_id=<integer>&first_char=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										"collection"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "since",
											"value": "<string>"
										},
										{
											"key": "until",
											"value": "<string>"
										},
										{
											"key": "owner_id",
											"value": "<integer>"
										},
										{
											"key": "first_char",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"active_flag\": true,\n      \"owner_id\": 123,\n      \"org_id\": 1234,\n      \"name\": \"Will Smith\",\n      \"phone\": [\n        {\n          \"value\": \"12345\",\n          \"primary\": true,\n          \"label\": \"work\"\n        },\n        {\n          \"value\": \"56789\",\n          \"primary\": false,\n          \"label\": \"home\"\n        }\n      ],\n      \"email\": [\n        {\n          \"value\": \"12345@email.com\",\n          \"primary\": true,\n          \"label\": \"work\"\n        }\n      ],\n      \"update_time\": \"2023-02-08 05:30:20\",\n      \"delete_time\": null,\n      \"add_time\": \"2023-01-08 05:30:20\",\n      \"visible_to\": \"3\",\n      \"picture_id\": 12,\n      \"label\": 1,\n      \"cc_email\": \"org@pipedrivemail.com\"\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"eyJhY3Rpdml0aWVzIjoyN30\"\n  }\n}"
						},
						{
							"name": "Forbidden response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/collection?cursor=<string>&limit=100&since=<string>&until=<string>&owner_id=<integer>&first_char=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										"collection"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "since",
											"value": "<string>"
										},
										{
											"key": "until",
											"value": "<string>"
										},
										{
											"key": "owner_id",
											"value": "<integer>"
										},
										{
											"key": "first_char",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You do not have permissions to do this.\",\n  \"error_info\": \"Please check developers.pipedrive.com\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Search persons",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/search?term=<string>&fields=<string>&exact_match=<boolean>&organization_id=<integer>&include_fields=<string>&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								"search"
							],
							"query": [
								{
									"key": "term",
									"value": "<string>",
									"description": "(Required) The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded."
								},
								{
									"key": "fields",
									"value": "<string>",
									"description": "A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: `address`, `varchar`, `text`, `varchar_auto`, `double`, `monetary` and `phone`. Read more about searching by custom fields <a href=\"https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>."
								},
								{
									"key": "exact_match",
									"value": "<boolean>",
									"description": "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
								},
								{
									"key": "organization_id",
									"value": "<integer>",
									"description": "Will filter persons by the provided organization ID. The upper limit of found persons associated with the organization is 2000."
								},
								{
									"key": "include_fields",
									"value": "<string>",
									"description": "Supports including optional fields in the results which are not provided by default"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter."
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Searches all persons by name, email, phone, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found persons can be filtered by organization ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/search?term=<string>&fields=<string>&exact_match=<boolean>&organization_id=<integer>&include_fields=<string>&start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										"search"
									],
									"query": [
										{
											"key": "term",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "exact_match",
											"value": "<boolean>"
										},
										{
											"key": "organization_id",
											"value": "<integer>"
										},
										{
											"key": "include_fields",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"items\": [\n      {\n        \"result_score\": 0.5092,\n        \"item\": {\n          \"id\": 1,\n          \"type\": \"person\",\n          \"name\": \"Jane Doe\",\n          \"phones\": [\n            \"+372 555555555\"\n          ],\n          \"emails\": [\n            \"jane@pipedrive.com\"\n          ],\n          \"visible_to\": 3,\n          \"owner\": {\n            \"id\": 1\n          },\n          \"organization\": {\n            \"id\": 1,\n            \"name\": \"Organization name\",\n            \"address\": null\n          },\n          \"custom_fields\": [],\n          \"notes\": []\n        }\n      }\n    ]\n  },\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Marks a person as deleted. After 30 days, the person will be permanently deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 12\n  }\n}"
						}
					]
				},
				{
					"name": "Get details of a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Returns the details of a person. Note that this also returns some additional fields which are not present when asking for all persons. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the `key` value of personFields.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 12,\n    \"owner_id\": {\n      \"id\": 123,\n      \"name\": \"Jane Doe\",\n      \"email\": \"jane@pipedrive.com\",\n      \"has_pic\": 1,\n      \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n      \"active_flag\": true,\n      \"value\": 123\n    },\n    \"org_id\": {\n      \"name\": \"Org Name\",\n      \"people_count\": 1,\n      \"owner_id\": 123,\n      \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n      \"active_flag\": true,\n      \"cc_email\": \"org@pipedrivemail.com\",\n      \"value\": 1234\n    },\n    \"name\": \"Will Smith\",\n    \"first_name\": \"Will\",\n    \"last_name\": \"Smith\",\n    \"open_deals_count\": 2,\n    \"related_open_deals_count\": 2,\n    \"closed_deals_count\": 3,\n    \"related_closed_deals_count\": 3,\n    \"participant_open_deals_count\": 1,\n    \"participant_closed_deals_count\": 1,\n    \"email_messages_count\": 1,\n    \"activities_count\": 1,\n    \"done_activities_count\": 1,\n    \"undone_activities_count\": 2,\n    \"files_count\": 2,\n    \"notes_count\": 2,\n    \"followers_count\": 3,\n    \"won_deals_count\": 3,\n    \"related_won_deals_count\": 3,\n    \"lost_deals_count\": 1,\n    \"related_lost_deals_count\": 1,\n    \"active_flag\": true,\n    \"phone\": [\n      {\n        \"value\": \"12345\",\n        \"primary\": true,\n        \"label\": \"work\"\n      }\n    ],\n    \"email\": [\n      {\n        \"value\": \"12345@email.com\",\n        \"primary\": true,\n        \"label\": \"work\"\n      }\n    ],\n    \"primary_email\": \"12345@email.com\",\n    \"first_char\": \"w\",\n    \"update_time\": \"2020-05-08 05:30:20\",\n    \"add_time\": \"2017-10-18 13:23:07\",\n    \"visible_to\": \"3\",\n    \"marketing_status\": \"no_consent\",\n    \"picture_id\": {\n      \"item_type\": \"person\",\n      \"item_id\": 25,\n      \"active_flag\": true,\n      \"add_time\": \"2020-09-08 08:17:52\",\n      \"update_time\": \"0000-00-00 00:00:00\",\n      \"added_by_user_id\": 967055,\n      \"pictures\": {\n        \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n        \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n      },\n      \"value\": 4\n    },\n    \"next_activity_date\": \"2019-11-29\",\n    \"next_activity_time\": \"11:30:00\",\n    \"next_activity_id\": 128,\n    \"last_activity_id\": 34,\n    \"last_activity_date\": \"2019-11-28\",\n    \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n    \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n    \"label\": 1,\n    \"label_ids\": [\n      1,\n      2,\n      3\n    ],\n    \"org_name\": \"Organization name\",\n    \"owner_name\": \"Jane Doe\",\n    \"cc_email\": \"org@pipedrivemail.com\"\n  },\n  \"additional_data\": {\n    \"dropbox_email\": \"test@email.com\"\n  },\n  \"related_objects\": {\n    \"organization\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Org Name\",\n        \"people_count\": 1,\n        \"owner_id\": 123,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"user\": {\n      \"123\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true\n      }\n    },\n    \"picture\": {\n      \"1\": {\n        \"id\": 1,\n        \"item_type\": \"person\",\n        \"item_id\": 25,\n        \"active_flag\": true,\n        \"add_time\": \"2020-09-08 08:17:52\",\n        \"update_time\": \"0000-00-00 00:00:00\",\n        \"added_by_user_id\": 967055,\n        \"pictures\": {\n          \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n          \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n        }\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"email\": [\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"phone\": [\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"label\": \"<integer>\",\n  \"label_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visible_to\": \"<string>\",\n  \"marketing_status\": \"<string>\",\n  \"add_time\": \"<string>\",\n  \"tempor_326\": -46973666,\n  \"sit_4_\": 2556005,\n  \"exercitation_3\": false,\n  \"commodo8\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/persons/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Updates the properties of a person. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/updating-a-person\" target=\"_blank\" rel=\"noopener noreferrer\">updating a person</a>.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also accept and return the `data.marketing_status` field."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"org_id\": \"<integer>\",\n  \"email\": [\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"phone\": [\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"primary\": \"<boolean>\",\n      \"label\": \"<string>\"\n    }\n  ],\n  \"label\": \"<integer>\",\n  \"label_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visible_to\": \"<string>\",\n  \"marketing_status\": \"<string>\",\n  \"add_time\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/persons/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 12,\n    \"owner_id\": {\n      \"id\": 123,\n      \"name\": \"Jane Doe\",\n      \"email\": \"jane@pipedrive.com\",\n      \"has_pic\": 1,\n      \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n      \"active_flag\": true,\n      \"value\": 123\n    },\n    \"org_id\": {\n      \"name\": \"Org Name\",\n      \"people_count\": 1,\n      \"owner_id\": 123,\n      \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n      \"active_flag\": true,\n      \"cc_email\": \"org@pipedrivemail.com\",\n      \"value\": 1234\n    },\n    \"name\": \"Will Smith\",\n    \"first_name\": \"Will\",\n    \"last_name\": \"Smith\",\n    \"open_deals_count\": 2,\n    \"related_open_deals_count\": 2,\n    \"closed_deals_count\": 3,\n    \"related_closed_deals_count\": 3,\n    \"participant_open_deals_count\": 1,\n    \"participant_closed_deals_count\": 1,\n    \"email_messages_count\": 1,\n    \"activities_count\": 1,\n    \"done_activities_count\": 1,\n    \"undone_activities_count\": 2,\n    \"files_count\": 2,\n    \"notes_count\": 2,\n    \"followers_count\": 3,\n    \"won_deals_count\": 3,\n    \"related_won_deals_count\": 3,\n    \"lost_deals_count\": 1,\n    \"related_lost_deals_count\": 1,\n    \"active_flag\": true,\n    \"phone\": [\n      {\n        \"value\": \"12345\",\n        \"primary\": true,\n        \"label\": \"work\"\n      }\n    ],\n    \"email\": [\n      {\n        \"value\": \"12345@email.com\",\n        \"primary\": true,\n        \"label\": \"work\"\n      }\n    ],\n    \"primary_email\": \"12345@email.com\",\n    \"first_char\": \"w\",\n    \"update_time\": \"2020-05-08 05:30:20\",\n    \"add_time\": \"2017-10-18 13:23:07\",\n    \"visible_to\": \"3\",\n    \"marketing_status\": \"no_consent\",\n    \"picture_id\": {\n      \"item_type\": \"person\",\n      \"item_id\": 25,\n      \"active_flag\": true,\n      \"add_time\": \"2020-09-08 08:17:52\",\n      \"update_time\": \"0000-00-00 00:00:00\",\n      \"added_by_user_id\": 967055,\n      \"pictures\": {\n        \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n        \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n      },\n      \"value\": 4\n    },\n    \"next_activity_date\": \"2019-11-29\",\n    \"next_activity_time\": \"11:30:00\",\n    \"next_activity_id\": 128,\n    \"last_activity_id\": 34,\n    \"last_activity_date\": \"2019-11-28\",\n    \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n    \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n    \"label\": 1,\n    \"label_ids\": [\n      1,\n      2,\n      3\n    ],\n    \"org_name\": \"Organization name\",\n    \"owner_name\": \"Jane Doe\",\n    \"cc_email\": \"org@pipedrivemail.com\"\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"123\": {\n        \"id\": 123,\n        \"name\": \"Jane Doe\",\n        \"email\": \"jane@pipedrive.com\",\n        \"has_pic\": 1,\n        \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n        \"active_flag\": true\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List activities associated with a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/activities?start=0&limit=<integer>&done=<number>&exclude=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"activities"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "done",
									"value": "<number>",
									"description": "Whether the activity is done or not. 0 = Not done, 1 = Done. If omitted, returns both Done and Not done activities."
								},
								{
									"key": "exclude",
									"value": "<string>",
									"description": "A comma-separated string of activity IDs to exclude from result"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Lists activities associated with a person. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Activities#getActivities\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/activities?person_id={id}</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/activities?start=0&limit=<integer>&done=<number>&exclude=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"activities"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "done",
											"value": "<number>"
										},
										{
											"key": "exclude",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 8,\n      \"company_id\": 22122,\n      \"user_id\": 1234,\n      \"done\": false,\n      \"type\": \"deadline\",\n      \"reference_type\": \"scheduler-service\",\n      \"reference_id\": 7,\n      \"conference_meeting_client\": \"871b8bc88d3a1202\",\n      \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n      \"conference_meeting_id\": \"17058746701\",\n      \"due_date\": \"2020-06-09\",\n      \"due_time\": \"10:00\",\n      \"duration\": \"01:00\",\n      \"busy_flag\": true,\n      \"add_time\": \"2020-06-08 12:37:56\",\n      \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n      \"last_notification_time\": \"2020-08-08 12:37:56\",\n      \"last_notification_user_id\": 7655,\n      \"notification_language_id\": 1,\n      \"subject\": \"Deadline\",\n      \"public_description\": \"This is a description\",\n      \"calendar_sync_include_context\": \"\",\n      \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n      \"org_id\": 5,\n      \"person_id\": 1101,\n      \"deal_id\": 300,\n      \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n      \"project_id\": null,\n      \"active_flag\": true,\n      \"update_time\": \"2020-08-08 12:37:56\",\n      \"update_user_id\": 5596,\n      \"gcal_event_id\": \"\",\n      \"google_calendar_id\": \"\",\n      \"google_calendar_etag\": \"\",\n      \"source_timezone\": \"\",\n      \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n      \"rec_rule_extension\": \"\",\n      \"rec_master_activity_id\": 1,\n      \"series\": [],\n      \"note\": \"A note for the activity\",\n      \"created_by_user_id\": 1234,\n      \"location_subpremise\": \"\",\n      \"location_street_number\": \"3\",\n      \"location_route\": \"Mustamäe tee\",\n      \"location_sublocality\": \"Kristiine\",\n      \"location_locality\": \"Tallinn\",\n      \"location_admin_area_level_1\": \"Harju maakond\",\n      \"location_admin_area_level_2\": \"\",\n      \"location_country\": \"Estonia\",\n      \"location_postal_code\": \"10616\",\n      \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n      \"attendees\": [\n        {\n          \"email_address\": \"attendee@pipedrivemail.com\",\n          \"is_organizer\": 0,\n          \"name\": \"Attendee\",\n          \"person_id\": 25312,\n          \"status\": \"noreply\",\n          \"user_id\": null\n        }\n      ],\n      \"participants\": [\n        {\n          \"person_id\": 17985,\n          \"primary_flag\": false\n        },\n        {\n          \"person_id\": 1101,\n          \"primary_flag\": true\n        }\n      ],\n      \"org_name\": \"Organization\",\n      \"person_name\": \"Person\",\n      \"deal_title\": \"Deal\",\n      \"owner_name\": \"Creator\",\n      \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n      \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n      \"assigned_to_user_id\": 1235,\n      \"file\": {\n        \"id\": \"376892,\",\n        \"clean_name\": \"Audio 10:55:07.m4a\",\n        \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"allOf\": [\n      {\n        \"activity_distribution\": {\n          \"8877\": {\n            \"activities\": {\n              \"call\": 2,\n              \"meeting\": 1\n            },\n            \"name\": \"Will Smith\",\n            \"activity_count\": 3,\n            \"share\": 100\n          }\n        }\n      },\n      {\n        \"pagination\": {\n          \"start\": 0,\n          \"limit\": 100,\n          \"more_items_in_collection\": true\n        }\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "List updates about person field values",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/changelog?cursor=<string>&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"changelog"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Lists updates about field values of a person."
					},
					"response": [
						{
							"name": "Get changelog of a person",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/changelog?cursor=<string>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"changelog"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"field_key\": \"51c27e4a19c3bedd91162a9d446707c1f95174ea\",\n      \"old_value\": null,\n      \"new_value\": \"200\",\n      \"actor_user_id\": 26,\n      \"time\": \"2024-02-12 09:14:35\",\n      \"change_source\": \"app\",\n      \"change_source_user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36\",\n      \"is_bulk_update_flag\": false\n    },\n    {\n      \"field_key\": \"email\",\n      \"old_value\": \"john.doe@pipedrive.com\",\n      \"new_value\": \"jane.doe@pipedrive.com\",\n      \"actor_user_id\": 26,\n      \"time\": \"2024-02-12 09:10:12\",\n      \"change_source\": \"app\",\n      \"change_source_user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36\",\n      \"is_bulk_update_flag\": false\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"aWQ6NTQ0\"\n  }\n}"
						}
					]
				},
				{
					"name": "List deals associated with a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/deals?start=0&limit=<integer>&status=all_not_deleted&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"deals"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "status",
									"value": "all_not_deleted",
									"description": "Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys)."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Lists deals associated with a person. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Deals#getDeals\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/deals?person_id={id}</a> instead."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/deals?start=0&limit=<integer>&status=all_not_deleted&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"deals"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "status",
											"value": "all_not_deleted"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"creator_user_id\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 8877\n      },\n      \"user_id\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 8877\n      },\n      \"person_id\": {\n        \"active_flag\": true,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"37244499911\",\n            \"primary\": true\n          }\n        ],\n        \"value\": 1101\n      },\n      \"org_id\": {\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\",\n        \"value\": 5\n      },\n      \"stage_id\": 2,\n      \"title\": \"Deal One\",\n      \"value\": 5000,\n      \"currency\": \"EUR\",\n      \"add_time\": \"2019-05-29 04:21:51\",\n      \"update_time\": \"2019-11-28 16:19:50\",\n      \"stage_change_time\": \"2019-11-28 15:41:22\",\n      \"active\": true,\n      \"deleted\": false,\n      \"status\": \"open\",\n      \"probability\": null,\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": null,\n      \"last_activity_date\": null,\n      \"lost_reason\": null,\n      \"visible_to\": \"1\",\n      \"close_time\": null,\n      \"pipeline_id\": 1,\n      \"won_time\": \"2019-11-27 11:40:36\",\n      \"first_won_time\": \"2019-11-27 11:40:36\",\n      \"lost_time\": \"2019-11-27 11:40:36\",\n      \"products_count\": 0,\n      \"files_count\": 0,\n      \"notes_count\": 2,\n      \"followers_count\": 0,\n      \"email_messages_count\": 4,\n      \"activities_count\": 1,\n      \"done_activities_count\": 0,\n      \"undone_activities_count\": 1,\n      \"participants_count\": 1,\n      \"expected_close_date\": \"2019-06-29\",\n      \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n      \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n      \"label\": \"11\",\n      \"stage_order_nr\": 2,\n      \"person_name\": \"Person\",\n      \"org_name\": \"Organization\",\n      \"next_activity_subject\": \"Call\",\n      \"next_activity_type\": \"call\",\n      \"next_activity_duration\": \"00:30:00\",\n      \"next_activity_note\": \"Note content\",\n      \"formatted_value\": \"€5,000\",\n      \"weighted_value\": 5000,\n      \"formatted_weighted_value\": \"€5,000\",\n      \"weighted_value_currency\": \"EUR\",\n      \"rotten_time\": null,\n      \"owner_name\": \"Creator\",\n      \"cc_email\": \"company+deal1@pipedrivemail.com\",\n      \"org_hidden\": false,\n      \"person_hidden\": false\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"8877\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"organization\": {\n      \"5\": {\n        \"id\": 5,\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"person\": {\n      \"1101\": {\n        \"active_flag\": true,\n        \"id\": 1101,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"3421787767\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"stage\": {\n      \"2\": {\n        \"id\": 2,\n        \"company_id\": 123,\n        \"order_nr\": 1,\n        \"name\": \"Stage Name\",\n        \"active_flag\": true,\n        \"deal_probability\": 100,\n        \"pipeline_id\": 1,\n        \"rotten_flag\": false,\n        \"rotten_days\": null,\n        \"add_time\": \"2015-12-08 13:54:06\",\n        \"update_time\": \"2015-12-08 13:54:06\",\n        \"pipeline_name\": \"Pipeline\",\n        \"pipeline_deal_probability\": true\n      }\n    },\n    \"pipeline\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Pipeline\",\n        \"url_title\": \"Pipeline\",\n        \"order_nr\": 0,\n        \"active\": true,\n        \"deal_probability\": true,\n        \"add_time\": \"2015-12-08 10:00:24\",\n        \"update_time\": \"2015-12-08 10:00:24\"\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List files attached to a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/files?start=0&limit=<integer>&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"files"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page. Please note that a maximum value of 100 is allowed."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Supported fields: `id`, `update_time`"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Lists files associated with a person."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/files?start=0&limit=<integer>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"files"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"user_id\": 8877,\n      \"deal_id\": 1,\n      \"person_id\": 1,\n      \"org_id\": 1480,\n      \"product_id\": 1,\n      \"activity_id\": 1,\n      \"lead_id\": \"adf21080-0e10-11eb-879b-05d71fb426ec\",\n      \"log_id\": null,\n      \"add_time\": \"2020-09-16 11:19:36\",\n      \"update_time\": \"2020-09-16 11:19:36\",\n      \"file_name\": \"95781006_794143070992462_4330873630616453120_n_60817458877506f9eb74d03e5ef9ba061915b797998.jpg\",\n      \"file_type\": \"img\",\n      \"file_size\": 95116,\n      \"active_flag\": true,\n      \"inline_flag\": false,\n      \"remote_location\": \"s3\",\n      \"remote_id\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n      \"cid\": \"\",\n      \"s3_bucket\": \"\",\n      \"mail_message_id\": \"\",\n      \"mail_template_id\": \"\",\n      \"deal_name\": \"nice deal\",\n      \"person_name\": \"\",\n      \"people_name\": \"\",\n      \"org_name\": \"Pipedrive Inc.\",\n      \"product_name\": \"\",\n      \"lead_name\": \"nice lead\",\n      \"url\": \"https://app.pipedrive.com/api/v1/files/304/download\",\n      \"name\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n      \"description\": \"\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List updates about a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/flow?start=0&limit=<integer>&all_changes=<string>&items=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"flow"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "all_changes",
									"value": "<string>",
									"description": "Whether to show custom field updates or not. 1 = Include custom field changes. If omitted returns changes without custom field updates."
								},
								{
									"key": "items",
									"value": "<string>",
									"description": "A comma-separated string for filtering out item specific updates. (Possible values - call, activity, plannedActivity, change, note, deal, file, dealChange, personChange, organizationChange, follower, dealFollower, personFollower, organizationFollower, participant, comment, mailMessage, mailMessageWithAttachment, invoice, document, marketing_campaign_stat, marketing_status_change)."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Lists updates about a person.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint's response will also include updates for the `marketing_status` field."
					},
					"response": [
						{
							"name": "Get the person updates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/flow?start=0&limit=<integer>&all_changes=<string>&items=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"flow"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "all_changes",
											"value": "<string>"
										},
										{
											"key": "items",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"object\": \"personChange\",\n      \"timestamp\": \"2020-08-03 11:25:21\",\n      \"data\": {\n        \"id\": 11158,\n        \"item_id\": 3512,\n        \"user_id\": 8877,\n        \"field_key\": \"org_id\",\n        \"old_value\": null,\n        \"new_value\": 1482,\n        \"is_bulk_update_flag\": null,\n        \"log_time\": \"2020-08-03 11:25:21\",\n        \"change_source\": \"app\",\n        \"change_source_user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML like Gecko) Chrome/84.0.4147.89 Safari/537.36\",\n        \"additional_data\": {\n          \"new_value_formatted\": \"Umbrella Corp.\"\n        }\n      }\n    },\n    {\n      \"object\": \"activity\",\n      \"timestamp\": \"2020-08-07 08:15:00\",\n      \"data\": {\n        \"id\": 8,\n        \"company_id\": 22122,\n        \"user_id\": 1234,\n        \"done\": false,\n        \"type\": \"deadline\",\n        \"reference_type\": \"scheduler-service\",\n        \"reference_id\": 7,\n        \"conference_meeting_client\": \"871b8bc88d3a1202\",\n        \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n        \"conference_meeting_id\": \"17058746701\",\n        \"due_date\": \"2020-06-09\",\n        \"due_time\": \"10:00\",\n        \"duration\": \"01:00\",\n        \"busy_flag\": true,\n        \"add_time\": \"2020-06-08 12:37:56\",\n        \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n        \"last_notification_time\": \"2020-08-08 12:37:56\",\n        \"last_notification_user_id\": 7655,\n        \"notification_language_id\": 1,\n        \"subject\": \"Deadline\",\n        \"public_description\": \"This is a description\",\n        \"calendar_sync_include_context\": \"\",\n        \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n        \"org_id\": 5,\n        \"person_id\": 1101,\n        \"deal_id\": 300,\n        \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n        \"project_id\": null,\n        \"active_flag\": true,\n        \"update_time\": \"2020-08-08 12:37:56\",\n        \"update_user_id\": 5596,\n        \"gcal_event_id\": \"\",\n        \"google_calendar_id\": \"\",\n        \"google_calendar_etag\": \"\",\n        \"source_timezone\": \"\",\n        \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n        \"rec_rule_extension\": \"\",\n        \"rec_master_activity_id\": 1,\n        \"series\": [],\n        \"note\": \"A note for the activity\",\n        \"created_by_user_id\": 1234,\n        \"location_subpremise\": \"\",\n        \"location_street_number\": \"3\",\n        \"location_route\": \"Mustamäe tee\",\n        \"location_sublocality\": \"Kristiine\",\n        \"location_locality\": \"Tallinn\",\n        \"location_admin_area_level_1\": \"Harju maakond\",\n        \"location_admin_area_level_2\": \"\",\n        \"location_country\": \"Estonia\",\n        \"location_postal_code\": \"10616\",\n        \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n        \"attendees\": [\n          {\n            \"email_address\": \"attendee@pipedrivemail.com\",\n            \"is_organizer\": 0,\n            \"name\": \"Attendee\",\n            \"person_id\": 25312,\n            \"status\": \"noreply\",\n            \"user_id\": null\n          }\n        ],\n        \"participants\": [\n          {\n            \"person_id\": 17985,\n            \"primary_flag\": false\n          },\n          {\n            \"person_id\": 1101,\n            \"primary_flag\": true\n          }\n        ],\n        \"org_name\": \"Organization\",\n        \"person_name\": \"Person\",\n        \"deal_title\": \"Deal\",\n        \"owner_name\": \"Creator\",\n        \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n        \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n        \"assigned_to_user_id\": 1235,\n        \"file\": {\n          \"id\": \"376892,\",\n          \"clean_name\": \"Audio 10:55:07.m4a\",\n          \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n        }\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  },\n  \"related_objects\": {\n    \"allOf\": [\n      {\n        \"user\": {\n          \"123\": {\n            \"id\": 123,\n            \"name\": \"Jane Doe\",\n            \"email\": \"jane@pipedrive.com\",\n            \"has_pic\": 1,\n            \"pic_hash\": \"2611ace8ac6a3afe2f69ed56f9e08c6b\",\n            \"active_flag\": true\n          }\n        }\n      },\n      {\n        \"person\": {\n          \"1101\": {\n            \"active_flag\": true,\n            \"id\": 1101,\n            \"name\": \"Person\",\n            \"email\": [\n              {\n                \"label\": \"work\",\n                \"value\": \"person@pipedrive.com\",\n                \"primary\": true\n              }\n            ],\n            \"phone\": [\n              {\n                \"label\": \"work\",\n                \"value\": \"3421787767\",\n                \"primary\": true\n              }\n            ],\n            \"owner_id\": 8877\n          }\n        }\n      },\n      {\n        \"organization\": {\n          \"1\": {\n            \"id\": 1,\n            \"name\": \"Org Name\",\n            \"people_count\": 1,\n            \"owner_id\": 123,\n            \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n            \"active_flag\": true,\n            \"cc_email\": \"org@pipedrivemail.com\"\n          }\n        }\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "List followers of a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"followers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Lists the followers of a person."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/followers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"followers"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"user_id\": 123,\n      \"id\": 456,\n      \"deal_id\": 789,\n      \"add_time\": \"2020-09-09 11:36:23\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a follower to a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/persons/:id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"followers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Adds a follower to a person."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/persons/:id/followers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"followers"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"user_id\": 1,\n    \"id\": 2,\n    \"person_id\": 3,\n    \"add_time\": \"2020-04-03 11:44:31\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a follower from a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/followers/:follower_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"followers",
								":follower_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								},
								{
									"key": "follower_id",
									"value": "<integer>",
									"description": "(Required) The ID of the relationship between the follower and the person"
								}
							]
						},
						"description": "Deletes a follower from a person."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/followers/:follower_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"followers",
										":follower_id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										},
										{
											"key": "follower_id",
											"value": "<integer>",
											"description": "(Required) The ID of the relationship between the follower and the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 12\n  }\n}"
						}
					]
				},
				{
					"name": "List mail messages associated with a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/mailMessages?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"mailMessages"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Lists mail messages associated with a person."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/mailMessages?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"mailMessages"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"object\": \"mailMessage\",\n      \"timestamp\": \"2020-09-16 13:38:17\",\n      \"data\": {\n        \"id\": 1,\n        \"from\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"to\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"cc\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"bcc\": [\n          {\n            \"id\": 1,\n            \"email_address\": \"mail@example.org\",\n            \"name\": \"Test\",\n            \"linked_person_id\": 1,\n            \"linked_person_name\": \"\",\n            \"mail_message_party_id\": 1\n          }\n        ],\n        \"body_url\": \"https://example.org\",\n        \"nylas_id\": \"8cfw8n7l4iy24xxxxxxxxx\",\n        \"account_id\": \"ao5gpry0zykr1xxxxxxxxx\",\n        \"user_id\": 1,\n        \"mail_thread_id\": 1,\n        \"subject\": \"test subject\",\n        \"snippet\": \"test subject\",\n        \"mail_tracking_status\": \"opened\",\n        \"mail_link_tracking_enabled_flag\": 0,\n        \"read_flag\": 1,\n        \"draft\": \"\",\n        \"s3_bucket\": \"pipedrive-mail-live-fr\",\n        \"s3_bucket_path\": \"e9cf-6081745/77777/nylas/111/1111/body\",\n        \"draft_flag\": 0,\n        \"synced_flag\": 1,\n        \"deleted_flag\": 0,\n        \"external_deleted_flag\": false,\n        \"has_body_flag\": 1,\n        \"sent_flag\": 0,\n        \"sent_from_pipedrive_flag\": 0,\n        \"smart_bcc_flag\": 0,\n        \"message_time\": \"2019-11-14T06:02:06.000Z\",\n        \"add_time\": \"2019-11-14T06:02:06.000Z\",\n        \"update_time\": \"2019-11-14T07:15:49.000Z\",\n        \"has_attachments_flag\": 1,\n        \"has_inline_attachments_flag\": 0,\n        \"has_real_attachments_flag\": 1,\n        \"mua_message_id\": \"8cfw8n7l4iy24lfhnexxxxxx-0@mailer.nylas.com\",\n        \"template_id\": 1,\n        \"item_type\": \"mailMessage\",\n        \"timestamp\": \"2020-09-16T13:37:50.000Z\",\n        \"company_id\": 6081745\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Merge two persons",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merge_with_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/persons/:id/merge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"merge"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Merges a person with another person. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/merging-two-persons\" target=\"_blank\" rel=\"noopener noreferrer\">merging two persons</a>."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"merge_with_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/persons/:id/merge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"merge"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 12,\n    \"owner_id\": 123,\n    \"org_id\": 123,\n    \"name\": \"Will Smith\",\n    \"first_name\": \"Will\",\n    \"last_name\": \"Smith\",\n    \"open_deals_count\": 2,\n    \"related_open_deals_count\": 2,\n    \"closed_deals_count\": 3,\n    \"related_closed_deals_count\": 3,\n    \"participant_open_deals_count\": 1,\n    \"participant_closed_deals_count\": 1,\n    \"email_messages_count\": 1,\n    \"activities_count\": 1,\n    \"done_activities_count\": 1,\n    \"undone_activities_count\": 2,\n    \"files_count\": 2,\n    \"notes_count\": 2,\n    \"followers_count\": 3,\n    \"won_deals_count\": 3,\n    \"related_won_deals_count\": 3,\n    \"lost_deals_count\": 1,\n    \"related_lost_deals_count\": 1,\n    \"active_flag\": true,\n    \"phone\": [\n      {\n        \"value\": \"12345\",\n        \"primary\": true,\n        \"label\": \"work\"\n      }\n    ],\n    \"email\": [\n      {\n        \"value\": \"some@email.com\",\n        \"primary\": true,\n        \"label\": \"work\"\n      }\n    ],\n    \"first_char\": \"w\",\n    \"update_time\": \"2020-05-08 05:30:20\",\n    \"add_time\": \"2017-10-18 13:23:07\",\n    \"visible_to\": \"3\",\n    \"picture_id\": {\n      \"item_type\": \"person\",\n      \"item_id\": 25,\n      \"active_flag\": true,\n      \"add_time\": \"2020-09-08 08:17:52\",\n      \"update_time\": \"0000-00-00 00:00:00\",\n      \"added_by_user_id\": 967055,\n      \"pictures\": {\n        \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n        \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n      },\n      \"value\": 4\n    },\n    \"next_activity_date\": \"2019-11-29\",\n    \"next_activity_time\": \"11:30:00\",\n    \"next_activity_id\": 128,\n    \"last_activity_id\": 34,\n    \"last_activity_date\": \"2019-11-28\",\n    \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n    \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n    \"label\": 1,\n    \"label_ids\": [\n      1,\n      2,\n      3\n    ],\n    \"org_name\": \"Organization name\",\n    \"owner_name\": \"Jane Doe\",\n    \"cc_email\": \"org@pipedrivemail.com\",\n    \"merge_what_id\": 456\n  }\n}"
						}
					]
				},
				{
					"name": "List permitted users",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/permittedUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"permittedUsers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "List users permitted to access a person."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/permittedUsers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"permittedUsers"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    123,\n    777\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete person picture",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/picture",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"picture"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Deletes a person’s picture."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/picture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"picture"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 12\n  }\n}"
						}
					]
				},
				{
					"name": "Add person picture",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) One image supplied in the multipart/form-data encoding",
									"type": "file",
									"src": []
								},
								{
									"key": "crop_x",
									"value": "<integer>",
									"description": "X coordinate to where start cropping form (in pixels)",
									"type": "text"
								},
								{
									"key": "crop_y",
									"value": "<integer>",
									"description": "Y coordinate to where start cropping form (in pixels)",
									"type": "text"
								},
								{
									"key": "crop_width",
									"value": "<integer>",
									"description": "The width of the cropping area (in pixels)",
									"type": "text"
								},
								{
									"key": "crop_height",
									"value": "<integer>",
									"description": "The height of the cropping area (in pixels)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/persons/:id/picture",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"picture"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Adds a picture to a person. If a picture is already set, the old picture will be replaced. Added image (or the cropping parameters supplied with the request) should have an equal width and height and should be at least 128 pixels. GIF, JPG and PNG are accepted. All added images will be resized to 128 and 512 pixel wide squares."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>",
											"description": "(Required) One image supplied in the multipart/form-data encoding",
											"type": "text"
										},
										{
											"key": "crop_x",
											"value": "<integer>",
											"description": "X coordinate to where start cropping form (in pixels)",
											"type": "text"
										},
										{
											"key": "crop_y",
											"value": "<integer>",
											"description": "Y coordinate to where start cropping form (in pixels)",
											"type": "text"
										},
										{
											"key": "crop_width",
											"value": "<integer>",
											"description": "The width of the cropping area (in pixels)",
											"type": "text"
										},
										{
											"key": "crop_height",
											"value": "<integer>",
											"description": "The height of the cropping area (in pixels)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/persons/:id/picture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"picture"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"item_type\": \"person\",\n    \"item_id\": 25,\n    \"active_flag\": true,\n    \"add_time\": \"2020-09-08 08:17:52\",\n    \"update_time\": \"0000-00-00 00:00:00\",\n    \"added_by_user_id\": 967055,\n    \"pictures\": {\n      \"128\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_128.jpg\",\n      \"512\": \"https://pipedrive-profile-pics.s3.example.com/f8893852574273f2747bf6ef09d11cfb4ac8f269_512.jpg\"\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List products associated with a person",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:id/products?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":id",
								"products"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the person"
								}
							]
						},
						"description": "Lists products associated with a person."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:id/products?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":id",
										"products"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the person"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"123\": {\n        \"deal\": {\n          \"id\": 123,\n          \"company_id\": 1938610,\n          \"creator_user_id\": 599218,\n          \"user_id\": 599218,\n          \"person_id\": 25,\n          \"org_id\": 1,\n          \"stage_id\": 2,\n          \"title\": \"tervist\",\n          \"value\": 3342.79,\n          \"currency\": \"EUR\",\n          \"add_time\": \"2017-10-18 13:23:07\",\n          \"first_add_time\": \"2017-10-18 13:23:07\",\n          \"update_time\": \"2020-09-18 12:12:54\",\n          \"stage_change_time\": \"2020-05-07 11:44:00\",\n          \"active\": true,\n          \"deleted\": false,\n          \"status\": \"open\",\n          \"probability\": null,\n          \"next_activity_date\": \"2020-01-17\",\n          \"next_activity_time\": null,\n          \"next_activity_id\": 7,\n          \"last_activity_id\": null,\n          \"last_activity_date\": null,\n          \"lost_reason\": null,\n          \"visible_to\": \"3\",\n          \"close_time\": null,\n          \"pipeline_id\": 1,\n          \"won_time\": null,\n          \"first_won_time\": null,\n          \"lost_time\": null,\n          \"products_count\": 6,\n          \"files_count\": 1,\n          \"notes_count\": 0,\n          \"email_messages_count\": 0,\n          \"activities_count\": 1,\n          \"done_activities_count\": 0,\n          \"undone_activities_count\": 1,\n          \"participants_count\": 2,\n          \"expected_close_date\": null,\n          \"last_incoming_mail_time\": \"2020-09-18 12:12:54\",\n          \"last_outgoing_mail_time\": \"2020-09-18 12:12:54\",\n          \"label\": null\n        },\n        \"product\": {\n          \"id\": 4,\n          \"company_id\": 1938610,\n          \"name\": \"1234\",\n          \"code\": \"444\",\n          \"description\": \"123\",\n          \"unit\": \"\",\n          \"tax\": 0,\n          \"category\": \"40\",\n          \"active_flag\": true,\n          \"selectable\": true,\n          \"first_char\": \"1\",\n          \"visible_to\": \"3\",\n          \"owner_id\": 967055,\n          \"files_count\": null,\n          \"add_time\": \"2020-01-28 11:54:41\",\n          \"update_time\": \"2020-09-18 11:54:36\",\n          \"deal_id\": 5\n        }\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Persons are your contacts, the customers you are doing deals with. Each person can belong to an organization. Persons should not be confused with users.\n"
		},
		{
			"name": "Pipelines",
			"item": [
				{
					"name": "Get all pipelines",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pipelines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pipelines"
							]
						},
						"description": "Returns data about all pipelines."
					},
					"response": [
						{
							"name": "Get all pipelines",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pipelines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pipelines"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Pipeline Name\",\n      \"url_title\": \"Pipeline-Name\",\n      \"order_nr\": 1,\n      \"active\": true,\n      \"deal_probability\": true,\n      \"add_time\": \"2017-08-03 12:51:18\",\n      \"update_time\": \"2020-03-23 13:15:25\",\n      \"selected\": true\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add a new pipeline",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"deal_probability\": \"<number>\",\n  \"order_nr\": \"<integer>\",\n  \"active\": \"<number>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pipelines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pipelines"
							]
						},
						"description": "Adds a new pipeline."
					},
					"response": [
						{
							"name": "Add pipeline",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"deal_probability\": \"<number>\",\n  \"order_nr\": \"<integer>\",\n  \"active\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pipelines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pipelines"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Pipeline\",\n    \"url_title\": \"Pipeline\",\n    \"order_nr\": 1,\n    \"active\": true,\n    \"deal_probability\": true,\n    \"add_time\": \"2017-08-03 12:51:18\",\n    \"update_time\": \"2020-03-23 13:15:25\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a pipeline",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pipelines/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pipelines",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the pipeline"
								}
							]
						},
						"description": "Marks a pipeline as deleted."
					},
					"response": [
						{
							"name": "Delete pipeline",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pipelines/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pipelines",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the pipeline"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Get one pipeline",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pipelines/:id?totals_convert_currency=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pipelines",
								":id"
							],
							"query": [
								{
									"key": "totals_convert_currency",
									"value": "<string>",
									"description": "The 3-letter currency code of any of the supported currencies. When supplied, `per_stages_converted` is returned in `deals_summary` which contains the currency-converted total amounts in the given currency per each stage. You may also set this parameter to `default_currency` in which case users default currency is used."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the pipeline"
								}
							]
						},
						"description": "Returns data about a specific pipeline. Also returns the summary of the deals in this pipeline across its stages."
					},
					"response": [
						{
							"name": "Get pipeline",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pipelines/:id?totals_convert_currency=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pipelines",
										":id"
									],
									"query": [
										{
											"key": "totals_convert_currency",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the pipeline"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Pipeline\",\n    \"url_title\": \"Pipeline\",\n    \"order_nr\": 1,\n    \"active\": true,\n    \"deal_probability\": true,\n    \"add_time\": \"2017-08-03 12:51:18\",\n    \"update_time\": \"2020-03-23 13:15:25\",\n    \"selected\": true,\n    \"deals_summary\": {\n      \"per_stages\": {\n        \"1\": {\n          \"EUR\": {\n            \"count\": 1,\n            \"value\": 10,\n            \"value_formatted\": \"10 €\",\n            \"weighted_value\": 10,\n            \"weighted_value_formatted\": \"10€\"\n          }\n        }\n      },\n      \"per_currency\": {\n        \"EUR\": 1\n      },\n      \"total_count\": 1,\n      \"per_currency_full\": {\n        \"EUR\": {\n          \"count\": 1,\n          \"value\": 10\n        }\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update a pipeline",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"deal_probability\": \"<number>\",\n  \"order_nr\": \"<integer>\",\n  \"active\": \"<number>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pipelines/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pipelines",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the pipeline"
								}
							]
						},
						"description": "Updates the properties of a pipeline."
					},
					"response": [
						{
							"name": "Edit pipeline",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"deal_probability\": \"<number>\",\n  \"order_nr\": \"<integer>\",\n  \"active\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pipelines/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pipelines",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the pipeline"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Pipeline\",\n    \"url_title\": \"Pipeline\",\n    \"order_nr\": 1,\n    \"active\": true,\n    \"deal_probability\": true,\n    \"add_time\": \"2017-08-03 12:51:18\",\n    \"update_time\": \"2020-03-23 13:15:25\",\n    \"selected\": true\n  }\n}"
						}
					]
				},
				{
					"name": "Get deals conversion rates in pipeline",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pipelines/:id/conversion_statistics?start_date=<date>&end_date=<date>&user_id=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pipelines",
								":id",
								"conversion_statistics"
							],
							"query": [
								{
									"key": "start_date",
									"value": "<date>",
									"description": "(Required) The start of the period. Date in format of YYYY-MM-DD."
								},
								{
									"key": "end_date",
									"value": "<date>",
									"description": "(Required) The end of the period. Date in format of YYYY-MM-DD."
								},
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "The ID of the user who's pipeline metrics statistics to fetch. If omitted, the authorized user will be used."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the pipeline"
								}
							]
						},
						"description": "Returns all stage-to-stage conversion and pipeline-to-close rates for the given time period."
					},
					"response": [
						{
							"name": "Get pipeline deals conversion rates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pipelines/:id/conversion_statistics?start_date=<date>&end_date=<date>&user_id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pipelines",
										":id",
										"conversion_statistics"
									],
									"query": [
										{
											"key": "start_date",
											"value": "<date>"
										},
										{
											"key": "end_date",
											"value": "<date>"
										},
										{
											"key": "user_id",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the pipeline"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"stage_conversions\": [\n      {\n        \"from_stage_id\": 1,\n        \"to_stage_id\": 2,\n        \"conversion_rate\": 0\n      }\n    ],\n    \"won_conversion\": 0,\n    \"lost_conversion\": 0\n  }\n}"
						}
					]
				},
				{
					"name": "Get deals in a pipeline",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pipelines/:id/deals?filter_id=<integer>&user_id=<integer>&everyone=<number>&stage_id=<integer>&start=0&limit=<integer>&get_summary=<number>&totals_convert_currency=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pipelines",
								":id",
								"deals"
							],
							"query": [
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "If supplied, only deals matching the given filter will be returned"
								},
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "If supplied, `filter_id` will not be considered and only deals owned by the given user will be returned. If omitted, deals owned by the authorized user will be returned."
								},
								{
									"key": "everyone",
									"value": "<number>",
									"description": "If supplied, `filter_id` and `user_id` will not be considered – instead, deals owned by everyone will be returned"
								},
								{
									"key": "stage_id",
									"value": "<integer>",
									"description": "If supplied, only deals within the given stage will be returned"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "get_summary",
									"value": "<number>",
									"description": "Whether to include a summary of the pipeline in the `additional_data` or not"
								},
								{
									"key": "totals_convert_currency",
									"value": "<string>",
									"description": "The 3-letter currency code of any of the supported currencies. When supplied, `per_stages_converted` is returned inside `deals_summary` inside `additional_data` which contains the currency-converted total amounts in the given currency per each stage. You may also set this parameter to `default_currency` in which case users default currency is used. Only works when `get_summary` parameter flag is enabled."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the pipeline"
								}
							]
						},
						"description": "Lists deals in a specific pipeline across all its stages. If no parameters are provided open deals owned by the authorized user will be returned. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Deals#getDeals\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/deals?pipeline_id={id}</a> instead."
					},
					"response": [
						{
							"name": "Get deals in a stage",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pipelines/:id/deals?filter_id=<integer>&user_id=<integer>&everyone=<number>&stage_id=<integer>&start=0&limit=<integer>&get_summary=<number>&totals_convert_currency=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pipelines",
										":id",
										"deals"
									],
									"query": [
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "everyone",
											"value": "<number>"
										},
										{
											"key": "stage_id",
											"value": "<integer>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "get_summary",
											"value": "<number>"
										},
										{
											"key": "totals_convert_currency",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the pipeline"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"creator_user_id\": 123,\n      \"user_id\": 456,\n      \"person_id\": 1,\n      \"org_id\": 2,\n      \"stage_id\": 2,\n      \"title\": \"Deal One\",\n      \"value\": 5000,\n      \"currency\": \"EUR\",\n      \"add_time\": \"2019-05-29 04:21:51\",\n      \"update_time\": \"2019-05-29 04:21:51\",\n      \"stage_change_time\": \"2019-11-28 15:41:22\",\n      \"active\": true,\n      \"deleted\": false,\n      \"status\": \"open\",\n      \"probability\": null,\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": null,\n      \"last_activity_date\": null,\n      \"lost_reason\": null,\n      \"visible_to\": \"1\",\n      \"close_time\": null,\n      \"pipeline_id\": 1,\n      \"won_time\": \"2019-11-27 11:40:36\",\n      \"first_won_time\": \"2019-11-27 11:40:36\",\n      \"lost_time\": \"2019-11-27 11:40:36\",\n      \"products_count\": 0,\n      \"files_count\": 0,\n      \"notes_count\": 2,\n      \"followers_count\": 0,\n      \"email_messages_count\": 4,\n      \"activities_count\": 1,\n      \"done_activities_count\": 0,\n      \"undone_activities_count\": 1,\n      \"participants_count\": 1,\n      \"expected_close_date\": \"2019-06-29\",\n      \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n      \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n      \"label\": \"11\",\n      \"stage_order_nr\": 2,\n      \"person_name\": \"Person\",\n      \"org_name\": \"Organization\",\n      \"next_activity_subject\": \"Call\",\n      \"next_activity_type\": \"call\",\n      \"next_activity_duration\": \"00:30:00\",\n      \"next_activity_note\": \"Note content\",\n      \"formatted_value\": \"€5,000\",\n      \"weighted_value\": 5000,\n      \"formatted_weighted_value\": \"€5,000\",\n      \"weighted_value_currency\": \"EUR\",\n      \"rotten_time\": null,\n      \"owner_name\": \"Creator\",\n      \"cc_email\": \"company+deal1@pipedrivemail.com\",\n      \"org_hidden\": false,\n      \"person_hidden\": false\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get deals movements in pipeline",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pipelines/:id/movement_statistics?start_date=<date>&end_date=<date>&user_id=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pipelines",
								":id",
								"movement_statistics"
							],
							"query": [
								{
									"key": "start_date",
									"value": "<date>",
									"description": "(Required) The start of the period. Date in format of YYYY-MM-DD."
								},
								{
									"key": "end_date",
									"value": "<date>",
									"description": "(Required) The end of the period. Date in format of YYYY-MM-DD."
								},
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "The ID of the user who's pipeline statistics to fetch. If omitted, the authorized user will be used."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the pipeline"
								}
							]
						},
						"description": "Returns statistics for deals movements for the given time period."
					},
					"response": [
						{
							"name": "Get pipeline deals conversion rates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pipelines/:id/movement_statistics?start_date=<date>&end_date=<date>&user_id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pipelines",
										":id",
										"movement_statistics"
									],
									"query": [
										{
											"key": "start_date",
											"value": "<date>"
										},
										{
											"key": "end_date",
											"value": "<date>"
										},
										{
											"key": "user_id",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the pipeline"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"movements_between_stages\": {\n      \"count\": 1\n    },\n    \"new_deals\": {\n      \"count\": 1,\n      \"deals_ids\": [\n        1,\n        2\n      ],\n      \"values\": {\n        \"USD\": 10\n      },\n      \"formatted_values\": {\n        \"USD\": \"US$10\"\n      }\n    },\n    \"deals_left_open\": {\n      \"count\": 1,\n      \"deals_ids\": [\n        1,\n        2\n      ],\n      \"values\": {\n        \"USD\": 10\n      },\n      \"formatted_values\": {\n        \"USD\": \"US$10\"\n      }\n    },\n    \"won_deals\": {\n      \"count\": 1,\n      \"deals_ids\": [\n        1,\n        2\n      ],\n      \"values\": {\n        \"USD\": 10\n      },\n      \"formatted_values\": {\n        \"USD\": \"US$10\"\n      }\n    },\n    \"lost_deals\": {\n      \"count\": 1,\n      \"deals_ids\": [\n        1,\n        2\n      ],\n      \"values\": {\n        \"USD\": 10\n      },\n      \"formatted_values\": {\n        \"USD\": \"US$10\"\n      }\n    },\n    \"average_age_in_days\": {\n      \"across_all_stages\": 2,\n      \"by_stages\": [\n        {\n          \"stage_id\": 10,\n          \"value\": 15\n        }\n      ]\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Pipelines are essentially ordered collections of stages.\n"
		},
		{
			"name": "ProductFields",
			"item": [
				{
					"name": "Delete multiple product fields in bulk",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/productFields?ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productFields"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) The comma-separated field IDs to delete"
								}
							]
						},
						"description": "Marks multiple fields as deleted."
					},
					"response": [
						{
							"name": "Mark multiple product fields as deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productFields?ids=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productFields"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": [\n      32,\n      35\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get all product fields",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/productFields?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productFields"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Returns data about all product fields."
					},
					"response": [
						{
							"name": "Get data about all product fields",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productFields?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productFields"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 20,\n      \"key\": \"name\",\n      \"name\": \"Name\",\n      \"order_nr\": 1,\n      \"picklist_data\": null,\n      \"field_type\": \"varchar\",\n      \"add_time\": \"2019-11-25 13:34:03\",\n      \"update_time\": \"2019-11-25 13:34:02\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": false,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": false,\n      \"add_visible_flag\": true,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"mandatory_flag\": true\n    },\n    {\n      \"id\": 24,\n      \"key\": \"visible_to\",\n      \"name\": \"Visible to\",\n      \"order_nr\": 5,\n      \"field_type\": \"double\",\n      \"add_time\": \"2019-11-25 13:34:03\",\n      \"update_time\": \"2019-11-25 13:34:02\",\n      \"last_updated_by_user_id\": 1,\n      \"created_by_user_id\": 1,\n      \"active_flag\": true,\n      \"edit_flag\": false,\n      \"index_visible_flag\": true,\n      \"details_visible_flag\": true,\n      \"add_visible_flag\": false,\n      \"important_flag\": false,\n      \"bulk_edit_allowed\": true,\n      \"searchable_flag\": false,\n      \"filtering_allowed\": true,\n      \"sortable_flag\": true,\n      \"options\": [\n        {\n          \"id\": 1,\n          \"label\": \"Owner & followers\"\n        },\n        {\n          \"id\": 3,\n          \"label\": \"Entire company\"\n        }\n      ],\n      \"mandatory_flag\": true\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a new product field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"field_type\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/productFields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productFields"
							]
						},
						"description": "Adds a new product field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>."
					},
					"response": [
						{
							"name": "Get the data for a single product field",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"field_type\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/productFields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productFields"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 32,\n    \"key\": \"397b0f545d134b479a5485041b33b0f0f3da2333\",\n    \"name\": \"Color\",\n    \"order_nr\": 13,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-12-20 11:01:24\",\n    \"update_time\": \"2019-12-20 11:01:24\",\n    \"last_updated_by_user_id\": 10999910,\n    \"created_by_user_id\": 10999910,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": true,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 9,\n        \"label\": \"red\"\n      },\n      {\n        \"id\": 10,\n        \"label\": \"blue\"\n      },\n      {\n        \"id\": 11,\n        \"label\": \"lilac\"\n      }\n    ],\n    \"mandatory_flag\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a product field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/productFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product field"
								}
							]
						},
						"description": "Marks a product field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>."
					},
					"response": [
						{
							"name": "Delete a product field",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productFields/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productFields",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 32\n  }\n}"
						},
						{
							"name": "The product field with the specified ID does not exist or is inaccessible",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productFields/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productFields",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product field"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"The field is not found\"\n}"
						}
					]
				},
				{
					"name": "Get one product field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/productFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product field"
								}
							]
						},
						"description": "Returns data about a specific product field."
					},
					"response": [
						{
							"name": "Get the data for a single product field",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productFields/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productFields",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 32,\n    \"key\": \"397b0f545d134b479a5485041b33b0f0f3da2333\",\n    \"name\": \"Color\",\n    \"order_nr\": 13,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-12-20 11:01:24\",\n    \"update_time\": \"2019-12-20 11:01:24\",\n    \"last_updated_by_user_id\": 10999910,\n    \"created_by_user_id\": 10999910,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": true,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 9,\n        \"label\": \"red\"\n      },\n      {\n        \"id\": 10,\n        \"label\": \"blue\"\n      },\n      {\n        \"id\": 11,\n        \"label\": \"lilac\"\n      }\n    ],\n    \"mandatory_flag\": false\n  }\n}"
						},
						{
							"name": "The product field with the specified ID does not exist or is inaccessible",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/productFields/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productFields",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product field"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"The field is not found\"\n}"
						}
					]
				},
				{
					"name": "Update a product field",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/productFields/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productFields",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product field"
								}
							]
						},
						"description": "Updates a product field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields' values</a>."
					},
					"response": [
						{
							"name": "Get the data for a single product field",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": [\n    \"<object>\",\n    \"<object>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/productFields/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"productFields",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product field"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 32,\n    \"key\": \"397b0f545d134b479a5485041b33b0f0f3da2333\",\n    \"name\": \"Color\",\n    \"order_nr\": 13,\n    \"field_type\": \"enum\",\n    \"add_time\": \"2019-12-20 11:01:24\",\n    \"update_time\": \"2019-12-20 11:01:24\",\n    \"last_updated_by_user_id\": 10999910,\n    \"created_by_user_id\": 10999910,\n    \"active_flag\": true,\n    \"edit_flag\": true,\n    \"index_visible_flag\": true,\n    \"details_visible_flag\": true,\n    \"add_visible_flag\": true,\n    \"important_flag\": false,\n    \"bulk_edit_allowed\": true,\n    \"searchable_flag\": false,\n    \"filtering_allowed\": true,\n    \"sortable_flag\": true,\n    \"options\": [\n      {\n        \"id\": 9,\n        \"label\": \"red\"\n      },\n      {\n        \"id\": 10,\n        \"label\": \"blue\"\n      },\n      {\n        \"id\": 11,\n        \"label\": \"lilac\"\n      }\n    ],\n    \"mandatory_flag\": false\n  }\n}"
						}
					]
				}
			],
			"description": "Product fields represent the near-complete schema for a product in the context of the company of the authorized user. Each company can have a different schema for their products, with various custom fields. In the context of using product fields as a schema for defining the data fields of a product, it must be kept in mind that some types of custom fields can have additional data fields which are not separate product fields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of product fields. For example, if there is a monetary field with the key `ffk9s9` stored on the account, `ffk9s9` would hold the numeric value of the field, and `ffk9s9_currency` would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one product and list its keys.\n"
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Get all products",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products?user_id=<integer>&filter_id=<integer>&ids=<integer>&ids=<integer>&first_char=<string>&get_summary=<boolean>&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "If supplied, only products owned by the given user will be returned"
								},
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "The ID of the filter to use"
								},
								{
									"key": "ids",
									"value": "<integer>",
									"description": "An array of integers with the IDs of the products that should be returned in the response"
								},
								{
									"key": "ids",
									"value": "<integer>",
									"description": "An array of integers with the IDs of the products that should be returned in the response"
								},
								{
									"key": "first_char",
									"value": "<string>",
									"description": "If supplied, only products whose name starts with the specified letter will be returned (case-insensitive)"
								},
								{
									"key": "get_summary",
									"value": "<boolean>",
									"description": "If supplied, the response will return the total numbers of products in the `additional_data.summary.total_count` property"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Returns data about all products."
					},
					"response": [
						{
							"name": "List of products",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products?user_id=<integer>&filter_id=<integer>&ids=<integer>&ids=<integer>&first_char=<string>&get_summary=<boolean>&start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "ids",
											"value": "<integer>"
										},
										{
											"key": "ids",
											"value": "<integer>"
										},
										{
											"key": "first_char",
											"value": "<string>"
										},
										{
											"key": "get_summary",
											"value": "<boolean>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Mechanical Pencil\",\n      \"code\": \"MPENCIL\",\n      \"description\": null,\n      \"unit\": \"\",\n      \"tax\": 0,\n      \"category\": null,\n      \"active_flag\": true,\n      \"selectable\": true,\n      \"first_char\": \"m\",\n      \"visible_to\": \"3\",\n      \"owner_id\": {\n        \"id\": 10100010,\n        \"name\": \"Test User\",\n        \"email\": \"example@test.com\",\n        \"has_pic\": true,\n        \"pic_hash\": \"5df5332929fab76702207f38b29a5d88\",\n        \"active_flag\": true,\n        \"value\": 10100010\n      },\n      \"files_count\": null,\n      \"add_time\": \"2019-12-19 11:36:49\",\n      \"update_time\": \"2019-12-19 11:36:49\",\n      \"billing_frequency\": \"weekly\",\n      \"billing_frequency_cycles\": null,\n      \"prices\": [\n        {\n          \"id\": 1,\n          \"product_id\": 1,\n          \"price\": 5,\n          \"currency\": \"EUR\",\n          \"cost\": 2,\n          \"overhead_cost\": 3,\n          \"notes\": \"this is a note\"\n        }\n      ]\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 50,\n      \"next_start\": 25,\n      \"more_items_in_collection\": true\n    },\n    \"summary\": {\n      \"total_count\": \"35\"\n    }\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"10100010\": {\n        \"id\": 10100010,\n        \"name\": \"Test User\",\n        \"email\": \"example@test.com\",\n        \"has_pic\": true,\n        \"pic_hash\": \"5df5332929fab76702207f38b29a5d88\",\n        \"active_flag\": true\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a product",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"code\": \"<string>\",\n  \"description\": \"<string>\",\n  \"unit\": \"<string>\",\n  \"tax\": 0,\n  \"active_flag\": true,\n  \"selectable\": true,\n  \"visible_to\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"prices\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"billing_frequency\": \"one-time\",\n  \"billing_frequency_cycles\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						},
						"description": "Adds a new product to the Products inventory. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-product\" target=\"_blank\" rel=\"noopener noreferrer\">adding a product</a>."
					},
					"response": [
						{
							"name": "Add product data",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"code\": \"<string>\",\n  \"description\": \"<string>\",\n  \"unit\": \"<string>\",\n  \"tax\": 0,\n  \"active_flag\": true,\n  \"selectable\": true,\n  \"visible_to\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"prices\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"billing_frequency\": \"one-time\",\n  \"billing_frequency_cycles\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Regular Pencil\",\n    \"code\": \"MPENCIL\",\n    \"description\": null,\n    \"unit\": \"\",\n    \"tax\": 0,\n    \"category\": null,\n    \"active_flag\": true,\n    \"selectable\": true,\n    \"first_char\": \"r\",\n    \"visible_to\": \"3\",\n    \"owner_id\": {\n      \"id\": 10100010,\n      \"name\": \"Example User\",\n      \"email\": \"example@test.com\",\n      \"has_pic\": true,\n      \"pic_hash\": \"5df5332929fab76702207f38b29a5d82\",\n      \"active_flag\": true,\n      \"value\": 10100010\n    },\n    \"files_count\": null,\n    \"add_time\": \"2019-12-19 11:36:49\",\n    \"update_time\": \"2019-12-26 13:35:17\",\n    \"billing_frequency\": \"one-time\",\n    \"billing_frequency_cycles\": null,\n    \"prices\": [\n      {\n        \"id\": 1,\n        \"product_id\": 1,\n        \"price\": 5,\n        \"currency\": \"EUR\",\n        \"cost\": 2,\n        \"overhead_cost\": 3,\n        \"notes\": \"this is a note\"\n      }\n    ]\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"10100010\": {\n        \"id\": 10100010,\n        \"name\": \"Example User\",\n        \"email\": \"example@test.com\",\n        \"has_pic\": true,\n        \"pic_hash\": \"5df5332929fab76702207f38b29a5d82\",\n        \"active_flag\": true\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Search products",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/search?term=<string>&fields=<string>&exact_match=<boolean>&include_fields=<string>&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"search"
							],
							"query": [
								{
									"key": "term",
									"value": "<string>",
									"description": "(Required) The search term to look for. Minimum 2 characters (or 1 if using `exact_match`). Please note that the search term has to be URL encoded."
								},
								{
									"key": "fields",
									"value": "<string>",
									"description": "A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: `address`, `varchar`, `text`, `varchar_auto`, `double`, `monetary` and `phone`. Read more about searching by custom fields <a href=\"https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>."
								},
								{
									"key": "exact_match",
									"value": "<boolean>",
									"description": "When enabled, only full exact matches against the given term are returned. It is <b>not</b> case sensitive."
								},
								{
									"key": "include_fields",
									"value": "<string>",
									"description": "Supports including optional fields in the results which are not provided by default"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start. Note that the pagination is based on main results and does not include related items when using `search_for_related_items` parameter."
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Searches all products by name, code and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/search?term=<string>&fields=<string>&exact_match=<boolean>&include_fields=<string>&start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"search"
									],
									"query": [
										{
											"key": "term",
											"value": "<string>"
										},
										{
											"key": "fields",
											"value": "<string>"
										},
										{
											"key": "exact_match",
											"value": "<boolean>"
										},
										{
											"key": "include_fields",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"items\": [\n      {\n        \"result_score\": 0.8766,\n        \"item\": {\n          \"id\": 1,\n          \"type\": \"product\",\n          \"name\": \"Some product\",\n          \"code\": 123,\n          \"visible_to\": 3,\n          \"owner\": {\n            \"id\": 1\n          },\n          \"custom_fields\": []\n        }\n      }\n    ]\n  },\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a product",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								}
							]
						},
						"description": "Marks a product as deleted. After 30 days, the product will be permanently deleted."
					},
					"response": [
						{
							"name": "Deletes a product",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Get one product",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								}
							]
						},
						"description": "Returns data about a specific product."
					},
					"response": [
						{
							"name": "Get product information by id",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Regular Pencil\",\n    \"code\": \"MPENCIL\",\n    \"description\": null,\n    \"unit\": \"\",\n    \"tax\": 0,\n    \"category\": null,\n    \"active_flag\": true,\n    \"selectable\": true,\n    \"first_char\": \"r\",\n    \"visible_to\": \"3\",\n    \"owner_id\": {\n      \"id\": 10100010,\n      \"name\": \"Example User\",\n      \"email\": \"example@test.com\",\n      \"has_pic\": true,\n      \"pic_hash\": \"5df5332929fab76702207f38b29a5d82\",\n      \"active_flag\": true,\n      \"value\": 10100010\n    },\n    \"files_count\": null,\n    \"add_time\": \"2019-12-19 11:36:49\",\n    \"update_time\": \"2019-12-26 13:35:17\",\n    \"billing_frequency\": \"weekly\",\n    \"billing_frequency_cycles\": 52,\n    \"prices\": [\n      {\n        \"id\": 1,\n        \"product_id\": 1,\n        \"price\": 5,\n        \"currency\": \"EUR\",\n        \"cost\": 2,\n        \"overhead_cost\": 3,\n        \"notes\": \"this is a note\"\n      }\n    ]\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"10100010\": {\n        \"id\": 10100010,\n        \"name\": \"Example User\",\n        \"email\": \"example@test.com\",\n        \"has_pic\": true,\n        \"pic_hash\": \"5df5332929fab76702207f38b29a5d82\",\n        \"active_flag\": true\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update a product",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"code\": \"<string>\",\n  \"description\": \"<string>\",\n  \"unit\": \"<string>\",\n  \"tax\": 0,\n  \"active_flag\": true,\n  \"selectable\": true,\n  \"visible_to\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"prices\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"billing_frequency\": \"<string>\",\n  \"billing_frequency_cycles\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								}
							]
						},
						"description": "Updates product data."
					},
					"response": [
						{
							"name": "Updates product data",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"code\": \"<string>\",\n  \"description\": \"<string>\",\n  \"unit\": \"<string>\",\n  \"tax\": 0,\n  \"active_flag\": true,\n  \"selectable\": true,\n  \"visible_to\": \"<string>\",\n  \"owner_id\": \"<integer>\",\n  \"prices\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"billing_frequency\": \"<string>\",\n  \"billing_frequency_cycles\": \"<integer>\",\n  \"voluptate_d\": 54434098.74465796,\n  \"culpac\": 81007192.9434765,\n  \"Duisb3\": \"sunt consequat velit consectetur\",\n  \"aute1cf\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/products/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Regular Pencil\",\n    \"code\": \"MPENCIL\",\n    \"description\": null,\n    \"unit\": \"\",\n    \"tax\": 0,\n    \"category\": null,\n    \"active_flag\": true,\n    \"selectable\": true,\n    \"first_char\": \"r\",\n    \"visible_to\": \"3\",\n    \"owner_id\": {\n      \"id\": 10100010,\n      \"name\": \"Example User\",\n      \"email\": \"example@test.com\",\n      \"has_pic\": true,\n      \"pic_hash\": \"5df5332929fab76702207f38b29a5d82\",\n      \"active_flag\": true,\n      \"value\": 10100010\n    },\n    \"files_count\": null,\n    \"add_time\": \"2019-12-19 11:36:49\",\n    \"update_time\": \"2019-12-26 13:35:17\",\n    \"billing_frequency\": \"semi-annually\",\n    \"billing_frequency_cycles\": 4,\n    \"prices\": [\n      {\n        \"id\": 1,\n        \"product_id\": 1,\n        \"price\": 5,\n        \"currency\": \"EUR\",\n        \"cost\": 2,\n        \"overhead_cost\": 3,\n        \"notes\": \"this is a note\"\n      }\n    ]\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"10100010\": {\n        \"id\": 10100010,\n        \"name\": \"Example User\",\n        \"email\": \"example@test.com\",\n        \"has_pic\": true,\n        \"pic_hash\": \"5df5332929fab76702207f38b29a5d82\",\n        \"active_flag\": true\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get deals where a product is attached to",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/:id/deals?start=0&limit=<integer>&status=all_not_deleted",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id",
								"deals"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								},
								{
									"key": "status",
									"value": "all_not_deleted",
									"description": "Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								}
							]
						},
						"description": "Returns data about deals that have a product attached to it."
					},
					"response": [
						{
							"name": "The data of deals that have a product attached",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id/deals?start=0&limit=<integer>&status=all_not_deleted",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id",
										"deals"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "status",
											"value": "all_not_deleted"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"creator_user_id\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 8877\n      },\n      \"user_id\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true,\n        \"value\": 8877\n      },\n      \"person_id\": {\n        \"active_flag\": true,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"37244499911\",\n            \"primary\": true\n          }\n        ],\n        \"value\": 1101\n      },\n      \"org_id\": {\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\",\n        \"value\": 5\n      },\n      \"stage_id\": 2,\n      \"title\": \"Deal One\",\n      \"value\": 5000,\n      \"currency\": \"EUR\",\n      \"add_time\": \"2019-05-29 04:21:51\",\n      \"update_time\": \"2019-11-28 16:19:50\",\n      \"stage_change_time\": \"2019-11-28 15:41:22\",\n      \"active\": true,\n      \"deleted\": false,\n      \"status\": \"open\",\n      \"probability\": null,\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": null,\n      \"last_activity_date\": null,\n      \"lost_reason\": null,\n      \"visible_to\": \"1\",\n      \"close_time\": null,\n      \"pipeline_id\": 1,\n      \"won_time\": \"2019-11-27 11:40:36\",\n      \"first_won_time\": \"2019-11-27 11:40:36\",\n      \"lost_time\": \"2019-11-27 11:40:36\",\n      \"products_count\": 0,\n      \"files_count\": 0,\n      \"notes_count\": 2,\n      \"followers_count\": 0,\n      \"email_messages_count\": 4,\n      \"activities_count\": 1,\n      \"done_activities_count\": 0,\n      \"undone_activities_count\": 1,\n      \"participants_count\": 1,\n      \"expected_close_date\": \"2019-06-29\",\n      \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n      \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n      \"label\": \"11\",\n      \"stage_order_nr\": 2,\n      \"person_name\": \"Person\",\n      \"org_name\": \"Organization\",\n      \"next_activity_subject\": \"Call\",\n      \"next_activity_type\": \"call\",\n      \"next_activity_duration\": \"00:30:00\",\n      \"next_activity_note\": \"Note content\",\n      \"formatted_value\": \"€5,000\",\n      \"weighted_value\": 5000,\n      \"formatted_weighted_value\": \"€5,000\",\n      \"weighted_value_currency\": \"EUR\",\n      \"rotten_time\": null,\n      \"owner_name\": \"Creator\",\n      \"cc_email\": \"company+deal1@pipedrivemail.com\",\n      \"org_hidden\": false,\n      \"person_hidden\": false\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  },\n  \"related_objects\": {\n    \"user\": {\n      \"8877\": {\n        \"id\": 8877,\n        \"name\": \"Creator\",\n        \"email\": \"john.doe@pipedrive.com\",\n        \"has_pic\": false,\n        \"pic_hash\": null,\n        \"active_flag\": true\n      }\n    },\n    \"organization\": {\n      \"5\": {\n        \"id\": 5,\n        \"name\": \"Organization\",\n        \"people_count\": 2,\n        \"owner_id\": 8877,\n        \"address\": \"Mustamäe tee 3a, 10615 Tallinn\",\n        \"active_flag\": true,\n        \"cc_email\": \"org@pipedrivemail.com\"\n      }\n    },\n    \"person\": {\n      \"1101\": {\n        \"active_flag\": true,\n        \"id\": 1101,\n        \"name\": \"Person\",\n        \"email\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"person@pipedrive.com\",\n            \"primary\": true\n          }\n        ],\n        \"phone\": [\n          {\n            \"label\": \"work\",\n            \"value\": \"3421787767\",\n            \"primary\": true\n          }\n        ],\n        \"owner_id\": 8877\n      }\n    },\n    \"stage\": {\n      \"2\": {\n        \"id\": 2,\n        \"company_id\": 123,\n        \"order_nr\": 1,\n        \"name\": \"Stage Name\",\n        \"active_flag\": true,\n        \"deal_probability\": 100,\n        \"pipeline_id\": 1,\n        \"rotten_flag\": false,\n        \"rotten_days\": null,\n        \"add_time\": \"2015-12-08 13:54:06\",\n        \"update_time\": \"2015-12-08 13:54:06\",\n        \"pipeline_name\": \"Pipeline\",\n        \"pipeline_deal_probability\": true\n      }\n    },\n    \"pipeline\": {\n      \"1\": {\n        \"id\": 1,\n        \"name\": \"Pipeline\",\n        \"url_title\": \"Pipeline\",\n        \"order_nr\": 0,\n        \"active\": true,\n        \"deal_probability\": true,\n        \"add_time\": \"2015-12-08 10:00:24\",\n        \"update_time\": \"2015-12-08 10:00:24\"\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List files attached to a product",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/:id/files?start=0&limit=<integer>&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id",
								"files"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page. Please note that a maximum value of 100 is allowed."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Supported fields: `id`, `update_time`"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								}
							]
						},
						"description": "Lists files associated with a product."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id/files?start=0&limit=<integer>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id",
										"files"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"product_id\": 1,\n      \"add_time\": \"2020-09-16 11:19:36\",\n      \"update_time\": \"2020-09-16 11:19:36\",\n      \"file_name\": \"95781006_794143070992462_4330873630616453120_n_60817458877506f9eb74d03e5ef9ba061915b797998.jpg\",\n      \"file_type\": \"img\",\n      \"file_size\": 95116,\n      \"active_flag\": true,\n      \"inline_flag\": false,\n      \"remote_location\": \"s3\",\n      \"remote_id\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n      \"s3_bucket\": \"files\",\n      \"product_name\": \"contract.pdf\",\n      \"url\": \"https://app.pipedrive.com/api/v1/files/304/download\",\n      \"name\": \"95781006_794143070992462_4330873630616453120_n.jpg\",\n      \"description\": \"contract for client\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": true\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List followers of a product",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/:id/followers?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id",
								"followers"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								}
							]
						},
						"description": "Lists the followers of a product."
					},
					"response": [
						{
							"name": "Lists the followers of a product",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id/followers?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id",
										"followers"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"user_id\": 123,\n      \"id\": 456,\n      \"product_id\": 789,\n      \"add_time\": \"2021-08-03 12:07:05\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a follower to a product",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/:id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id",
								"followers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								}
							]
						},
						"description": "Adds a follower to a product."
					},
					"response": [
						{
							"name": "Adds a follower to a product",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/products/:id/followers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id",
										"followers"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"user_id\": 10100010,\n    \"id\": 1,\n    \"product_id\": 2,\n    \"add_time\": \"2019-12-24 12:02:04\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a follower from a product",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/:id/followers/:follower_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id",
								"followers",
								":follower_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								},
								{
									"key": "follower_id",
									"value": "<integer>",
									"description": "(Required) The ID of the relationship between the follower and the product"
								}
							]
						},
						"description": "Deletes a follower from a product."
					},
					"response": [
						{
							"name": "Deletes a follower from a product",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id/followers/:follower_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id",
										"followers",
										":follower_id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										},
										{
											"key": "follower_id",
											"value": "<integer>",
											"description": "(Required) The ID of the relationship between the follower and the product"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "List permitted users",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/:id/permittedUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":id",
								"permittedUsers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the product"
								}
							]
						},
						"description": "Lists users permitted to access a product."
					},
					"response": [
						{
							"name": "Lists users permitted to access a product",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id/permittedUsers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id",
										"permittedUsers"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the product"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    10100010,\n    22302444,\n    33511023\n  ]\n}"
						}
					]
				}
			],
			"description": "Products are the goods or services you are dealing with. Each product can have N different price points - firstly, each product can have a price in N different currencies, and secondly, each product can have N variations of itself, each having N prices in different currencies. Note that only one price per variation per currency is supported. Products can be instantiated to deals. In the context of instatiation, a custom price, quantity, duration and discount can be applied.\n"
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "Get all projects",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects?cursor=<string>&limit=<integer>&filter_id=<integer>&status=<string>&phase_id=<integer>&include_archived=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned."
								},
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "The ID of the filter to use"
								},
								{
									"key": "status",
									"value": "<string>",
									"description": "If supplied, includes only projects with the specified statuses. Possible values are `open`, `completed`, `canceled` and `deleted`. By default `deleted` projects are not returned."
								},
								{
									"key": "phase_id",
									"value": "<integer>",
									"description": "If supplied, only projects in specified phase are returned"
								},
								{
									"key": "include_archived",
									"value": "<boolean>",
									"description": "If supplied with `true` then archived projects are also included in the response. By default only not archived projects are returned."
								}
							]
						},
						"description": "Returns all projects. This is a cursor-paginated endpoint. For more information, please refer to our documentation on <a href=\"https://pipedrive.readme.io/docs/core-api-concepts-pagination\" target=\"_blank\" rel=\"noopener noreferrer\">pagination</a>."
					},
					"response": [
						{
							"name": "A list of projects.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects?cursor=<string>&limit=100&filter_id=<integer>&status=open,completed&phase_id=<integer>&include_archived=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "status",
											"value": "open,completed"
										},
										{
											"key": "phase_id",
											"value": "<integer>"
										},
										{
											"key": "include_archived",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 8,\n      \"title\": \"Project\",\n      \"description\": \"Project Description\",\n      \"status\": \"open\",\n      \"status_change_time\": \"2023-09-12 11:12:18.110\",\n      \"start_date\": \"2023-09-18\",\n      \"end_date\": \"2024-03-04\",\n      \"owner_id\": 19,\n      \"add_time\": \"2023-09-12 11:12:18.110\",\n      \"update_time\": \"2023-09-14 05:45:40.084\",\n      \"labels\": [\n        13,\n        14\n      ],\n      \"archive_time\": \"2023-09-15 11:12:18.110\",\n      \"deal_ids\": [\n        1,\n        2\n      ],\n      \"person_id\": 2,\n      \"org_id\": 3,\n      \"board_id\": 1,\n      \"phase_id\": 1\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"eyJhY3Rpdml0aWVzIjoyN30\"\n  }\n}"
						}
					]
				},
				{
					"name": "Add a project",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"board_id\": \"<number>\",\n  \"phase_id\": \"<number>\",\n  \"description\": \"<string>\",\n  \"status\": \"<string>\",\n  \"owner_id\": \"<number>\",\n  \"start_date\": \"<date>\",\n  \"end_date\": \"<date>\",\n  \"deal_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"org_id\": \"<number>\",\n  \"person_id\": \"<number>\",\n  \"labels\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"template_id\": \"<number>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							]
						},
						"description": "Adds a new project. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys."
					},
					"response": [
						{
							"name": "Created project.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"board_id\": \"<number>\",\n  \"phase_id\": \"<number>\",\n  \"description\": \"<string>\",\n  \"status\": \"<string>\",\n  \"owner_id\": \"<number>\",\n  \"start_date\": \"<date>\",\n  \"end_date\": \"<date>\",\n  \"deal_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"org_id\": \"<number>\",\n  \"person_id\": \"<number>\",\n  \"labels\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"template_id\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 8,\n    \"title\": \"Project\",\n    \"description\": \"Project Description\",\n    \"status\": \"open\",\n    \"status_change_time\": \"2023-09-12 11:12:18.110\",\n    \"start_date\": \"2023-09-18\",\n    \"end_date\": \"2024-03-04\",\n    \"owner_id\": 19,\n    \"add_time\": \"2023-09-12 11:12:18.110\",\n    \"update_time\": \"2023-09-14 05:45:40.084\",\n    \"labels\": [\n      13,\n      14\n    ],\n    \"archive_time\": \"2023-09-15 11:12:18.110\",\n    \"deal_ids\": [\n      1,\n      2\n    ],\n    \"person_id\": 2,\n    \"org_id\": 3,\n    \"board_id\": 1,\n    \"phase_id\": 1\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Get details of a project",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								}
							]
						},
						"description": "Returns the details of a specific project. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the `key` value of project fields."
					},
					"response": [
						{
							"name": "Get a project.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 8,\n    \"title\": \"Project\",\n    \"description\": \"Project Description\",\n    \"status\": \"open\",\n    \"status_change_time\": \"2023-09-12 11:12:18.110\",\n    \"start_date\": \"2023-09-18\",\n    \"end_date\": \"2024-03-04\",\n    \"owner_id\": 19,\n    \"add_time\": \"2023-09-12 11:12:18.110\",\n    \"update_time\": \"2023-09-14 05:45:40.084\",\n    \"labels\": [\n      13,\n      14\n    ],\n    \"archive_time\": \"2023-09-15 11:12:18.110\",\n    \"deal_ids\": [\n      1,\n      2\n    ],\n    \"person_id\": 2,\n    \"org_id\": 3,\n    \"board_id\": 1,\n    \"phase_id\": 1\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Update a project",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"board_id\": \"<number>\",\n  \"phase_id\": \"<number>\",\n  \"description\": \"<string>\",\n  \"status\": \"<string>\",\n  \"owner_id\": \"<number>\",\n  \"start_date\": \"<date>\",\n  \"end_date\": \"<date>\",\n  \"deal_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"org_id\": \"<number>\",\n  \"person_id\": \"<number>\",\n  \"labels\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/projects/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								}
							]
						},
						"description": "Updates a project."
					},
					"response": [
						{
							"name": "Updated project.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"board_id\": \"<number>\",\n  \"phase_id\": \"<number>\",\n  \"description\": \"<string>\",\n  \"status\": \"<string>\",\n  \"owner_id\": \"<number>\",\n  \"start_date\": \"<date>\",\n  \"end_date\": \"<date>\",\n  \"deal_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"org_id\": \"<number>\",\n  \"person_id\": \"<number>\",\n  \"labels\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 8,\n    \"title\": \"Project\",\n    \"description\": \"Project Description\",\n    \"status\": \"open\",\n    \"status_change_time\": \"2023-09-12 11:12:18.110\",\n    \"start_date\": \"2023-09-18\",\n    \"end_date\": \"2024-03-04\",\n    \"owner_id\": 19,\n    \"add_time\": \"2023-09-12 11:12:18.110\",\n    \"update_time\": \"2023-09-14 05:45:40.084\",\n    \"labels\": [\n      13,\n      14\n    ],\n    \"archive_time\": \"2023-09-15 11:12:18.110\",\n    \"deal_ids\": [\n      1,\n      2\n    ],\n    \"person_id\": 2,\n    \"org_id\": 3,\n    \"board_id\": 1,\n    \"phase_id\": 1\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Delete a project",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								}
							]
						},
						"description": "Marks a project as deleted."
					},
					"response": [
						{
							"name": "Delete a project.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 8\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Archive a project",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/:id/archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id",
								"archive"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								}
							]
						},
						"description": "Archives a project."
					},
					"response": [
						{
							"name": "Updated project.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"archive"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 8,\n    \"title\": \"Project\",\n    \"description\": \"Project Description\",\n    \"status\": \"open\",\n    \"status_change_time\": \"2023-09-12 11:12:18.110\",\n    \"start_date\": \"2023-09-18\",\n    \"end_date\": \"2024-03-04\",\n    \"owner_id\": 19,\n    \"add_time\": \"2023-09-12 11:12:18.110\",\n    \"update_time\": \"2023-09-14 05:45:40.084\",\n    \"labels\": [\n      13,\n      14\n    ],\n    \"archive_time\": \"2023-09-15 11:12:18.110\",\n    \"deal_ids\": [\n      1,\n      2\n    ],\n    \"person_id\": 2,\n    \"org_id\": 3,\n    \"board_id\": 1,\n    \"phase_id\": 1\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Returns project plan",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/:id/plan",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id",
								"plan"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								}
							]
						},
						"description": "Returns information about items in a project plan. Items consists of tasks and activities and are linked to specific project phase and group."
					},
					"response": [
						{
							"name": "Get a project plan.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/plan",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"plan"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"item_id\": 1,\n      \"item_type\": \"task\",\n      \"phase_id\": 2,\n      \"group_id\": 3\n    },\n    {\n      \"item_id\": 1,\n      \"item_type\": \"activity\",\n      \"phase_id\": 2,\n      \"group_id\": 3\n    }\n  ],\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Update activity in project plan",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"phase_id\": \"<number>\",\n  \"group_id\": \"<number>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/projects/:id/plan/activities/:activityId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id",
								"plan",
								"activities",
								":activityId"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								},
								{
									"key": "activityId",
									"value": "<integer>",
									"description": "(Required) The ID of the activity"
								}
							]
						},
						"description": "Updates an activity phase or group in a project."
					},
					"response": [
						{
							"name": "Updated activity in plan.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"phase_id\": \"<number>\",\n  \"group_id\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:id/plan/activities/:activityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"plan",
										"activities",
										":activityId"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										},
										{
											"key": "activityId",
											"value": "<integer>",
											"description": "(Required) The ID of the activity"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"item_id\": 1,\n    \"item_type\": \"activity\",\n    \"phase_id\": 2,\n    \"group_id\": 3\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Update task in project plan",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"phase_id\": \"<number>\",\n  \"group_id\": \"<number>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/projects/:id/plan/tasks/:taskId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id",
								"plan",
								"tasks",
								":taskId"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								},
								{
									"key": "taskId",
									"value": "<integer>",
									"description": "(Required) The ID of the task"
								}
							]
						},
						"description": "Updates a task phase or group in a project."
					},
					"response": [
						{
							"name": "Updated task in plan.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"phase_id\": \"<number>\",\n  \"group_id\": \"<number>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:id/plan/tasks/:taskId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"plan",
										"tasks",
										":taskId"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										},
										{
											"key": "taskId",
											"value": "<integer>",
											"description": "(Required) The ID of the task"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"item_id\": 1,\n    \"item_type\": \"task\",\n    \"phase_id\": 2,\n    \"group_id\": 3\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Returns project groups",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/:id/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id",
								"groups"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								}
							]
						},
						"description": "Returns all active groups under a specific project."
					},
					"response": [
						{
							"name": "Get a project groups.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"groups"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Group one\",\n      \"order_nr\": 1\n    }\n  ],\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Returns project tasks",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/:id/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id",
								"tasks"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								}
							]
						},
						"description": "Returns tasks linked to a specific project."
					},
					"response": [
						{
							"name": "A list of tasks.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"tasks"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"title\": \"Task 1\",\n      \"creator_id\": 2,\n      \"description\": \"Task description\",\n      \"done\": 0,\n      \"due_date\": \"2023-10-11\",\n      \"parent_task_id\": 2,\n      \"assignee_id\": 2,\n      \"add_time\": \"2023-09-14 08:14:40.288\",\n      \"update_time\": \"2023-09-14 08:14:40.288\",\n      \"marked_as_done_time\": \"2023-09-22 08:14:40.288\",\n      \"project_id\": 1\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"eyJhY3Rpdml0aWVzIjoyN30\"\n  }\n}"
						}
					]
				},
				{
					"name": "Returns project activities",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/:id/activities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":id",
								"activities"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project"
								}
							]
						},
						"description": "Returns activities linked to a specific project."
					},
					"response": [
						{
							"name": "A collection of activities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/activities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"activities"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 8,\n      \"company_id\": 22122,\n      \"user_id\": 1234,\n      \"done\": false,\n      \"type\": \"deadline\",\n      \"conference_meeting_client\": \"871b8bc88d3a1202\",\n      \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n      \"conference_meeting_id\": \"17058746701\",\n      \"due_date\": \"2022-06-09\",\n      \"due_time\": \"10:00\",\n      \"duration\": \"01:00\",\n      \"busy_flag\": true,\n      \"add_time\": \"2020-06-08 12:37:56\",\n      \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n      \"subject\": \"Deadline\",\n      \"public_description\": \"This is a description\",\n      \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n      \"org_id\": 5,\n      \"person_id\": 1101,\n      \"deal_id\": 300,\n      \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n      \"project_id\": null,\n      \"active_flag\": true,\n      \"update_time\": \"2020-08-08 12:37:56\",\n      \"update_user_id\": 5596,\n      \"source_timezone\": \"\",\n      \"location_subpremise\": \"\",\n      \"location_street_number\": \"3\",\n      \"location_route\": \"Mustamäe tee\",\n      \"location_sublocality\": \"Kristiine\",\n      \"location_locality\": \"Tallinn\",\n      \"location_admin_area_level_1\": \"Harju maakond\",\n      \"location_admin_area_level_2\": \"\",\n      \"location_country\": \"Estonia\",\n      \"location_postal_code\": \"10616\",\n      \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\"\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"eyJhY3Rpdml0aWVzIjoyN30\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get all project boards",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/boards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"boards"
							]
						},
						"description": "Returns all projects boards that are not deleted."
					},
					"response": [
						{
							"name": "A list of project board.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/boards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"boards"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Project Board\",\n      \"order_nr\": 1,\n      \"add_time\": \"2023-09-12 11:12:18\",\n      \"update_time\": \"2023-09-14 05:45:40\"\n    }\n  ],\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Get project phases",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/phases?board_id=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"phases"
							],
							"query": [
								{
									"key": "board_id",
									"value": "<integer>",
									"description": "(Required) ID of the board for which phases are requested"
								}
							]
						},
						"description": "Returns all active project phases under a specific board."
					},
					"response": [
						{
							"name": "A list of project phases.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/phases?board_id=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"phases"
									],
									"query": [
										{
											"key": "board_id",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 2,\n      \"name\": \"Project Phase\",\n      \"board_id\": 1,\n      \"order_nr\": 2,\n      \"add_time\": \"2023-09-12 11:12:18\",\n      \"update_time\": \"2023-09-14 05:45:40\"\n    }\n  ],\n  \"additional_data\": null\n}"
						}
					]
				}
			],
			"description": "Projects represent ongoing, completed or canceled projects attached to an organization, person or to deals. Each project has an owner and must be placed in a phase. Each project consists of standard data fields but can also contain a number of custom fields. The custom fields can be recognized by long hashes as keys.\n"
		},
		{
			"name": "ProjectTemplates",
			"item": [
				{
					"name": "Get details of a board",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/boards/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"boards",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project board"
								}
							]
						},
						"description": "Returns the details of a specific project board."
					},
					"response": [
						{
							"name": "Get a project board.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/boards/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"boards",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project board"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Project Board\",\n    \"order_nr\": 1,\n    \"add_time\": \"2023-09-12 11:12:18\",\n    \"update_time\": \"2023-09-14 05:45:40\"\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Get details of a phase",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projects/phases/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"phases",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project phase"
								}
							]
						},
						"description": "Returns the details of a specific project phase."
					},
					"response": [
						{
							"name": "Get a project phase.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projects/phases/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"phases",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project phase"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"name\": \"Project Phase\",\n    \"board_id\": 1,\n    \"order_nr\": 2,\n    \"add_time\": \"2023-09-12 11:12:18\",\n    \"update_time\": \"2023-09-14 05:45:40\"\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Get all project templates",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projectTemplates?cursor=<string>&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projectTemplates"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "For pagination, the limit of entries to be returned. If not provided, up to 500 items will be returned."
								}
							]
						},
						"description": "Returns all not deleted project templates. This is a cursor-paginated endpoint. For more information, please refer to our documentation on <a href=\"https://pipedrive.readme.io/docs/core-api-concepts-pagination\" target=\"_blank\" rel=\"noopener noreferrer\">pagination</a>."
					},
					"response": [
						{
							"name": "A list of project template.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projectTemplates?cursor=<string>&limit=500",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projectTemplates"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "500"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"title\": \"Template Title\",\n      \"description\": \"Template Description\",\n      \"projects_board_id\": 2,\n      \"owner_id\": 3,\n      \"add_time\": \"2023-09-14 08:14:40.288\",\n      \"update_time\": \"2023-09-14 08:14:40.288\"\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"eyJhY3Rpdml0aWVzIjoyN30\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get details of a template",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/projectTemplates/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projectTemplates",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the project template"
								}
							]
						},
						"description": "Returns the details of a specific project template."
					},
					"response": [
						{
							"name": "Get a project template.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/projectTemplates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projectTemplates",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the project template"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"title\": \"Template Title\",\n    \"description\": \"Template Description\",\n    \"projects_board_id\": 2,\n    \"owner_id\": 3,\n    \"add_time\": \"2023-09-14 08:14:40.288\",\n    \"update_time\": \"2023-09-14 08:14:40.288\"\n  },\n  \"additional_data\": null\n}"
						}
					]
				}
			],
			"description": "Project templates allow you to have reusable and dynamic structure to simplify creation of a project. Project template can contain information about activities, tasks and groups that will be used when creating a project.\n"
		},
		{
			"name": "Recents",
			"item": [
				{
					"name": "Get recents",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/recents?since_timestamp=<string>&items=<string>&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recents"
							],
							"query": [
								{
									"key": "since_timestamp",
									"value": "<string>",
									"description": "(Required) The timestamp in UTC. Format: YYYY-MM-DD HH:MM:SS."
								},
								{
									"key": "items",
									"value": "<string>",
									"description": "Multiple selection of item types to include in the query (optional)"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Returns data about all recent changes occurred after the given timestamp."
					},
					"response": [
						{
							"name": "List of items changed since \"since_timestamp\"",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recents?since_timestamp=<string>&items=<string>&start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recents"
									],
									"query": [
										{
											"key": "since_timestamp",
											"value": "<string>"
										},
										{
											"key": "items",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"item\": \"activity\",\n      \"id\": 8,\n      \"data\": {\n        \"id\": 8,\n        \"company_id\": 22122,\n        \"user_id\": 1234,\n        \"done\": false,\n        \"type\": \"deadline\",\n        \"reference_type\": \"scheduler-service\",\n        \"reference_id\": 7,\n        \"conference_meeting_client\": \"871b8bc88d3a1202\",\n        \"conference_meeting_url\": \"https://pipedrive.zoom.us/link\",\n        \"conference_meeting_id\": \"17058746701\",\n        \"due_date\": \"2020-06-09\",\n        \"due_time\": \"10:00\",\n        \"duration\": \"01:00\",\n        \"busy_flag\": true,\n        \"add_time\": \"2020-06-08 12:37:56\",\n        \"marked_as_done_time\": \"2020-08-08 08:08:38\",\n        \"last_notification_time\": \"2020-08-08 12:37:56\",\n        \"last_notification_user_id\": 7655,\n        \"notification_language_id\": 1,\n        \"subject\": \"Deadline\",\n        \"public_description\": \"This is a description\",\n        \"calendar_sync_include_context\": \"\",\n        \"location\": \"Mustamäe tee 3, Tallinn, Estonia\",\n        \"org_id\": 5,\n        \"person_id\": 1101,\n        \"deal_id\": 300,\n        \"lead_id\": \"46c3b0e1-db35-59ca-1828-4817378dff71\",\n        \"project_id\": null,\n        \"active_flag\": true,\n        \"update_time\": \"2020-08-08 12:37:56\",\n        \"update_user_id\": 5596,\n        \"gcal_event_id\": \"\",\n        \"google_calendar_id\": \"\",\n        \"google_calendar_etag\": \"\",\n        \"source_timezone\": \"\",\n        \"rec_rule\": \"RRULE:FREQ=WEEKLY;BYDAY=WE\",\n        \"rec_rule_extension\": \"\",\n        \"rec_master_activity_id\": 1,\n        \"series\": [],\n        \"note\": \"A note for the activity\",\n        \"created_by_user_id\": 1234,\n        \"location_subpremise\": \"\",\n        \"location_street_number\": \"3\",\n        \"location_route\": \"Mustamäe tee\",\n        \"location_sublocality\": \"Kristiine\",\n        \"location_locality\": \"Tallinn\",\n        \"location_admin_area_level_1\": \"Harju maakond\",\n        \"location_admin_area_level_2\": \"\",\n        \"location_country\": \"Estonia\",\n        \"location_postal_code\": \"10616\",\n        \"location_formatted_address\": \"Mustamäe tee 3, 10616 Tallinn, Estonia\",\n        \"attendees\": [\n          {\n            \"email_address\": \"attendee@pipedrivemail.com\",\n            \"is_organizer\": 0,\n            \"name\": \"Attendee\",\n            \"person_id\": 25312,\n            \"status\": \"noreply\",\n            \"user_id\": null\n          }\n        ],\n        \"participants\": [\n          {\n            \"person_id\": 17985,\n            \"primary_flag\": false\n          },\n          {\n            \"person_id\": 1101,\n            \"primary_flag\": true\n          }\n        ],\n        \"org_name\": \"Organization\",\n        \"person_name\": \"Person\",\n        \"deal_title\": \"Deal\",\n        \"owner_name\": \"Creator\",\n        \"person_dropbox_bcc\": \"company@pipedrivemail.com\",\n        \"deal_dropbox_bcc\": \"company+deal300@pipedrivemail.com\",\n        \"assigned_to_user_id\": 1235,\n        \"file\": {\n          \"id\": \"376892,\",\n          \"clean_name\": \"Audio 10:55:07.m4a\",\n          \"url\": \"https://pipedrive-files.s3-eu-west-1.amazonaws.com/Audio-recording.m4a\"\n        }\n      }\n    },\n    {\n      \"item\": \"deal\",\n      \"id\": 1,\n      \"data\": {\n        \"id\": 1,\n        \"creator_user_id\": 8877,\n        \"user_id\": 8877,\n        \"person_id\": 1101,\n        \"org_id\": 5,\n        \"stage_id\": 2,\n        \"title\": \"Deal One\",\n        \"value\": 5000,\n        \"currency\": \"EUR\",\n        \"add_time\": \"2019-05-29 04:21:51\",\n        \"update_time\": \"2019-11-28 16:19:50\",\n        \"stage_change_time\": \"2019-11-28 15:41:22\",\n        \"active\": true,\n        \"deleted\": false,\n        \"status\": \"open\",\n        \"probability\": null,\n        \"next_activity_date\": \"2019-11-29\",\n        \"next_activity_time\": \"11:30:00\",\n        \"next_activity_id\": 128,\n        \"last_activity_id\": null,\n        \"last_activity_date\": null,\n        \"lost_reason\": null,\n        \"visible_to\": \"1\",\n        \"close_time\": null,\n        \"pipeline_id\": 1,\n        \"won_time\": \"2019-11-27 11:40:36\",\n        \"first_won_time\": \"2019-11-27 11:40:36\",\n        \"lost_time\": \"2019-11-27 11:40:36\",\n        \"products_count\": 0,\n        \"files_count\": 0,\n        \"notes_count\": 2,\n        \"followers_count\": 0,\n        \"email_messages_count\": 4,\n        \"activities_count\": 1,\n        \"done_activities_count\": 0,\n        \"undone_activities_count\": 1,\n        \"participants_count\": 1,\n        \"expected_close_date\": \"2019-06-29\",\n        \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n        \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n        \"label\": \"11\",\n        \"stage_order_nr\": 2,\n        \"person_name\": \"Person\",\n        \"org_name\": \"Organization\",\n        \"next_activity_subject\": \"Call\",\n        \"next_activity_type\": \"call\",\n        \"next_activity_duration\": \"00:30:00\",\n        \"next_activity_note\": \"Note content\",\n        \"formatted_value\": \"€5,000\",\n        \"weighted_value\": 5000,\n        \"formatted_weighted_value\": \"€5,000\",\n        \"weighted_value_currency\": \"EUR\",\n        \"rotten_time\": null,\n        \"owner_name\": \"Creator\",\n        \"cc_email\": \"company+deal1@pipedrivemail.com\",\n        \"org_hidden\": false,\n        \"person_hidden\": false\n      }\n    }\n  ],\n  \"additional_data\": {\n    \"since_timestamp\": \"2020-10-10 00:00:00\",\n    \"last_timestamp_on_page\": \"2020-10-15 18:18:41\",\n    \"pagination\\\"\": {\n      \"start\": \"0,\",\n      \"limit\": \"100,\",\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Recent changes across all item types in Pipedrive (deals, persons, etc).\n"
		},
		{
			"name": "Roles",
			"item": [
				{
					"name": "Get all roles",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Returns all the roles within the company."
					},
					"response": [
						{
							"name": "Get all roles",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/roles?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"parent_role_id\": 1,\n      \"name\": \"(Unassigned users)\",\n      \"active_flag\": true,\n      \"assignment_count\": \"0\",\n      \"sub_role_count\": \"0\",\n      \"level\": 1\n    },\n    {\n      \"id\": 2,\n      \"parent_role_id\": 1,\n      \"name\": \"Admins\",\n      \"active_flag\": true,\n      \"assignment_count\": \"1\",\n      \"sub_role_count\": \"1\",\n      \"level\": 1\n    },\n    {\n      \"id\": 3,\n      \"parent_role_id\": 2,\n      \"name\": \"Reviewers\",\n      \"active_flag\": true,\n      \"assignment_count\": \"1\",\n      \"sub_role_count\": \"0\",\n      \"level\": 2\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"parent_role_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							]
						},
						"description": "Adds a new role."
					},
					"response": [
						{
							"name": "Add a role",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"parent_role_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Marks a role as deleted."
					},
					"response": [
						{
							"name": "Delete a role",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/roles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2\n  }\n}"
						}
					]
				},
				{
					"name": "Get one role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Returns the details of a specific role."
					},
					"response": [
						{
							"name": "Get one role",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/roles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"parent_role_id\": 1,\n    \"name\": \"Admins\",\n    \"active_flag\": true,\n    \"assignment_count\": \"1\",\n    \"sub_role_count\": \"1\"\n  },\n  \"additional_data\": {\n    \"settings\": {\n      \"deal_default_visibility\": 1,\n      \"lead_default_visibility\": 1,\n      \"org_default_visibility\": 1,\n      \"person_default_visibility\": 1,\n      \"product_default_visibility\": 1\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update role details",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_role_id\": \"<integer>\",\n  \"name\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Updates the parent role and/or the name of a specific role."
					},
					"response": [
						{
							"name": "Update role details",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"parent_role_id\": \"<integer>\",\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a role assignment",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles/:id/assignments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id",
								"assignments"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Removes the assigned user from a role and adds to the default role."
					},
					"response": [
						{
							"name": "Delete assignment from a role",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles/:id/assignments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id",
										"assignments"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2\n  }\n}"
						}
					]
				},
				{
					"name": "List role assignments",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles/:id/assignments?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id",
								"assignments"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Returns all users assigned to a role."
					},
					"response": [
						{
							"name": "List assignments for a role",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/roles/:id/assignments?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id",
										"assignments"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"user_id\": 1234567,\n      \"role_id\": 2,\n      \"parent_role_id\": 1,\n      \"name\": \"Admins\",\n      \"active_flag\": true,\n      \"type\": \"1\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add role assignment",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles/:id/assignments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id",
								"assignments"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Assigns a user to a role."
					},
					"response": [
						{
							"name": "Add assignment for a role",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles/:id/assignments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id",
										"assignments"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"user_id\": 1234567,\n    \"role_id\": 2\n  }\n}"
						}
					]
				},
				{
					"name": "List role settings",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles/:id/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id",
								"settings"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Returns the visibility settings of a specific role."
					},
					"response": [
						{
							"name": "List role settings",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/roles/:id/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id",
										"settings"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"deal_default_visibility\": 1,\n    \"lead_default_visibility\": 1,\n    \"org_default_visibility\": 1,\n    \"person_default_visibility\": 1,\n    \"product_default_visibility\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Add or update role setting",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"setting_key\": \"<string>\",\n  \"value\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles/:id/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id",
								"settings"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Adds or updates the visibility setting for a role."
					},
					"response": [
						{
							"name": "List role settings",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"setting_key\": \"<string>\",\n  \"value\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles/:id/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id",
										"settings"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"deal_default_visibility\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "List pipeline visibility for a role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles/:id/pipelines?visible=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id",
								"pipelines"
							],
							"query": [
								{
									"key": "visible",
									"value": "true",
									"description": "Whether to return the visible or hidden pipelines for the role"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Returns the list of either visible or hidden pipeline IDs for a specific role. For more information on pipeline visibility, please refer to the <a href=\"https://support.pipedrive.com/en/article/visibility-groups\" target=\"_blank\" rel=\"noopener noreferrer\">Visibility groups article</a>."
					},
					"response": [
						{
							"name": "Get either visible or hidden pipeline ids for a role",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/roles/:id/pipelines?visible=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id",
										"pipelines"
									],
									"query": [
										{
											"key": "visible",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"pipeline_ids\": [\n      2\n    ],\n    \"visible\": true\n  }\n}"
						}
					]
				},
				{
					"name": "Update pipeline visibility for a role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"visible_pipeline_ids\": \"<object>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles/:id/pipelines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":id",
								"pipelines"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the role"
								}
							]
						},
						"description": "Updates the specified pipelines to be visible and/or hidden for a specific role. For more information on pipeline visibility, please refer to the <a href=\"https://support.pipedrive.com/en/article/visibility-groups\" target=\"_blank\" rel=\"noopener noreferrer\">Visibility groups article</a>."
					},
					"response": [
						{
							"name": "Update pipeline visibility for a role",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"visible_pipeline_ids\": \"<object>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles/:id/pipelines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":id",
										"pipelines"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"pipeline_ids\": [\n      1,\n      2\n    ],\n    \"visible\": true\n  }\n}"
						}
					]
				}
			],
			"description": "Roles are a part of the Visibility groups’ feature that allow the admin user to categorize other users and dictate what items they will be allowed access to see.\n"
		},
		{
			"name": "Stages",
			"item": [
				{
					"name": "Delete multiple stages in bulk",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stages?ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages"
							],
							"query": [
								{
									"key": "ids",
									"value": "<string>",
									"description": "(Required) The comma-separated stage IDs to delete"
								}
							]
						},
						"description": "Marks multiple stages as deleted. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Stages#deleteStage\" target=\"_blank\" rel=\"noopener noreferrer\">DELETE /api/v2/stages/{id}</a> instead."
					},
					"response": [
						{
							"name": "Delete multiple stages",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages?ids=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									],
									"query": [
										{
											"key": "ids",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": [\n      1,\n      2\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get all stages",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stages?pipeline_id=<integer>&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages"
							],
							"query": [
								{
									"key": "pipeline_id",
									"value": "<integer>",
									"description": "The ID of the pipeline to fetch stages for. If omitted, stages for all pipelines will be fetched."
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							]
						},
						"description": "Returns data about all stages."
					},
					"response": [
						{
							"name": "Get all stages",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages?pipeline_id=<integer>&start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									],
									"query": [
										{
											"key": "pipeline_id",
											"value": "<integer>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"order_nr\": 1,\n      \"name\": \"Stage Name\",\n      \"active_flag\": true,\n      \"deal_probability\": 100,\n      \"pipeline_id\": 1,\n      \"rotten_flag\": false,\n      \"rotten_days\": 1,\n      \"add_time\": \"2017-08-03 12:51:18\",\n      \"update_time\": \"2020-03-23 13:15:25\",\n      \"pipeline_name\": \"Pipeline\",\n      \"pipeline_deal_probability\": false\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add a new stage",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"pipeline_id\": \"<integer>\",\n  \"deal_probability\": \"<integer>\",\n  \"rotten_flag\": \"<boolean>\",\n  \"rotten_days\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages"
							]
						},
						"description": "Adds a new stage, returns the ID upon success."
					},
					"response": [
						{
							"name": "Get all stages",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"pipeline_id\": \"<integer>\",\n  \"deal_probability\": \"<integer>\",\n  \"rotten_flag\": \"<boolean>\",\n  \"rotten_days\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/stages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"order_nr\": 1,\n    \"name\": \"Stage Name\",\n    \"active_flag\": true,\n    \"deal_probability\": 100,\n    \"pipeline_id\": 1,\n    \"rotten_flag\": false,\n    \"rotten_days\": 1,\n    \"add_time\": \"2017-08-03 12:51:18\",\n    \"update_time\": \"2020-03-23 13:15:25\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a stage",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stages/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the stage"
								}
							]
						},
						"description": "Marks a stage as deleted."
					},
					"response": [
						{
							"name": "Delete stage",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Get one stage",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stages/:id?everyone=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages",
								":id"
							],
							"query": [
								{
									"key": "everyone",
									"value": "<number>",
									"description": "If `everyone=1` is provided, deals summary will return deals owned by every user"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the stage"
								}
							]
						},
						"description": "Returns data about a specific stage."
					},
					"response": [
						{
							"name": "Get stage",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages/:id?everyone=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"query": [
										{
											"key": "everyone",
											"value": "<number>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"order_nr\": 1,\n    \"name\": \"Stage Name\",\n    \"active_flag\": true,\n    \"deal_probability\": 100,\n    \"pipeline_id\": 1,\n    \"rotten_flag\": false,\n    \"rotten_days\": 1,\n    \"add_time\": \"2017-08-03 12:51:18\",\n    \"update_time\": \"2020-03-23 13:15:25\",\n    \"deals_summary\": {\n      \"per_stages\": {\n        \"1\": {\n          \"EUR\": {\n            \"count\": 1,\n            \"value\": 10,\n            \"value_formatted\": \"10 €\",\n            \"weighted_value\": 10,\n            \"weighted_value_formatted\": \"10€\"\n          }\n        }\n      },\n      \"per_currency\": {\n        \"EUR\": 1\n      },\n      \"total_count\": 1,\n      \"per_currency_full\": {\n        \"EUR\": {\n          \"count\": 1,\n          \"value\": 10\n        }\n      }\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update stage details",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"pipeline_id\": \"<integer>\",\n  \"deal_probability\": \"<integer>\",\n  \"rotten_flag\": \"<boolean>\",\n  \"rotten_days\": \"<integer>\",\n  \"order_nr\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stages/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the stage"
								}
							]
						},
						"description": "Updates the properties of a stage."
					},
					"response": [
						{
							"name": "Get all stages",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"pipeline_id\": \"<integer>\",\n  \"deal_probability\": \"<integer>\",\n  \"rotten_flag\": \"<boolean>\",\n  \"rotten_days\": \"<integer>\",\n  \"order_nr\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/stages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"order_nr\": 1,\n    \"name\": \"Stage Name\",\n    \"active_flag\": true,\n    \"deal_probability\": 100,\n    \"pipeline_id\": 1,\n    \"rotten_flag\": false,\n    \"rotten_days\": 1,\n    \"add_time\": \"2017-08-03 12:51:18\",\n    \"update_time\": \"2020-03-23 13:15:25\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get deals in a stage",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stages/:id/deals?filter_id=<integer>&user_id=<integer>&everyone=<number>&start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages",
								":id",
								"deals"
							],
							"query": [
								{
									"key": "filter_id",
									"value": "<integer>",
									"description": "If supplied, only deals matching the given filter will be returned"
								},
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "If supplied, `filter_id` will not be considered and only deals owned by the given user will be returned. If omitted, deals owned by the authorized user will be returned."
								},
								{
									"key": "everyone",
									"value": "<number>",
									"description": "If supplied, `filter_id` and `user_id` will not be considered – instead, deals owned by everyone will be returned"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the stage"
								}
							]
						},
						"description": "Lists deals in a specific stage. If no parameters are provided open deals owned by the authorized user will be returned. <br>This endpoint has been deprecated. Please use <a href=\"https://developers.pipedrive.com/docs/api/v1/Deals#getDeals\" target=\"_blank\" rel=\"noopener noreferrer\">GET /api/v2/deals?stage_id={id}</a> instead."
					},
					"response": [
						{
							"name": "Get deals in a stage",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages/:id/deals?filter_id=<integer>&user_id=<integer>&everyone=<number>&start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id",
										"deals"
									],
									"query": [
										{
											"key": "filter_id",
											"value": "<integer>"
										},
										{
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"key": "everyone",
											"value": "<number>"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"creator_user_id\": 123,\n      \"user_id\": 456,\n      \"person_id\": 1,\n      \"org_id\": 2,\n      \"stage_id\": 2,\n      \"title\": \"Deal One\",\n      \"value\": 5000,\n      \"currency\": \"EUR\",\n      \"add_time\": \"2019-05-29 04:21:51\",\n      \"update_time\": \"2019-05-29 04:21:51\",\n      \"stage_change_time\": \"2019-11-28 15:41:22\",\n      \"active\": true,\n      \"deleted\": false,\n      \"status\": \"open\",\n      \"probability\": null,\n      \"next_activity_date\": \"2019-11-29\",\n      \"next_activity_time\": \"11:30:00\",\n      \"next_activity_id\": 128,\n      \"last_activity_id\": null,\n      \"last_activity_date\": null,\n      \"lost_reason\": null,\n      \"visible_to\": \"1\",\n      \"close_time\": null,\n      \"pipeline_id\": 1,\n      \"won_time\": \"2019-11-27 11:40:36\",\n      \"first_won_time\": \"2019-11-27 11:40:36\",\n      \"lost_time\": \"2019-11-27 11:40:36\",\n      \"products_count\": 0,\n      \"files_count\": 0,\n      \"notes_count\": 2,\n      \"followers_count\": 0,\n      \"email_messages_count\": 4,\n      \"activities_count\": 1,\n      \"done_activities_count\": 0,\n      \"undone_activities_count\": 1,\n      \"participants_count\": 1,\n      \"expected_close_date\": \"2019-06-29\",\n      \"last_incoming_mail_time\": \"2019-05-29 18:21:42\",\n      \"last_outgoing_mail_time\": \"2019-05-30 03:45:35\",\n      \"label\": \"11\",\n      \"stage_order_nr\": 2,\n      \"person_name\": \"Person\",\n      \"org_name\": \"Organization\",\n      \"next_activity_subject\": \"Call\",\n      \"next_activity_type\": \"call\",\n      \"next_activity_duration\": \"00:30:00\",\n      \"next_activity_note\": \"Note content\",\n      \"formatted_value\": \"€5,000\",\n      \"weighted_value\": 5000,\n      \"formatted_weighted_value\": \"€5,000\",\n      \"weighted_value_currency\": \"EUR\",\n      \"rotten_time\": null,\n      \"owner_name\": \"Creator\",\n      \"cc_email\": \"company+deal1@pipedrivemail.com\",\n      \"org_hidden\": false,\n      \"person_hidden\": false\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "Stage is a logical component of a pipeline, and essentially a bucket that can hold a number of deals. In the context of the pipeline a stage belongs to, it has an order number which defines the order of stages in that pipeline.\n"
		},
		{
			"name": "Subscriptions",
			"item": [
				{
					"name": "Get details of a subscription",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the subscription"
								}
							]
						},
						"description": "Returns details of an installment or a recurring subscription."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the subscription"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 21,\n    \"user_id\": 10382754,\n    \"deal_id\": 1121,\n    \"is_active\": true,\n    \"cycle_amount\": 100,\n    \"cycles_count\": 15,\n    \"infinite\": true,\n    \"currency\": \"USD\",\n    \"start_date\": \"2020-10-20\",\n    \"end_date\": \"2022-01-20\",\n    \"description\": \"pizza delivery\",\n    \"add_time\": \"2020-07-07 08:32:57\",\n    \"update_time\": \"2020-07-07 08:32:57\",\n    \"lifetime_value\": 1504.5,\n    \"cadence_type\": \"monthly\",\n    \"final_status\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a subscription",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the subscription"
								}
							]
						},
						"description": "Marks an installment or a recurring subscription as deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the subscription"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 21,\n    \"user_id\": 10382754,\n    \"deal_id\": 1121,\n    \"is_active\": true,\n    \"cycle_amount\": 100,\n    \"cycles_count\": 15,\n    \"infinite\": true,\n    \"currency\": \"USD\",\n    \"start_date\": \"2020-10-20\",\n    \"end_date\": \"2022-01-20\",\n    \"description\": \"pizza delivery\",\n    \"add_time\": \"2020-07-07 08:32:57\",\n    \"update_time\": \"2020-07-07 08:32:57\",\n    \"lifetime_value\": 1504.5,\n    \"cadence_type\": \"monthly\",\n    \"final_status\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Find subscription by deal",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions/find/:dealId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								"find",
								":dealId"
							],
							"variable": [
								{
									"key": "dealId",
									"value": "<integer>",
									"description": "(Required) The ID of the deal"
								}
							]
						},
						"description": "Returns details of an installment or a recurring subscription by the deal ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/find/:dealId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"find",
										":dealId"
									],
									"variable": [
										{
											"key": "dealId",
											"value": "<integer>",
											"description": "(Required) The ID of the deal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 21,\n    \"user_id\": 10382754,\n    \"deal_id\": 1121,\n    \"is_active\": true,\n    \"cycle_amount\": 100,\n    \"cycles_count\": 15,\n    \"infinite\": true,\n    \"currency\": \"USD\",\n    \"start_date\": \"2020-10-20\",\n    \"end_date\": \"2022-01-20\",\n    \"description\": \"pizza delivery\",\n    \"add_time\": \"2020-07-07 08:32:57\",\n    \"update_time\": \"2020-07-07 08:32:57\",\n    \"lifetime_value\": 1504.5,\n    \"cadence_type\": \"monthly\",\n    \"final_status\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Get all payments of a subscription",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions/:id/payments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								":id",
								"payments"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the subscription"
								}
							]
						},
						"description": "Returns all payments of an installment or recurring subscription."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/:id/payments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										":id",
										"payments"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the subscription"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 59,\n      \"subscription_id\": 22,\n      \"deal_id\": 35,\n      \"is_active\": true,\n      \"amount\": 1000,\n      \"currency\": \"usd\",\n      \"change_amount\": 1000,\n      \"due_at\": \"2020-10-05\",\n      \"revenue_movement_type\": \"new\",\n      \"payment_type\": \"recurring\",\n      \"description\": \"\",\n      \"add_time\": \"2020-07-30 13:54:59\",\n      \"update_time\": \"2020-07-30 13:54:59\"\n    },\n    {\n      \"id\": 62,\n      \"subscription_id\": 22,\n      \"deal_id\": 35,\n      \"is_active\": true,\n      \"amount\": 100,\n      \"currency\": \"usd\",\n      \"change_amount\": 0,\n      \"due_at\": \"2020-10-05\",\n      \"revenue_movement_type\": \"none\",\n      \"payment_type\": \"additional\",\n      \"description\": \"setup fee\",\n      \"add_time\": \"2020-07-30 13:54:59\",\n      \"update_time\": \"2020-07-30 13:54:59\"\n    },\n    {\n      \"id\": 60,\n      \"subscription_id\": 22,\n      \"deal_id\": 35,\n      \"is_active\": true,\n      \"amount\": 1000,\n      \"currency\": \"usd\",\n      \"change_amount\": 0,\n      \"due_at\": \"2020-11-05\",\n      \"revenue_movement_type\": \"recurring\",\n      \"payment_type\": \"recurring\",\n      \"description\": \"\",\n      \"add_time\": \"2020-07-30 13:54:59\",\n      \"update_time\": \"2020-07-30 13:54:59\"\n    },\n    {\n      \"id\": 61,\n      \"subscription_id\": 22,\n      \"deal_id\": 35,\n      \"is_active\": true,\n      \"amount\": 0,\n      \"currency\": \"usd\",\n      \"change_amount\": -1000,\n      \"due_at\": \"2020-12-05\",\n      \"revenue_movement_type\": \"churn\",\n      \"payment_type\": \"recurring\",\n      \"description\": \"\",\n      \"add_time\": \"2020-07-30 13:54:59\",\n      \"update_time\": \"2020-07-30 13:54:59\"\n    },\n    {\n      \"id\": 63,\n      \"subscription_id\": 22,\n      \"deal_id\": 35,\n      \"is_active\": true,\n      \"amount\": 150,\n      \"currency\": \"usd\",\n      \"change_amount\": 0,\n      \"due_at\": \"2020-12-05\",\n      \"revenue_movement_type\": \"none\",\n      \"payment_type\": \"additional\",\n      \"description\": \"cancelation fee\",\n      \"add_time\": \"2020-07-30 13:54:59\",\n      \"update_time\": \"2020-07-30 13:54:59\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add a recurring subscription",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"deal_id\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"cadence_type\": \"<string>\",\n  \"start_date\": \"<date>\",\n  \"cycle_amount\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"cycles_count\": \"<integer>\",\n  \"infinite\": \"<boolean>\",\n  \"payments\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"update_deal_value\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subscriptions/recurring",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								"recurring"
							]
						},
						"description": "Adds a new recurring subscription."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deal_id\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"cadence_type\": \"<string>\",\n  \"start_date\": \"<date>\",\n  \"cycle_amount\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"cycles_count\": \"<integer>\",\n  \"infinite\": \"<boolean>\",\n  \"payments\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"update_deal_value\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscriptions/recurring",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"recurring"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 21,\n    \"user_id\": 10382754,\n    \"deal_id\": 1121,\n    \"is_active\": true,\n    \"cycle_amount\": 100,\n    \"cycles_count\": 15,\n    \"infinite\": true,\n    \"currency\": \"USD\",\n    \"start_date\": \"2020-10-20\",\n    \"end_date\": \"2022-01-20\",\n    \"description\": \"pizza delivery\",\n    \"add_time\": \"2020-07-07 08:32:57\",\n    \"update_time\": \"2020-07-07 08:32:57\",\n    \"lifetime_value\": 1504.5,\n    \"cadence_type\": \"monthly\",\n    \"final_status\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Add an installment subscription",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"deal_id\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"payments\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"update_deal_value\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subscriptions/installment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								"installment"
							]
						},
						"description": "Adds a new installment subscription."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deal_id\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"payments\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"update_deal_value\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscriptions/installment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"installment"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 21,\n    \"user_id\": 10382754,\n    \"deal_id\": 1121,\n    \"is_active\": true,\n    \"cycle_amount\": 0,\n    \"cycles_count\": 0,\n    \"infinite\": false,\n    \"currency\": \"USD\",\n    \"start_date\": \"2020-10-20\",\n    \"end_date\": \"2022-01-20\",\n    \"description\": \"pizza delivery\",\n    \"add_time\": \"2020-07-07 08:32:57\",\n    \"update_time\": \"2020-07-07 08:32:57\",\n    \"lifetime_value\": 250,\n    \"cadence_type\": \"custom\",\n    \"final_status\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Update a recurring subscription",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"effective_date\": \"<date>\",\n  \"description\": \"<string>\",\n  \"cycle_amount\": \"<integer>\",\n  \"payments\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"update_deal_value\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subscriptions/recurring/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								"recurring",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the subscription"
								}
							]
						},
						"description": "Updates a recurring subscription."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"effective_date\": \"<date>\",\n  \"description\": \"<string>\",\n  \"cycle_amount\": \"<integer>\",\n  \"payments\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"update_deal_value\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscriptions/recurring/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"recurring",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the subscription"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 21,\n    \"user_id\": 10382754,\n    \"deal_id\": 1121,\n    \"is_active\": true,\n    \"cycle_amount\": 100,\n    \"cycles_count\": 15,\n    \"infinite\": true,\n    \"currency\": \"USD\",\n    \"start_date\": \"2020-10-20\",\n    \"end_date\": \"2022-01-20\",\n    \"description\": \"pizza delivery\",\n    \"add_time\": \"2020-07-07 08:32:57\",\n    \"update_time\": \"2020-07-07 08:32:57\",\n    \"lifetime_value\": 1504.5,\n    \"cadence_type\": \"monthly\",\n    \"final_status\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Update an installment subscription",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"payments\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"update_deal_value\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subscriptions/installment/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								"installment",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the subscription"
								}
							]
						},
						"description": "Updates an installment subscription."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"payments\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"update_deal_value\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscriptions/installment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"installment",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the subscription"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 21,\n    \"user_id\": 10382754,\n    \"deal_id\": 1121,\n    \"is_active\": true,\n    \"cycle_amount\": 0,\n    \"cycles_count\": 0,\n    \"infinite\": false,\n    \"currency\": \"USD\",\n    \"start_date\": \"2020-10-20\",\n    \"end_date\": \"2022-01-20\",\n    \"description\": \"pizza delivery\",\n    \"add_time\": \"2020-07-07 08:32:57\",\n    \"update_time\": \"2020-07-07 08:32:57\",\n    \"lifetime_value\": 250,\n    \"cadence_type\": \"custom\",\n    \"final_status\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Cancel a recurring subscription",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"end_date\": \"<date>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subscriptions/recurring/:id/cancel",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								"recurring",
								":id",
								"cancel"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the subscription"
								}
							]
						},
						"description": "Cancels a recurring subscription."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"end_date\": \"<date>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscriptions/recurring/:id/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"recurring",
										":id",
										"cancel"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the subscription"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 21,\n    \"user_id\": 10382754,\n    \"deal_id\": 1121,\n    \"is_active\": true,\n    \"cycle_amount\": 100,\n    \"cycles_count\": 15,\n    \"infinite\": true,\n    \"currency\": \"USD\",\n    \"start_date\": \"2020-10-20\",\n    \"end_date\": \"2022-01-20\",\n    \"description\": \"pizza delivery\",\n    \"add_time\": \"2020-07-07 08:32:57\",\n    \"update_time\": \"2020-07-07 08:32:57\",\n    \"lifetime_value\": 1504.5,\n    \"cadence_type\": \"monthly\",\n    \"final_status\": null\n  }\n}"
						}
					]
				}
			],
			"description": "Subscriptions represent the revenue that is occurring over time with payments of varying amounts and payment dates (installment subscription) or over fixed intervals of time with payments of the same amount (recurring subscription).\n"
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Get all tasks",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks?cursor=<string>&limit=<integer>&assignee_id=<integer>&project_id=<integer>&parent_task_id=<integer>&done=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "cursor",
									"value": "<string>",
									"description": "For pagination, the marker (an opaque string value) representing the first item on the next page"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "For pagination, the limit of entries to be returned. If not provided, up to 500 items will be returned."
								},
								{
									"key": "assignee_id",
									"value": "<integer>",
									"description": "If supplied, only tasks that are assigned to this user are returned"
								},
								{
									"key": "project_id",
									"value": "<integer>",
									"description": "If supplied, only tasks that are assigned to this project are returned"
								},
								{
									"key": "parent_task_id",
									"value": "<integer>",
									"description": "If `null` is supplied then only parent tasks are returned. If integer is supplied then only subtasks of a specific task are returned. By default all tasks are returned."
								},
								{
									"key": "done",
									"value": "<number>",
									"description": "Whether the task is done or not. `0` = Not done, `1` = Done. If not omitted then returns both done and not done tasks."
								}
							]
						},
						"description": "Returns all tasks. This is a cursor-paginated endpoint. For more information, please refer to our documentation on <a href=\"https://pipedrive.readme.io/docs/core-api-concepts-pagination\" target=\"_blank\" rel=\"noopener noreferrer\">pagination</a>."
					},
					"response": [
						{
							"name": "A list of tasks.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tasks?cursor=<string>&limit=500&assignee_id=<integer>&project_id=<integer>&parent_task_id=<integer>&done=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "500"
										},
										{
											"key": "assignee_id",
											"value": "<integer>"
										},
										{
											"key": "project_id",
											"value": "<integer>"
										},
										{
											"key": "parent_task_id",
											"value": "<integer>"
										},
										{
											"key": "done",
											"value": "<number>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"title\": \"Task 1\",\n      \"creator_id\": 2,\n      \"description\": \"Task description\",\n      \"done\": 0,\n      \"due_date\": \"2023-10-11\",\n      \"parent_task_id\": 2,\n      \"assignee_id\": 2,\n      \"add_time\": \"2023-09-14 08:14:40.288\",\n      \"update_time\": \"2023-09-14 08:14:40.288\",\n      \"marked_as_done_time\": \"2023-09-22 08:14:40.288\",\n      \"project_id\": 1\n    }\n  ],\n  \"additional_data\": {\n    \"next_cursor\": \"eyJhY3Rpdml0aWVzIjoyN30\"\n  }\n}"
						}
					]
				},
				{
					"name": "Add a task",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"project_id\": \"<number>\",\n  \"description\": \"<string>\",\n  \"parent_task_id\": \"<number>\",\n  \"assignee_id\": \"<number>\",\n  \"done\": \"<number>\",\n  \"due_date\": \"<date>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks"
							]
						},
						"description": "Adds a new task."
					},
					"response": [
						{
							"name": "Created task.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"project_id\": \"<number>\",\n  \"description\": \"<string>\",\n  \"parent_task_id\": \"<number>\",\n  \"assignee_id\": \"<number>\",\n  \"done\": \"<number>\",\n  \"due_date\": \"<date>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"title\": \"Task 1\",\n    \"creator_id\": 2,\n    \"description\": \"Task description\",\n    \"done\": 0,\n    \"due_date\": \"2023-10-11\",\n    \"parent_task_id\": 2,\n    \"assignee_id\": 2,\n    \"add_time\": \"2023-09-14 08:14:40.288\",\n    \"update_time\": \"2023-09-14 08:14:40.288\",\n    \"marked_as_done_time\": \"2023-09-22 08:14:40.288\",\n    \"project_id\": 1\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Get details of a task",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the task"
								}
							]
						},
						"description": "Returns the details of a specific task."
					},
					"response": [
						{
							"name": "Get a task.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the task"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"title\": \"Task 1\",\n    \"creator_id\": 2,\n    \"description\": \"Task description\",\n    \"done\": 0,\n    \"due_date\": \"2023-10-11\",\n    \"parent_task_id\": 2,\n    \"assignee_id\": 2,\n    \"add_time\": \"2023-09-14 08:14:40.288\",\n    \"update_time\": \"2023-09-14 08:14:40.288\",\n    \"marked_as_done_time\": \"2023-09-22 08:14:40.288\",\n    \"project_id\": 1\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Update a task",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<object>",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tasks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the task"
								}
							]
						},
						"description": "Updates a task."
					},
					"response": [
						{
							"name": "Updated task.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"project_id\": \"<number>\",\n  \"description\": \"<string>\",\n  \"parent_task_id\": \"<number>\",\n  \"assignee_id\": \"<number>\",\n  \"done\": \"<number>\",\n  \"due_date\": \"<date>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the task"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"title\": \"Task 1\",\n    \"creator_id\": 2,\n    \"description\": \"Task description\",\n    \"done\": 0,\n    \"due_date\": \"2023-10-11\",\n    \"parent_task_id\": 2,\n    \"assignee_id\": 2,\n    \"add_time\": \"2023-09-14 08:14:40.288\",\n    \"update_time\": \"2023-09-14 08:14:40.288\",\n    \"marked_as_done_time\": \"2023-09-22 08:14:40.288\",\n    \"project_id\": 1\n  },\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Delete a task",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the task"
								}
							]
						},
						"description": "Marks a task as deleted. If the task has subtasks then those will also be deleted."
					},
					"response": [
						{
							"name": "Deleted task.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the task"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1\n  },\n  \"additional_data\": null\n}"
						}
					]
				}
			],
			"description": "Tasks represent actions that need to be completed and must be associated with a project. Tasks have an optional due date, can be assigned to a user and can have subtasks.\n"
		},
		{
			"name": "UserConnections",
			"item": [
				{
					"name": "Get all user connections",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/userConnections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userConnections"
							]
						},
						"description": "Returns data about all connections for the authorized user."
					},
					"response": [
						{
							"name": "The data of user connections",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userConnections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userConnections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"google\": \"awesomeid-123-4567890\"\n  }\n}"
						},
						{
							"name": "Unauthorized response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userConnections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userConnections"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"unauthorized access\",\n  \"errorCode\": 401\n}"
						}
					]
				}
			],
			"description": "Manage user connections.\n"
		},
		{
			"name": "UserSettings",
			"item": [
				{
					"name": "List settings of an authorized user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/userSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userSettings"
							]
						},
						"description": "Lists the settings of an authorized user. Example response contains a shortened list of settings."
					},
					"response": [
						{
							"name": "The list of user settings",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSettings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"marketplace_team\": false,\n    \"list_limit\": 100,\n    \"beta_app\": true,\n    \"prevent_salesphone_callto_override\": false,\n    \"file_upload_destination\": \"s3\",\n    \"callto_link_syntax\": \"callto:[number]\",\n    \"autofill_deal_expected_close_date\": false,\n    \"person_duplicate_condition\": \"name && (org_id || email || phone)\"\n  }\n}"
						},
						{
							"name": "Unauthorized response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSettings"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"unauthorized access\",\n  \"errorCode\": 401\n}"
						}
					]
				}
			],
			"description": "View user settings.\n"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get all users",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Returns data about all users within the company."
					},
					"response": [
						{
							"name": "The list of user objects",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"John Doe\",\n      \"default_currency\": \"EUR\",\n      \"locale\": \"et_EE\",\n      \"lang\": 1,\n      \"email\": \"john@pipedrive.com\",\n      \"phone\": \"0000-0001\",\n      \"activated\": true,\n      \"last_login\": \"2019-11-21 08:45:56\",\n      \"created\": \"2018-11-13 09:16:26\",\n      \"modified\": \"2019-11-21 08:45:56\",\n      \"has_created_company\": true,\n      \"access\": [\n        {\n          \"app\": \"sales\",\n          \"admin\": true,\n          \"permission_set_id\": \"62cc4d7f-4038-4352-abf3-a8c1c822b631\"\n        },\n        {\n          \"app\": \"global\",\n          \"admin\": true,\n          \"permission_set_id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\"\n        },\n        {\n          \"app\": \"account_settings\",\n          \"admin\": true,\n          \"permission_set_id\": \"982c5ce5-b8ba-4b47-b102-9da024f4b990\"\n        }\n      ],\n      \"active_flag\": true,\n      \"timezone_name\": \"Europe/Berlin\",\n      \"timezone_offset\": \"+03:00\",\n      \"role_id\": 1,\n      \"icon_url\": \"https://upload.wikimedia.org/wikipedia/en/thumb/e/e0/WPVG_icon_2016.svg/1024px-WPVG_icon_2016.svg.png\",\n      \"is_you\": true,\n      \"is_deleted\": false\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Jane Doe\",\n      \"default_currency\": \"EUR\",\n      \"locale\": \"et_EE\",\n      \"lang\": 1,\n      \"email\": \"jane@pipedrive.com\",\n      \"phone\": \"0000-0002\",\n      \"activated\": true,\n      \"last_login\": \"2019-09-11 11:43:54\",\n      \"created\": \"2019-01-22 10:43:47\",\n      \"modified\": \"2019-11-21 09:49:50\",\n      \"has_created_company\": false,\n      \"access\": [\n        {\n          \"app\": \"sales\",\n          \"admin\": false,\n          \"permission_set_id\": \"f07d229d-088a-4144-a40f-1fe64295d180\"\n        },\n        {\n          \"app\": \"global\",\n          \"admin\": true,\n          \"permission_set_id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\"\n        }\n      ],\n      \"active_flag\": true,\n      \"timezone_name\": \"Europe/Berlin\",\n      \"timezone_offset\": \"+03:00\",\n      \"role_id\": 1,\n      \"icon_url\": null,\n      \"is_you\": false,\n      \"is_deleted\": false\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add a new user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<string>\",\n  \"access\": [\n    {\n      \"app\": \"sales\"\n    }\n  ],\n  \"active_flag\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Adds a new user to the company, returns the ID upon success."
					},
					"response": [
						{
							"name": "The data of the user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"access\": [\n    {\n      \"app\": \"sales\"\n    }\n  ],\n  \"active_flag\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"name\": \"Jane Doe\",\n    \"default_currency\": \"EUR\",\n    \"locale\": \"et_EE\",\n    \"lang\": 1,\n    \"email\": \"jane@pipedrive.com\",\n    \"phone\": \"0000-0002\",\n    \"activated\": true,\n    \"last_login\": \"2019-09-11 11:43:54\",\n    \"created\": \"2019-01-22 10:43:47\",\n    \"modified\": \"2019-11-21 09:49:50\",\n    \"has_created_company\": false,\n    \"access\": [\n      {\n        \"app\": \"sales\",\n        \"admin\": false,\n        \"permission_set_id\": \"f07d229d-088a-4144-a40f-1fe64295d180\"\n      },\n      {\n        \"app\": \"global\",\n        \"admin\": true,\n        \"permission_set_id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\"\n      }\n    ],\n    \"active_flag\": true,\n    \"timezone_name\": \"Europe/Berlin\",\n    \"timezone_offset\": \"+03:00\",\n    \"role_id\": 1,\n    \"icon_url\": null,\n    \"is_you\": false,\n    \"is_deleted\": false\n  }\n}"
						},
						{
							"name": "Forbidden response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"access\": [\n    {\n      \"app\": \"sales\"\n    }\n  ],\n  \"active_flag\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You do not have permissions to do this.\",\n  \"error_info\": \"Please check developers.pipedrive.com\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "Find users by name",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/find?term=<string>&search_by_email=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"find"
							],
							"query": [
								{
									"key": "term",
									"value": "<string>",
									"description": "(Required) The search term to look for"
								},
								{
									"key": "search_by_email",
									"value": "0",
									"description": "When enabled, the term will only be matched against email addresses of users. Default: `false`."
								}
							]
						},
						"description": "Finds users by their name."
					},
					"response": [
						{
							"name": "The list of user objects",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/find?term=<string>&search_by_email=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"find"
									],
									"query": [
										{
											"key": "term",
											"value": "<string>"
										},
										{
											"key": "search_by_email",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"John Doe\",\n      \"default_currency\": \"EUR\",\n      \"locale\": \"et_EE\",\n      \"lang\": 1,\n      \"email\": \"john@pipedrive.com\",\n      \"phone\": \"0000-0001\",\n      \"activated\": true,\n      \"last_login\": \"2019-11-21 08:45:56\",\n      \"created\": \"2018-11-13 09:16:26\",\n      \"modified\": \"2019-11-21 08:45:56\",\n      \"has_created_company\": true,\n      \"access\": [\n        {\n          \"app\": \"sales\",\n          \"admin\": true,\n          \"permission_set_id\": \"62cc4d7f-4038-4352-abf3-a8c1c822b631\"\n        },\n        {\n          \"app\": \"global\",\n          \"admin\": true,\n          \"permission_set_id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\"\n        },\n        {\n          \"app\": \"account_settings\",\n          \"admin\": true,\n          \"permission_set_id\": \"982c5ce5-b8ba-4b47-b102-9da024f4b990\"\n        }\n      ],\n      \"active_flag\": true,\n      \"timezone_name\": \"Europe/Berlin\",\n      \"timezone_offset\": \"+03:00\",\n      \"role_id\": 1,\n      \"icon_url\": \"https://upload.wikimedia.org/wikipedia/en/thumb/e/e0/WPVG_icon_2016.svg/1024px-WPVG_icon_2016.svg.png\",\n      \"is_you\": true,\n      \"is_deleted\": false\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Jane Doe\",\n      \"default_currency\": \"EUR\",\n      \"locale\": \"et_EE\",\n      \"lang\": 1,\n      \"email\": \"jane@pipedrive.com\",\n      \"phone\": \"0000-0002\",\n      \"activated\": true,\n      \"last_login\": \"2019-09-11 11:43:54\",\n      \"created\": \"2019-01-22 10:43:47\",\n      \"modified\": \"2019-11-21 09:49:50\",\n      \"has_created_company\": false,\n      \"access\": [\n        {\n          \"app\": \"sales\",\n          \"admin\": false,\n          \"permission_set_id\": \"f07d229d-088a-4144-a40f-1fe64295d180\"\n        },\n        {\n          \"app\": \"global\",\n          \"admin\": true,\n          \"permission_set_id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\"\n        }\n      ],\n      \"active_flag\": true,\n      \"timezone_name\": \"Europe/Berlin\",\n      \"timezone_offset\": \"+03:00\",\n      \"role_id\": 1,\n      \"icon_url\": null,\n      \"is_you\": false,\n      \"is_deleted\": false\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get current user data",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"me"
							]
						},
						"description": "Returns data about an authorized user within the company with bound company data: company ID, company name, and domain. Note that the `locale` property means 'Date/number format' in the Pipedrive account settings, not the chosen language."
					},
					"response": [
						{
							"name": "The data of the logged in user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Me\",\n    \"default_currency\": \"EUR\",\n    \"locale\": \"et_EE\",\n    \"lang\": 1,\n    \"email\": \"me@pipedrive.com\",\n    \"phone\": \"0000-0000\",\n    \"activated\": true,\n    \"last_login\": \"2019-11-21 08:45:56\",\n    \"created\": \"2018-11-13 09:16:26\",\n    \"modified\": \"2019-11-21 08:45:56\",\n    \"has_created_company\": true,\n    \"access\": [\n      {\n        \"app\": \"sales\",\n        \"admin\": true,\n        \"permission_set_id\": \"62cc4d7f-4038-4352-abf3-a8c1c822b631\"\n      },\n      {\n        \"app\": \"global\",\n        \"admin\": true,\n        \"permission_set_id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\"\n      },\n      {\n        \"app\": \"account_settings\",\n        \"admin\": true,\n        \"permission_set_id\": \"982c5ce5-b8ba-4b47-b102-9da024f4b990\"\n      }\n    ],\n    \"active_flag\": true,\n    \"timezone_name\": \"Europe/Berlin\",\n    \"timezone_offset\": \"+03:00\",\n    \"role_id\": 1,\n    \"icon_url\": \"https://upload.wikimedia.org/wikipedia/en/thumb/e/e0/WPVG_icon_2016.svg/1024px-WPVG_icon_2016.svg.png\",\n    \"is_you\": true,\n    \"is_deleted\": false,\n    \"company_id\": 54235233,\n    \"company_name\": \"Pipedrive\",\n    \"company_domain\": \"pipedrive-12g53f\",\n    \"company_country\": \"EE\",\n    \"company_industry\": \"IT Services\",\n    \"language\": {\n      \"language_code\": \"en\",\n      \"country_code\": \"US\"\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"me"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"unauthorized access\",\n  \"errorCode\": 401\n}"
						}
					]
				},
				{
					"name": "Get one user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the user"
								}
							]
						},
						"description": "Returns data about a specific user within the company."
					},
					"response": [
						{
							"name": "The data of the user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"name\": \"Jane Doe\",\n    \"default_currency\": \"EUR\",\n    \"locale\": \"et_EE\",\n    \"lang\": 1,\n    \"email\": \"jane@pipedrive.com\",\n    \"phone\": \"0000-0002\",\n    \"activated\": true,\n    \"last_login\": \"2019-09-11 11:43:54\",\n    \"created\": \"2019-01-22 10:43:47\",\n    \"modified\": \"2019-11-21 09:49:50\",\n    \"has_created_company\": false,\n    \"access\": [\n      {\n        \"app\": \"sales\",\n        \"admin\": false,\n        \"permission_set_id\": \"f07d229d-088a-4144-a40f-1fe64295d180\"\n      },\n      {\n        \"app\": \"global\",\n        \"admin\": true,\n        \"permission_set_id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\"\n      }\n    ],\n    \"active_flag\": true,\n    \"timezone_name\": \"Europe/Berlin\",\n    \"timezone_offset\": \"+03:00\",\n    \"role_id\": 1,\n    \"icon_url\": null,\n    \"is_you\": false,\n    \"is_deleted\": false\n  }\n}"
						},
						{
							"name": "User with specified ID does not exist or is inaccessible",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"User not found or not accessible.\"\n}"
						}
					]
				},
				{
					"name": "Update user details",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"active_flag\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the user"
								}
							]
						},
						"description": "Updates the properties of a user. Currently, only `active_flag` can be updated."
					},
					"response": [
						{
							"name": "The data of the user",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"active_flag\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"name\": \"Jane Doe\",\n    \"default_currency\": \"EUR\",\n    \"locale\": \"et_EE\",\n    \"lang\": 1,\n    \"email\": \"jane@pipedrive.com\",\n    \"phone\": \"0000-0002\",\n    \"activated\": true,\n    \"last_login\": \"2019-09-11 11:43:54\",\n    \"created\": \"2019-01-22 10:43:47\",\n    \"modified\": \"2019-11-21 09:49:50\",\n    \"has_created_company\": false,\n    \"access\": [\n      {\n        \"app\": \"sales\",\n        \"admin\": false,\n        \"permission_set_id\": \"f07d229d-088a-4144-a40f-1fe64295d180\"\n      },\n      {\n        \"app\": \"global\",\n        \"admin\": true,\n        \"permission_set_id\": \"233b7976-39bd-43a9-b305-ef3a2b0998e5\"\n      }\n    ],\n    \"active_flag\": true,\n    \"timezone_name\": \"Europe/Berlin\",\n    \"timezone_offset\": \"+03:00\",\n    \"role_id\": 1,\n    \"icon_url\": null,\n    \"is_you\": false,\n    \"is_deleted\": false\n  }\n}"
						},
						{
							"name": "Forbidden response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"active_flag\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You do not have permissions to do this.\",\n  \"error_info\": \"Please check developers.pipedrive.com\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						},
						{
							"name": "User with specified ID does not exist or is inaccessible",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"active_flag\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"User not found or not accessible.\"\n}"
						}
					]
				},
				{
					"name": "List followers of a user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"followers"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the user"
								}
							]
						},
						"description": "Lists the followers of a specific user."
					},
					"response": [
						{
							"name": "The list of user IDs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/followers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"followers"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    2,\n    5,\n    8\n  ]\n}"
						},
						{
							"name": "Forbidden response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/followers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"followers"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"You do not have permissions to do this.\",\n  \"error_info\": \"Please check developers.pipedrive.com\",\n  \"data\": null,\n  \"additional_data\": null\n}"
						}
					]
				},
				{
					"name": "List user permissions",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"permissions"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the user"
								}
							]
						},
						"description": "Lists aggregated permissions over all assigned permission sets for a user."
					},
					"response": [
						{
							"name": "The list of user permissions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"permissions"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"can_add_custom_fields\": true,\n    \"can_bulk_edit_items\": true,\n    \"can_change_visibility_of_items\": true,\n    \"can_create_own_workflow\": true\n  }\n}"
						}
					]
				},
				{
					"name": "List role assignments",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/roleAssignments?start=0&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"roleAssignments"
							],
							"query": [
								{
									"key": "start",
									"value": "0",
									"description": "Pagination start"
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "Items shown per page"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the user"
								}
							]
						},
						"description": "Lists role assignments for a user."
					},
					"response": [
						{
							"name": "List assignments for a role",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/roleAssignments?start=0&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"roleAssignments"
									],
									"query": [
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"user_id\": 1234567,\n      \"role_id\": 2,\n      \"parent_role_id\": 1,\n      \"name\": \"Admins\",\n      \"active_flag\": true,\n      \"type\": \"1\"\n    }\n  ],\n  \"additional_data\": {\n    \"pagination\": {\n      \"start\": 0,\n      \"limit\": 100,\n      \"more_items_in_collection\": false\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List user role settings",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/roleSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"roleSettings"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the user"
								}
							]
						},
						"description": "Lists the settings of user's assigned role."
					},
					"response": [
						{
							"name": "List role settings",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/roleSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"roleSettings"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"deal_default_visibility\": 1,\n    \"lead_default_visibility\": 1,\n    \"org_default_visibility\": 1,\n    \"person_default_visibility\": 1,\n    \"product_default_visibility\": 1\n  }\n}"
						}
					]
				}
			],
			"description": "Users are people with access to your Pipedrive account. A user may belong to one or many Pipedrive accounts, so deleting a user from one Pipedrive account will not remove the user from the data store if he/she is connected to multiple accounts. Users should not be confused with persons.\n"
		},
		{
			"name": "Webhooks",
			"item": [
				{
					"name": "Get all Webhooks",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							]
						},
						"description": "Returns data about all the Webhooks of a company."
					},
					"response": [
						{
							"name": "The list of webhooks objects from the logged in company and user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"ok\",\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"company_id\": 1,\n      \"owner_id\": 1,\n      \"user_id\": 1,\n      \"event_action\": \"added\",\n      \"event_object\": \"activityType\",\n      \"subscription_url\": \"http://example.org\",\n      \"version\": \"2.0\",\n      \"is_active\": 1,\n      \"add_time\": \"2019-10-25T08:25:27.000Z\",\n      \"remove_time\": null,\n      \"type\": \"general\",\n      \"http_auth_user\": null,\n      \"http_auth_password\": null,\n      \"remove_reason\": null,\n      \"last_delivery_time\": null,\n      \"last_http_status\": null,\n      \"admin_id\": 1\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"unauthorized access\",\n  \"errorCode\": 401\n}"
						}
					]
				},
				{
					"name": "Create a new Webhook",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"subscription_url\": \"<string>\",\n  \"event_action\": \"<string>\",\n  \"event_object\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"http_auth_user\": \"<string>\",\n  \"http_auth_password\": \"<string>\",\n  \"version\": \"2.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							]
						},
						"description": "Creates a new Webhook and returns its details. Note that specifying an event which triggers the Webhook combines 2 parameters - `event_action` and `event_object`. E.g., use `*.*` for getting notifications about all events, `create.deal` for any newly added deals, `delete.persons` for any deleted persons, etc. See <a href=\"https://pipedrive.readme.io/docs/guide-for-webhooks-v2?ref=api_reference\" target=\"_blank\" rel=\"noopener noreferrer\">the guide for Webhooks</a> for more details."
					},
					"response": [
						{
							"name": "The created webhook object",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subscription_url\": \"<string>\",\n  \"event_action\": \"<string>\",\n  \"event_object\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"http_auth_user\": \"<string>\",\n  \"http_auth_password\": \"<string>\",\n  \"version\": \"2.0\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"ok\",\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"company_id\": 1,\n    \"owner_id\": 1,\n    \"user_id\": 1,\n    \"event_action\": \"added\",\n    \"event_object\": \"activityType\",\n    \"subscription_url\": \"http://example.org\",\n    \"version\": \"2.0\",\n    \"is_active\": 1,\n    \"add_time\": \"2019-10-25T08:25:27.000Z\",\n    \"remove_time\": null,\n    \"type\": \"general\",\n    \"http_auth_user\": null,\n    \"http_auth_password\": null,\n    \"remove_reason\": null,\n    \"last_delivery_time\": null,\n    \"last_http_status\": null,\n    \"admin_id\": 1\n  }\n}"
						},
						{
							"name": "The bad response on webhook creation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subscription_url\": \"<string>\",\n  \"event_action\": \"<string>\",\n  \"event_object\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"http_auth_user\": \"<string>\",\n  \"http_auth_password\": \"<string>\",\n  \"version\": \"2.0\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"error\",\n  \"success\": false,\n  \"errors\": {\n    \"subscription_url\": [\n      \"invalid or non-reachable URL\"\n    ]\n  }\n}"
						},
						{
							"name": "Unauthorized response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subscription_url\": \"<string>\",\n  \"event_action\": \"<string>\",\n  \"event_object\": \"<string>\",\n  \"user_id\": \"<integer>\",\n  \"http_auth_user\": \"<string>\",\n  \"http_auth_password\": \"<string>\",\n  \"version\": \"2.0\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"unauthorized access\",\n  \"errorCode\": 401\n}"
						}
					]
				},
				{
					"name": "Delete existing Webhook",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/webhooks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The ID of the Webhook to delete"
								}
							]
						},
						"description": "Deletes the specified Webhook."
					},
					"response": [
						{
							"name": "The webhook deletion success response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the Webhook to delete"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"ok\",\n  \"success\": true\n}"
						},
						{
							"name": "Unauthorized response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the Webhook to delete"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"error\": \"unauthorized access\",\n  \"errorCode\": 401\n}"
						},
						{
							"name": "The webhook deletion forbidden response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the Webhook to delete"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"message\": \"Forbidden\"\n}"
						},
						{
							"name": "The webhook deletion not found response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-token",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the Webhook to delete"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"error\",\n  \"success\": false,\n  \"errors\": {\n    \"id\": [\n      \"not found\"\n    ]\n  }\n}"
						}
					]
				}
			],
			"description": "See <a href=\"https://pipedrive.readme.io/docs/guide-for-webhooks-v2?ref=api_reference\" target=\"_blank\" rel=\"noopener noreferrer\">the guide for Webhooks</a> for more information."
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.pipedrive.com/v1",
			"type": "string"
		}
	]
}